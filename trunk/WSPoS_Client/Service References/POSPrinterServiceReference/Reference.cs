//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WSPoS.POSPrinterServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UposException", Namespace="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/")]
    [System.SerializableAttribute()]
    public partial class UposException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WSPoS.POSPrinterServiceReference.ErrorCode ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCodeExtendedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WSPoS.POSPrinterServiceReference.ErrorCode ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorCodeExtended {
            get {
                return this.ErrorCodeExtendedField;
            }
            set {
                if ((this.ErrorCodeExtendedField.Equals(value) != true)) {
                    this.ErrorCodeExtendedField = value;
                    this.RaisePropertyChanged("ErrorCodeExtended");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ErrorCode", Namespace="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/")]
    public enum ErrorCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Busy = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Claimed = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Closed = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deprecated = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Disabled = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Exists = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Extended = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Failure = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Illegal = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoExist = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoHardware = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoService = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotClaimed = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Offline = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Timeout = 15,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PageModePrintControl", Namespace="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/")]
    public enum PageModePrintControl : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cancel = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Normal = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PageMode = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrintSave = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PrinterStation", Namespace="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/")]
    public enum PrinterStation : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Journal = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Receipt = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Slip = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TwoReceiptJournal = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TwoSlipJournal = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TwoSlipReceipt = 6,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BarCodeTextPosition", Namespace="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/")]
    public enum BarCodeTextPosition : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Above = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Below = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BitmapType", Namespace="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/")]
    public enum BitmapType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bmp = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Gif = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Jpeg = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PrinterLogoLocation", Namespace="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/")]
    public enum PrinterLogoLocation : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bottom = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Top = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PrinterTransactionControl", Namespace="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/")]
    public enum PrinterTransactionControl : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Normal = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Transaction = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="RotationList", Namespace="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/", ItemName="Rotation")]
    [System.SerializableAttribute()]
    public class RotationList : System.Collections.Generic.List<WSPoS.POSPrinterServiceReference.Rotation> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Rotation", Namespace="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/")]
    public enum Rotation : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Left90 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Normal = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Right90 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rotate180 = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PrinterSide", Namespace="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/")]
    public enum PrinterSide : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Opposite = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Side1 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Side2 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PrinterCartridgeStates", Namespace="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/")]
    public enum PrinterCartridgeStates : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cleaning = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Empty = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NearEnd = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Removed = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HealthCheckLevel", Namespace="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/")]
    public enum HealthCheckLevel : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        External = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Interactive = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Internal = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DirectIOData", Namespace="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.ErrorCode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.PageModePrintControl))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.PrinterStation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.BarCodeTextPosition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.BitmapType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.PrinterLogoLocation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.PrinterTransactionControl))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.RotationList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.Rotation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.PrinterSide))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.PrinterCartridgeStates))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.HealthCheckLevel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.CompareFirmwareResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.StatisticList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.Statistic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.PositionList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.PrinterLineStyle))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.LineCharsList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.FontTypefaceList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.MapMode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.Point))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.Rectangle))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.PageModePrintDirection))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.PrinterCartridgeNotify))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.CharacterSetList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.PrinterErrorLevel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.PowerReporting))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.PowerNotification))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.PowerState))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.ControlState))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.UposVersion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.CharacterSetCapability))]
    public partial class DirectIOData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object ObjField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Data {
            get {
                return this.DataField;
            }
            set {
                if ((this.DataField.Equals(value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Obj {
            get {
                return this.ObjField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjField, value) != true)) {
                    this.ObjField = value;
                    this.RaisePropertyChanged("Obj");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompareFirmwareResult", Namespace="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/")]
    public enum CompareFirmwareResult : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Different = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Newer = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Older = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Same = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="StatisticList", Namespace="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/", ItemName="Statistic")]
    [System.SerializableAttribute()]
    public class StatisticList : System.Collections.Generic.List<WSPoS.POSPrinterServiceReference.Statistic> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Statistic", Namespace="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/")]
    [System.SerializableAttribute()]
    public partial class Statistic : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PositionList", Namespace="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/", ItemName="Position")]
    [System.SerializableAttribute()]
    public class PositionList : System.Collections.Generic.List<int> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PrinterLineStyle", Namespace="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/")]
    public enum PrinterLineStyle : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BrokenLine = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChainLine = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DoubleSolidLine = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SingleSolidLine = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="LineCharsList", Namespace="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/", ItemName="LineChars")]
    [System.SerializableAttribute()]
    public class LineCharsList : System.Collections.Generic.List<int> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="FontTypefaceList", Namespace="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/", ItemName="FontTypeface")]
    [System.SerializableAttribute()]
    public class FontTypefaceList : System.Collections.Generic.List<string> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MapMode", Namespace="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/")]
    public enum MapMode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Dots = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        English = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Metric = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Twips = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Point", Namespace="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/")]
    [System.SerializableAttribute()]
    public partial class Point : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int XField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int X {
            get {
                return this.XField;
            }
            set {
                if ((this.XField.Equals(value) != true)) {
                    this.XField = value;
                    this.RaisePropertyChanged("X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Y {
            get {
                return this.YField;
            }
            set {
                if ((this.YField.Equals(value) != true)) {
                    this.YField = value;
                    this.RaisePropertyChanged("Y");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Rectangle", Namespace="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/")]
    [System.SerializableAttribute()]
    public partial class Rectangle : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int XField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Height {
            get {
                return this.HeightField;
            }
            set {
                if ((this.HeightField.Equals(value) != true)) {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Width {
            get {
                return this.WidthField;
            }
            set {
                if ((this.WidthField.Equals(value) != true)) {
                    this.WidthField = value;
                    this.RaisePropertyChanged("Width");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int X {
            get {
                return this.XField;
            }
            set {
                if ((this.XField.Equals(value) != true)) {
                    this.XField = value;
                    this.RaisePropertyChanged("X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Y {
            get {
                return this.YField;
            }
            set {
                if ((this.YField.Equals(value) != true)) {
                    this.YField = value;
                    this.RaisePropertyChanged("Y");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PageModePrintDirection", Namespace="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/")]
    public enum PageModePrintDirection : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BottomToTop = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LeftToRight = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RightToLeft = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TopToBottom = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PrinterCartridgeNotify", Namespace="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/")]
    public enum PrinterCartridgeNotify : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Disabled = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Enabled = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CharacterSetList", Namespace="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/", ItemName="CharacterSet")]
    [System.SerializableAttribute()]
    public class CharacterSetList : System.Collections.Generic.List<int> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PrinterErrorLevel", Namespace="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/")]
    public enum PrinterErrorLevel : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fatal = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Recoverable = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PowerReporting", Namespace="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/")]
    public enum PowerReporting : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Advanced = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Standard = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PowerNotification", Namespace="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/")]
    public enum PowerNotification : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Disabled = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Enabled = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PowerState", Namespace="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/")]
    public enum PowerState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Off = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Offline = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OffOffline = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Online = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ControlState", Namespace="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/")]
    public enum ControlState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Busy = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Closed = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Idle = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UposVersion", Namespace="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/")]
    [System.SerializableAttribute()]
    public partial class UposVersion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BuildField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MajorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Build {
            get {
                return this.BuildField;
            }
            set {
                if ((this.BuildField.Equals(value) != true)) {
                    this.BuildField = value;
                    this.RaisePropertyChanged("Build");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Major {
            get {
                return this.MajorField;
            }
            set {
                if ((this.MajorField.Equals(value) != true)) {
                    this.MajorField = value;
                    this.RaisePropertyChanged("Major");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Minor {
            get {
                return this.MinorField;
            }
            set {
                if ((this.MinorField.Equals(value) != true)) {
                    this.MinorField = value;
                    this.RaisePropertyChanged("Minor");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CharacterSetCapability", Namespace="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/")]
    public enum CharacterSetCapability : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Alpha = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ascii = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Kana = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Kanji = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unicode = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/", ConfigurationName="POSPrinterServiceReference.POSPrinter")]
    public interface POSPrinter {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/EndInsertion", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/EndInsertionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void EndInsertion();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/EndInsertion", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/EndInsertionResponse")]
        System.IAsyncResult BeginEndInsertion(System.AsyncCallback callback, object asyncState);
        
        void EndEndInsertion(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/EndRemoval", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/EndRemovalResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void EndRemoval();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/EndRemoval", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/EndRemovalResponse")]
        System.IAsyncResult BeginEndRemoval(System.AsyncCallback callback, object asyncState);
        
        void EndEndRemoval(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/MarkFeed", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/MarkFeedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void MarkFeed(int Type);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/MarkFeed", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/MarkFeedResponse")]
        System.IAsyncResult BeginMarkFeed(int Type, System.AsyncCallback callback, object asyncState);
        
        void EndMarkFeed(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/PageModePrint", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/PageModePrintResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void PageModePrint(WSPoS.POSPrinterServiceReference.PageModePrintControl Control);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/PageModePrint", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/PageModePrintResponse")]
        System.IAsyncResult BeginPageModePrint(WSPoS.POSPrinterServiceReference.PageModePrintControl Control, System.AsyncCallback callback, object asyncState);
        
        void EndPageModePrint(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/PrintBarCode", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/PrintBarCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void PrintBarCode(WSPoS.POSPrinterServiceReference.PrinterStation Station, string Data, int Symbology, int Height, int Width, int Alignment, WSPoS.POSPrinterServiceReference.BarCodeTextPosition TextPosition);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/PrintBarCode", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/PrintBarCodeResponse")]
        System.IAsyncResult BeginPrintBarCode(WSPoS.POSPrinterServiceReference.PrinterStation Station, string Data, int Symbology, int Height, int Width, int Alignment, WSPoS.POSPrinterServiceReference.BarCodeTextPosition TextPosition, System.AsyncCallback callback, object asyncState);
        
        void EndPrintBarCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/PrintBitmap", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/PrintBitmapResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void PrintBitmap(WSPoS.POSPrinterServiceReference.PrinterStation Station, string FileName, int Width, int Alignment);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/PrintBitmap", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/PrintBitmapResponse")]
        System.IAsyncResult BeginPrintBitmap(WSPoS.POSPrinterServiceReference.PrinterStation Station, string FileName, int Width, int Alignment, System.AsyncCallback callback, object asyncState);
        
        void EndPrintBitmap(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/PrintImmediate", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/PrintImmediateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void PrintImmediate(WSPoS.POSPrinterServiceReference.PrinterStation Station, string Data);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/PrintImmediate", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/PrintImmediateResponse")]
        System.IAsyncResult BeginPrintImmediate(WSPoS.POSPrinterServiceReference.PrinterStation Station, string Data, System.AsyncCallback callback, object asyncState);
        
        void EndPrintImmediate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/PrintMemoryBitmap", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/PrintMemoryBitmapResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void PrintMemoryBitmap(WSPoS.POSPrinterServiceReference.PrinterStation Station, byte[] Data, WSPoS.POSPrinterServiceReference.BitmapType Type, int Width, int Alignment);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/PrintMemoryBitmap", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/PrintMemoryBitmapResponse")]
        System.IAsyncResult BeginPrintMemoryBitmap(WSPoS.POSPrinterServiceReference.PrinterStation Station, byte[] Data, WSPoS.POSPrinterServiceReference.BitmapType Type, int Width, int Alignment, System.AsyncCallback callback, object asyncState);
        
        void EndPrintMemoryBitmap(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/PrintNormal", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/PrintNormalResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void PrintNormal(WSPoS.POSPrinterServiceReference.PrinterStation Station, string Data);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/PrintNormal", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/PrintNormalResponse")]
        System.IAsyncResult BeginPrintNormal(WSPoS.POSPrinterServiceReference.PrinterStation Station, string Data, System.AsyncCallback callback, object asyncState);
        
        void EndPrintNormal(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/PrintTwoNormal", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/PrintTwoNormalResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void PrintTwoNormal(WSPoS.POSPrinterServiceReference.PrinterStation Station, string Data1, string Data2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/PrintTwoNormal", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/PrintTwoNormalResponse")]
        System.IAsyncResult BeginPrintTwoNormal(WSPoS.POSPrinterServiceReference.PrinterStation Station, string Data1, string Data2, System.AsyncCallback callback, object asyncState);
        
        void EndPrintTwoNormal(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/RotatePrint", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/RotatePrintResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void RotatePrint(WSPoS.POSPrinterServiceReference.PrinterStation Station, int Rotation);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/RotatePrint", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/RotatePrintResponse")]
        System.IAsyncResult BeginRotatePrint(WSPoS.POSPrinterServiceReference.PrinterStation Station, int Rotation, System.AsyncCallback callback, object asyncState);
        
        void EndRotatePrint(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetBitmap", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetBitmapResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void SetBitmap(int BitmapNumber, WSPoS.POSPrinterServiceReference.PrinterStation Station, string FileName, int Width, int Alignment);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetBitmap", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetBitmapResponse")]
        System.IAsyncResult BeginSetBitmap(int BitmapNumber, WSPoS.POSPrinterServiceReference.PrinterStation Station, string FileName, int Width, int Alignment, System.AsyncCallback callback, object asyncState);
        
        void EndSetBitmap(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetLogo", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetLogoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void SetLogo(WSPoS.POSPrinterServiceReference.PrinterLogoLocation Location, string Data);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetLogo", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetLogoResponse")]
        System.IAsyncResult BeginSetLogo(WSPoS.POSPrinterServiceReference.PrinterLogoLocation Location, string Data, System.AsyncCallback callback, object asyncState);
        
        void EndSetLogo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/TransactionPrint", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/TransactionPrintResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void TransactionPrint(WSPoS.POSPrinterServiceReference.PrinterStation Station, WSPoS.POSPrinterServiceReference.PrinterTransactionControl Control);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/TransactionPrint", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/TransactionPrintResponse")]
        System.IAsyncResult BeginTransactionPrint(WSPoS.POSPrinterServiceReference.PrinterStation Station, WSPoS.POSPrinterServiceReference.PrinterTransactionControl Control, System.AsyncCallback callback, object asyncState);
        
        void EndTransactionPrint(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/ValidateData", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/ValidateDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void ValidateData(WSPoS.POSPrinterServiceReference.PrinterStation Station, string Data);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/ValidateData", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/ValidateDataResponse")]
        System.IAsyncResult BeginValidateData(WSPoS.POSPrinterServiceReference.PrinterStation Station, string Data, System.AsyncCallback callback, object asyncState);
        
        void EndValidateData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpLetterQuality", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpLetterQualityResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetSlpLetterQuality();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpLetterQuality", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpLetterQualityResponse")]
        System.IAsyncResult BeginGetSlpLetterQuality(System.AsyncCallback callback, object asyncState);
        
        bool EndGetSlpLetterQuality(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetSlpLetterQuality", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetSlpLetterQualityResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void SetSlpLetterQuality(bool SlpLetterQuality);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetSlpLetterQuality", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetSlpLetterQualityResponse")]
        System.IAsyncResult BeginSetSlpLetterQuality(bool SlpLetterQuality, System.AsyncCallback callback, object asyncState);
        
        void EndSetSlpLetterQuality(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpEmpty", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpEmptyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetSlpEmpty();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpEmpty", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpEmptyResponse")]
        System.IAsyncResult BeginGetSlpEmpty(System.AsyncCallback callback, object asyncState);
        
        bool EndGetSlpEmpty(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpNearEnd", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpNearEndResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetSlpNearEnd();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpNearEnd", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpNearEndResponse")]
        System.IAsyncResult BeginGetSlpNearEnd(System.AsyncCallback callback, object asyncState);
        
        bool EndGetSlpNearEnd(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpSidewaysMaxLines", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpSidewaysMaxLinesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        int GetSlpSidewaysMaxLines();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpSidewaysMaxLines", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpSidewaysMaxLinesResponse")]
        System.IAsyncResult BeginGetSlpSidewaysMaxLines(System.AsyncCallback callback, object asyncState);
        
        int EndGetSlpSidewaysMaxLines(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpSidewaysMaxChars", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpSidewaysMaxCharsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        int GetSlpSidewaysMaxChars();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpSidewaysMaxChars", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpSidewaysMaxCharsResponse")]
        System.IAsyncResult BeginGetSlpSidewaysMaxChars(System.AsyncCallback callback, object asyncState);
        
        int EndGetSlpSidewaysMaxChars(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpMaxLines", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpMaxLinesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        int GetSlpMaxLines();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpMaxLines", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpMaxLinesResponse")]
        System.IAsyncResult BeginGetSlpMaxLines(System.AsyncCallback callback, object asyncState);
        
        int EndGetSlpMaxLines(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpLinesNearEndToEnd", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpLinesNearEndToEndResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        int GetSlpLinesNearEndToEnd();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpLinesNearEndToEnd", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpLinesNearEndToEndResponse")]
        System.IAsyncResult BeginGetSlpLinesNearEndToEnd(System.AsyncCallback callback, object asyncState);
        
        int EndGetSlpLinesNearEndToEnd(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpBarCodeRotationList", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpBarCodeRotationListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        WSPoS.POSPrinterServiceReference.RotationList GetSlpBarCodeRotationList();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpBarCodeRotationList", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpBarCodeRotationListResponse")]
        System.IAsyncResult BeginGetSlpBarCodeRotationList(System.AsyncCallback callback, object asyncState);
        
        WSPoS.POSPrinterServiceReference.RotationList EndGetSlpBarCodeRotationList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpBitmapRotationList", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpBitmapRotationListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        WSPoS.POSPrinterServiceReference.RotationList GetSlpBitmapRotationList();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpBitmapRotationList", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpBitmapRotationListResponse")]
        System.IAsyncResult BeginGetSlpBitmapRotationList(System.AsyncCallback callback, object asyncState);
        
        WSPoS.POSPrinterServiceReference.RotationList EndGetSlpBitmapRotationList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpPrintSide", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpPrintSideResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        WSPoS.POSPrinterServiceReference.PrinterSide GetSlpPrintSide();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpPrintSide", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpPrintSideResponse")]
        System.IAsyncResult BeginGetSlpPrintSide(System.AsyncCallback callback, object asyncState);
        
        WSPoS.POSPrinterServiceReference.PrinterSide EndGetSlpPrintSide(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpCartridgeState", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpCartridgeStateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        WSPoS.POSPrinterServiceReference.PrinterCartridgeStates GetSlpCartridgeState();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpCartridgeState", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpCartridgeStateResponse")]
        System.IAsyncResult BeginGetSlpCartridgeState(System.AsyncCallback callback, object asyncState);
        
        WSPoS.POSPrinterServiceReference.PrinterCartridgeStates EndGetSlpCartridgeState(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpCurrentCartridge", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpCurrentCartridgeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        int GetSlpCurrentCartridge();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpCurrentCartridge", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpCurrentCartridgeResponse")]
        System.IAsyncResult BeginGetSlpCurrentCartridge(System.AsyncCallback callback, object asyncState);
        
        int EndGetSlpCurrentCartridge(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetSlpCurrentCartridge", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetSlpCurrentCartridgeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void SetSlpCurrentCartridge(int SlpCurrentCartridge);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetSlpCurrentCartridge", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetSlpCurrentCartridgeResponse")]
        System.IAsyncResult BeginSetSlpCurrentCartridge(int SlpCurrentCartridge, System.AsyncCallback callback, object asyncState);
        
        void EndSetSlpCurrentCartridge(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/Open", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/OpenResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void Open(string EndpointAddress);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/Open", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/OpenResponse")]
        System.IAsyncResult BeginOpen(string EndpointAddress, System.AsyncCallback callback, object asyncState);
        
        void EndOpen(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/Close", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/CloseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void Close(string EndpointAddress);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/Close", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/CloseResponse")]
        System.IAsyncResult BeginClose(string EndpointAddress, System.AsyncCallback callback, object asyncState);
        
        void EndClose(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/Claim", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/ClaimResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void Claim(int Timeout);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/Claim", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/ClaimResponse")]
        System.IAsyncResult BeginClaim(int Timeout, System.AsyncCallback callback, object asyncState);
        
        void EndClaim(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/Release", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/ReleaseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void Release();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/Release", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/ReleaseResponse")]
        System.IAsyncResult BeginRelease(System.AsyncCallback callback, object asyncState);
        
        void EndRelease(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/CheckHealth", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/CheckHealthResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void CheckHealth(WSPoS.POSPrinterServiceReference.HealthCheckLevel Level);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/CheckHealth", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/CheckHealthResponse")]
        System.IAsyncResult BeginCheckHealth(WSPoS.POSPrinterServiceReference.HealthCheckLevel Level, System.AsyncCallback callback, object asyncState);
        
        void EndCheckHealth(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/ClearOutput", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/ClearOutputResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void ClearOutput();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/ClearOutput", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/ClearOutputResponse")]
        System.IAsyncResult BeginClearOutput(System.AsyncCallback callback, object asyncState);
        
        void EndClearOutput(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/DirectIO", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/DirectIOResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.ErrorCode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.PageModePrintControl))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.PrinterStation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.BarCodeTextPosition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.BitmapType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.PrinterLogoLocation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.PrinterTransactionControl))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.RotationList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.Rotation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.PrinterSide))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.PrinterCartridgeStates))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.HealthCheckLevel))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.DirectIOData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.CompareFirmwareResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.StatisticList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.Statistic))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.PositionList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.PrinterLineStyle))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.LineCharsList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.FontTypefaceList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.MapMode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.Point))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.Rectangle))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.PageModePrintDirection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.PrinterCartridgeNotify))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.CharacterSetList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.PrinterErrorLevel))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.PowerReporting))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.PowerNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.PowerState))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.ControlState))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.UposVersion))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WSPoS.POSPrinterServiceReference.CharacterSetCapability))]
        WSPoS.POSPrinterServiceReference.DirectIOData DirectIO(int Command, int Data, object Obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/DirectIO", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/DirectIOResponse")]
        System.IAsyncResult BeginDirectIO(int Command, int Data, object Obj, System.AsyncCallback callback, object asyncState);
        
        WSPoS.POSPrinterServiceReference.DirectIOData EndDirectIO(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/CompareFirmwareVersion", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/CompareFirmwareVersionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        WSPoS.POSPrinterServiceReference.CompareFirmwareResult CompareFirmwareVersion(string FirmwareFileName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/CompareFirmwareVersion", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/CompareFirmwareVersionResponse")]
        System.IAsyncResult BeginCompareFirmwareVersion(string FirmwareFileName, System.AsyncCallback callback, object asyncState);
        
        WSPoS.POSPrinterServiceReference.CompareFirmwareResult EndCompareFirmwareVersion(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/ResetStatistics", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/ResetStatisticsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void ResetStatistics(WSPoS.POSPrinterServiceReference.StatisticList StatisticsBuffer);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/ResetStatistics", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/ResetStatisticsResponse")]
        System.IAsyncResult BeginResetStatistics(WSPoS.POSPrinterServiceReference.StatisticList StatisticsBuffer, System.AsyncCallback callback, object asyncState);
        
        void EndResetStatistics(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/RetrieveStatistics", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/RetrieveStatisticsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        string RetrieveStatistics(WSPoS.POSPrinterServiceReference.StatisticList StatisticsBuffer);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/RetrieveStatistics", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/RetrieveStatisticsResponse")]
        System.IAsyncResult BeginRetrieveStatistics(WSPoS.POSPrinterServiceReference.StatisticList StatisticsBuffer, System.AsyncCallback callback, object asyncState);
        
        string EndRetrieveStatistics(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UpdateFirmware", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UpdateFirmwareResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void UpdateFirmware(string FirmwareFileName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UpdateFirmware", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UpdateFirmwareResponse")]
        System.IAsyncResult BeginUpdateFirmware(string FirmwareFileName, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateFirmware(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UpdateStatistics", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UpdateStatisticsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void UpdateStatistics(WSPoS.POSPrinterServiceReference.StatisticList StatisticsBuffer);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UpdateStatistics", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UpdateStatisticsResponse")]
        System.IAsyncResult BeginUpdateStatistics(WSPoS.POSPrinterServiceReference.StatisticList StatisticsBuffer, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateStatistics(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/BeginInsertion", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/BeginInsertionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void BeginInsertion(int Timeout);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/BeginInsertion", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/BeginInsertionResponse")]
        System.IAsyncResult BeginBeginInsertion(int Timeout, System.AsyncCallback callback, object asyncState);
        
        void EndBeginInsertion(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/BeginRemoval", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/BeginRemovalResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void BeginRemoval(int Timeout);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/BeginRemoval", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/BeginRemovalResponse")]
        System.IAsyncResult BeginBeginRemoval(int Timeout, System.AsyncCallback callback, object asyncState);
        
        void EndBeginRemoval(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/ChangePrintSide", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/ChangePrintSideResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void ChangePrintSide(WSPoS.POSPrinterServiceReference.PrinterSide Side);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/ChangePrintSide", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/ChangePrintSideResponse")]
        System.IAsyncResult BeginChangePrintSide(WSPoS.POSPrinterServiceReference.PrinterSide Side, System.AsyncCallback callback, object asyncState);
        
        void EndChangePrintSide(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/ClearPrintArea", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/ClearPrintAreaResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void ClearPrintArea();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/ClearPrintArea", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/ClearPrintAreaResponse")]
        System.IAsyncResult BeginClearPrintArea(System.AsyncCallback callback, object asyncState);
        
        void EndClearPrintArea(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/CutPaper", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/CutPaperResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void CutPaper(int Percentage);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/CutPaper", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/CutPaperResponse")]
        System.IAsyncResult BeginCutPaper(int Percentage, System.AsyncCallback callback, object asyncState);
        
        void EndCutPaper(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/DrawRuledLine", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/DrawRuledLineResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void DrawRuledLine(WSPoS.POSPrinterServiceReference.PrinterStation Station, WSPoS.POSPrinterServiceReference.PositionList PositionList, int LineDirection, int LineWidth, WSPoS.POSPrinterServiceReference.PrinterLineStyle LineStyle, int LineColor);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/DrawRuledLine", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/DrawRuledLineResponse")]
        System.IAsyncResult BeginDrawRuledLine(WSPoS.POSPrinterServiceReference.PrinterStation Station, WSPoS.POSPrinterServiceReference.PositionList PositionList, int LineDirection, int LineWidth, WSPoS.POSPrinterServiceReference.PrinterLineStyle LineStyle, int LineColor, System.AsyncCallback callback, object asyncState);
        
        void EndDrawRuledLine(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetJrnNearEnd", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetJrnNearEndResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetJrnNearEnd();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetJrnNearEnd", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetJrnNearEndResponse")]
        System.IAsyncResult BeginGetJrnNearEnd(System.AsyncCallback callback, object asyncState);
        
        bool EndGetJrnNearEnd(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetJrnCartridgeState", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetJrnCartridgeStateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        WSPoS.POSPrinterServiceReference.PrinterCartridgeStates GetJrnCartridgeState();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetJrnCartridgeState", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetJrnCartridgeStateResponse")]
        System.IAsyncResult BeginGetJrnCartridgeState(System.AsyncCallback callback, object asyncState);
        
        WSPoS.POSPrinterServiceReference.PrinterCartridgeStates EndGetJrnCartridgeState(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetJrnCurrentCartridge", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetJrnCurrentCartridgeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        int GetJrnCurrentCartridge();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetJrnCurrentCartridge", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetJrnCurrentCartridgeResponse")]
        System.IAsyncResult BeginGetJrnCurrentCartridge(System.AsyncCallback callback, object asyncState);
        
        int EndGetJrnCurrentCartridge(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetJrnCurrentCartridge", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetJrnCurrentCartridgeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void SetJrnCurrentCartridge(int JrnCurrentCartridge);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetJrnCurrentCartridge", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetJrnCurrentCartridgeResponse")]
        System.IAsyncResult BeginSetJrnCurrentCartridge(int JrnCurrentCartridge, System.AsyncCallback callback, object asyncState);
        
        void EndSetJrnCurrentCartridge(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecLineChars", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecLineCharsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        int GetRecLineChars();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecLineChars", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecLineCharsResponse")]
        System.IAsyncResult BeginGetRecLineChars(System.AsyncCallback callback, object asyncState);
        
        int EndGetRecLineChars(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetRecLineChars", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetRecLineCharsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void SetRecLineChars(int RecLineChars);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetRecLineChars", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetRecLineCharsResponse")]
        System.IAsyncResult BeginSetRecLineChars(int RecLineChars, System.AsyncCallback callback, object asyncState);
        
        void EndSetRecLineChars(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecLineCharsList", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecLineCharsListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        WSPoS.POSPrinterServiceReference.LineCharsList GetRecLineCharsList();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecLineCharsList", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecLineCharsListResponse")]
        System.IAsyncResult BeginGetRecLineCharsList(System.AsyncCallback callback, object asyncState);
        
        WSPoS.POSPrinterServiceReference.LineCharsList EndGetRecLineCharsList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecLineHeight", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecLineHeightResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        int GetRecLineHeight();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecLineHeight", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecLineHeightResponse")]
        System.IAsyncResult BeginGetRecLineHeight(System.AsyncCallback callback, object asyncState);
        
        int EndGetRecLineHeight(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetRecLineHeight", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetRecLineHeightResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void SetRecLineHeight(int RecLineHeight);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetRecLineHeight", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetRecLineHeightResponse")]
        System.IAsyncResult BeginSetRecLineHeight(int RecLineHeight, System.AsyncCallback callback, object asyncState);
        
        void EndSetRecLineHeight(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecLineSpacing", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecLineSpacingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        int GetRecLineSpacing();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecLineSpacing", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecLineSpacingResponse")]
        System.IAsyncResult BeginGetRecLineSpacing(System.AsyncCallback callback, object asyncState);
        
        int EndGetRecLineSpacing(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetRecLineSpacing", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetRecLineSpacingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void SetRecLineSpacing(int RecLineSpacing);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetRecLineSpacing", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetRecLineSpacingResponse")]
        System.IAsyncResult BeginSetRecLineSpacing(int RecLineSpacing, System.AsyncCallback callback, object asyncState);
        
        void EndSetRecLineSpacing(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecLineWidth", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecLineWidthResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        int GetRecLineWidth();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecLineWidth", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecLineWidthResponse")]
        System.IAsyncResult BeginGetRecLineWidth(System.AsyncCallback callback, object asyncState);
        
        int EndGetRecLineWidth(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecLetterQuality", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecLetterQualityResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetRecLetterQuality();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecLetterQuality", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecLetterQualityResponse")]
        System.IAsyncResult BeginGetRecLetterQuality(System.AsyncCallback callback, object asyncState);
        
        bool EndGetRecLetterQuality(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetRecLetterQuality", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetRecLetterQualityResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void SetRecLetterQuality(bool RecLetterQuality);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetRecLetterQuality", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetRecLetterQualityResponse")]
        System.IAsyncResult BeginSetRecLetterQuality(bool RecLetterQuality, System.AsyncCallback callback, object asyncState);
        
        void EndSetRecLetterQuality(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecEmpty", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecEmptyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetRecEmpty();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecEmpty", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecEmptyResponse")]
        System.IAsyncResult BeginGetRecEmpty(System.AsyncCallback callback, object asyncState);
        
        bool EndGetRecEmpty(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecNearEnd", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecNearEndResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetRecNearEnd();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecNearEnd", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecNearEndResponse")]
        System.IAsyncResult BeginGetRecNearEnd(System.AsyncCallback callback, object asyncState);
        
        bool EndGetRecNearEnd(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecSidewaysMaxChars", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecSidewaysMaxCharsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        int GetRecSidewaysMaxChars();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecSidewaysMaxChars", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecSidewaysMaxCharsResponse")]
        System.IAsyncResult BeginGetRecSidewaysMaxChars(System.AsyncCallback callback, object asyncState);
        
        int EndGetRecSidewaysMaxChars(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecSidewaysMaxLines", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecSidewaysMaxLinesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        int GetRecSidewaysMaxLines();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecSidewaysMaxLines", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecSidewaysMaxLinesResponse")]
        System.IAsyncResult BeginGetRecSidewaysMaxLines(System.AsyncCallback callback, object asyncState);
        
        int EndGetRecSidewaysMaxLines(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecLinesToPaperCut", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecLinesToPaperCutResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        int GetRecLinesToPaperCut();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecLinesToPaperCut", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecLinesToPaperCutResponse")]
        System.IAsyncResult BeginGetRecLinesToPaperCut(System.AsyncCallback callback, object asyncState);
        
        int EndGetRecLinesToPaperCut(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecBarCodeRotationList", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecBarCodeRotationListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        WSPoS.POSPrinterServiceReference.RotationList GetRecBarCodeRotationList();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecBarCodeRotationList", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecBarCodeRotationListResponse")]
        System.IAsyncResult BeginGetRecBarCodeRotationList(System.AsyncCallback callback, object asyncState);
        
        WSPoS.POSPrinterServiceReference.RotationList EndGetRecBarCodeRotationList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecBitmapRotationList", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecBitmapRotationListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        WSPoS.POSPrinterServiceReference.RotationList GetRecBitmapRotationList();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecBitmapRotationList", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecBitmapRotationListResponse")]
        System.IAsyncResult BeginGetRecBitmapRotationList(System.AsyncCallback callback, object asyncState);
        
        WSPoS.POSPrinterServiceReference.RotationList EndGetRecBitmapRotationList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecCartridgeState", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecCartridgeStateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        WSPoS.POSPrinterServiceReference.PrinterCartridgeStates GetRecCartridgeState();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecCartridgeState", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecCartridgeStateResponse")]
        System.IAsyncResult BeginGetRecCartridgeState(System.AsyncCallback callback, object asyncState);
        
        WSPoS.POSPrinterServiceReference.PrinterCartridgeStates EndGetRecCartridgeState(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecCurrentCartridge", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecCurrentCartridgeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        int GetRecCurrentCartridge();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecCurrentCartridge", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRecCurrentCartridgeResponse")]
        System.IAsyncResult BeginGetRecCurrentCartridge(System.AsyncCallback callback, object asyncState);
        
        int EndGetRecCurrentCartridge(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetRecCurrentCartridge", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetRecCurrentCartridgeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void SetRecCurrentCartridge(int RecCurrentCartridge);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetRecCurrentCartridge", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetRecCurrentCartridgeResponse")]
        System.IAsyncResult BeginSetRecCurrentCartridge(int RecCurrentCartridge, System.AsyncCallback callback, object asyncState);
        
        void EndSetRecCurrentCartridge(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpLineChars", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpLineCharsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        int GetSlpLineChars();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpLineChars", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpLineCharsResponse")]
        System.IAsyncResult BeginGetSlpLineChars(System.AsyncCallback callback, object asyncState);
        
        int EndGetSlpLineChars(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetSlpLineChars", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetSlpLineCharsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void SetSlpLineChars(int SlpLineChars);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetSlpLineChars", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetSlpLineCharsResponse")]
        System.IAsyncResult BeginSetSlpLineChars(int SlpLineChars, System.AsyncCallback callback, object asyncState);
        
        void EndSetSlpLineChars(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpLineCharsList", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpLineCharsListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        WSPoS.POSPrinterServiceReference.LineCharsList GetSlpLineCharsList();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpLineCharsList", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpLineCharsListResponse")]
        System.IAsyncResult BeginGetSlpLineCharsList(System.AsyncCallback callback, object asyncState);
        
        WSPoS.POSPrinterServiceReference.LineCharsList EndGetSlpLineCharsList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpLineHeight", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpLineHeightResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        int GetSlpLineHeight();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpLineHeight", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpLineHeightResponse")]
        System.IAsyncResult BeginGetSlpLineHeight(System.AsyncCallback callback, object asyncState);
        
        int EndGetSlpLineHeight(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetSlpLineHeight", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetSlpLineHeightResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void SetSlpLineHeight(int SlpLineHeight);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetSlpLineHeight", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetSlpLineHeightResponse")]
        System.IAsyncResult BeginSetSlpLineHeight(int SlpLineHeight, System.AsyncCallback callback, object asyncState);
        
        void EndSetSlpLineHeight(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpLineSpacing", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpLineSpacingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        int GetSlpLineSpacing();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpLineSpacing", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpLineSpacingResponse")]
        System.IAsyncResult BeginGetSlpLineSpacing(System.AsyncCallback callback, object asyncState);
        
        int EndGetSlpLineSpacing(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetSlpLineSpacing", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetSlpLineSpacingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void SetSlpLineSpacing(int SlpLineSpacing);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetSlpLineSpacing", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetSlpLineSpacingResponse")]
        System.IAsyncResult BeginSetSlpLineSpacing(int SlpLineSpacing, System.AsyncCallback callback, object asyncState);
        
        void EndSetSlpLineSpacing(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpLineWidth", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpLineWidthResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        int GetSlpLineWidth();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpLineWidth", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetSlpLineWidthResponse")]
        System.IAsyncResult BeginGetSlpLineWidth(System.AsyncCallback callback, object asyncState);
        
        int EndGetSlpLineWidth(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetFontTypefaceList", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetFontTypefaceListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        WSPoS.POSPrinterServiceReference.FontTypefaceList GetFontTypefaceList();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetFontTypefaceList", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetFontTypefaceListResponse")]
        System.IAsyncResult BeginGetFontTypefaceList(System.AsyncCallback callback, object asyncState);
        
        WSPoS.POSPrinterServiceReference.FontTypefaceList EndGetFontTypefaceList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetFlagWhenIdle", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetFlagWhenIdleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetFlagWhenIdle();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetFlagWhenIdle", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetFlagWhenIdleResponse")]
        System.IAsyncResult BeginGetFlagWhenIdle(System.AsyncCallback callback, object asyncState);
        
        bool EndGetFlagWhenIdle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetFlagWhenIdle", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetFlagWhenIdleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void SetFlagWhenIdle(bool FlagWhenIdle);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetFlagWhenIdle", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetFlagWhenIdleResponse")]
        System.IAsyncResult BeginSetFlagWhenIdle(bool FlagWhenIdle, System.AsyncCallback callback, object asyncState);
        
        void EndSetFlagWhenIdle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetMapCharacterSet", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetMapCharacterSetResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetMapCharacterSet();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetMapCharacterSet", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetMapCharacterSetResponse")]
        System.IAsyncResult BeginGetMapCharacterSet(System.AsyncCallback callback, object asyncState);
        
        bool EndGetMapCharacterSet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetMapCharacterSet", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetMapCharacterSetResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void SetMapCharacterSet(bool MapCharacterSet);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetMapCharacterSet", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetMapCharacterSetResponse")]
        System.IAsyncResult BeginSetMapCharacterSet(bool MapCharacterSet, System.AsyncCallback callback, object asyncState);
        
        void EndSetMapCharacterSet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetMapMode", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetMapModeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        WSPoS.POSPrinterServiceReference.MapMode GetMapMode();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetMapMode", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetMapModeResponse")]
        System.IAsyncResult BeginGetMapMode(System.AsyncCallback callback, object asyncState);
        
        WSPoS.POSPrinterServiceReference.MapMode EndGetMapMode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetMapMode", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetMapModeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void SetMapMode(WSPoS.POSPrinterServiceReference.MapMode MapMode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetMapMode", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetMapModeResponse")]
        System.IAsyncResult BeginSetMapMode(WSPoS.POSPrinterServiceReference.MapMode MapMode, System.AsyncCallback callback, object asyncState);
        
        void EndSetMapMode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetPageModeArea", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetPageModeAreaResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        WSPoS.POSPrinterServiceReference.Point GetPageModeArea();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetPageModeArea", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetPageModeAreaResponse")]
        System.IAsyncResult BeginGetPageModeArea(System.AsyncCallback callback, object asyncState);
        
        WSPoS.POSPrinterServiceReference.Point EndGetPageModeArea(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetPageModeDescriptor", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetPageModeDescriptorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        int GetPageModeDescriptor();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetPageModeDescriptor", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetPageModeDescriptorResponse")]
        System.IAsyncResult BeginGetPageModeDescriptor(System.AsyncCallback callback, object asyncState);
        
        int EndGetPageModeDescriptor(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetPageModeHorizontalPosition", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetPageModeHorizontalPositionRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        int GetPageModeHorizontalPosition();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetPageModeHorizontalPosition", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetPageModeHorizontalPositionRespon" +
            "se")]
        System.IAsyncResult BeginGetPageModeHorizontalPosition(System.AsyncCallback callback, object asyncState);
        
        int EndGetPageModeHorizontalPosition(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetPageModeHorizontalPosition", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetPageModeHorizontalPositionRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void SetPageModeHorizontalPosition(int PageModeHorizontalPosition);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetPageModeHorizontalPosition", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetPageModeHorizontalPositionRespon" +
            "se")]
        System.IAsyncResult BeginSetPageModeHorizontalPosition(int PageModeHorizontalPosition, System.AsyncCallback callback, object asyncState);
        
        void EndSetPageModeHorizontalPosition(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetPageModePrintArea", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetPageModePrintAreaResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        WSPoS.POSPrinterServiceReference.Rectangle GetPageModePrintArea();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetPageModePrintArea", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetPageModePrintAreaResponse")]
        System.IAsyncResult BeginGetPageModePrintArea(System.AsyncCallback callback, object asyncState);
        
        WSPoS.POSPrinterServiceReference.Rectangle EndGetPageModePrintArea(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetPageModePrintArea", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetPageModePrintAreaResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void SetPageModePrintArea(WSPoS.POSPrinterServiceReference.Rectangle PageModePrintArea);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetPageModePrintArea", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetPageModePrintAreaResponse")]
        System.IAsyncResult BeginSetPageModePrintArea(WSPoS.POSPrinterServiceReference.Rectangle PageModePrintArea, System.AsyncCallback callback, object asyncState);
        
        void EndSetPageModePrintArea(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetPageModePrintDirection", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetPageModePrintDirectionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        WSPoS.POSPrinterServiceReference.PageModePrintDirection GetPageModePrintDirection();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetPageModePrintDirection", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetPageModePrintDirectionResponse")]
        System.IAsyncResult BeginGetPageModePrintDirection(System.AsyncCallback callback, object asyncState);
        
        WSPoS.POSPrinterServiceReference.PageModePrintDirection EndGetPageModePrintDirection(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetPageModePrintDirection", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetPageModePrintDirectionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void SetPageModePrintDirection(WSPoS.POSPrinterServiceReference.PageModePrintDirection PageModePrintDirection);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetPageModePrintDirection", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetPageModePrintDirectionResponse")]
        System.IAsyncResult BeginSetPageModePrintDirection(WSPoS.POSPrinterServiceReference.PageModePrintDirection PageModePrintDirection, System.AsyncCallback callback, object asyncState);
        
        void EndSetPageModePrintDirection(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetPageModeStation", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetPageModeStationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        WSPoS.POSPrinterServiceReference.PrinterStation GetPageModeStation();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetPageModeStation", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetPageModeStationResponse")]
        System.IAsyncResult BeginGetPageModeStation(System.AsyncCallback callback, object asyncState);
        
        WSPoS.POSPrinterServiceReference.PrinterStation EndGetPageModeStation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetPageModeStation", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetPageModeStationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void SetPageModeStation(WSPoS.POSPrinterServiceReference.PrinterStation PageModeStation);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetPageModeStation", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetPageModeStationResponse")]
        System.IAsyncResult BeginSetPageModeStation(WSPoS.POSPrinterServiceReference.PrinterStation PageModeStation, System.AsyncCallback callback, object asyncState);
        
        void EndSetPageModeStation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetPageModeVerticalPosition", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetPageModeVerticalPositionResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        int GetPageModeVerticalPosition();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetPageModeVerticalPosition", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetPageModeVerticalPositionResponse" +
            "")]
        System.IAsyncResult BeginGetPageModeVerticalPosition(System.AsyncCallback callback, object asyncState);
        
        int EndGetPageModeVerticalPosition(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetPageModeVerticalPosition", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetPageModeVerticalPositionResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void SetPageModeVerticalPosition(int PageModeVerticalPosition);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetPageModeVerticalPosition", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetPageModeVerticalPositionResponse" +
            "")]
        System.IAsyncResult BeginSetPageModeVerticalPosition(int PageModeVerticalPosition, System.AsyncCallback callback, object asyncState);
        
        void EndSetPageModeVerticalPosition(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRotateSpecial", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRotateSpecialResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        WSPoS.POSPrinterServiceReference.Rotation GetRotateSpecial();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRotateSpecial", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetRotateSpecialResponse")]
        System.IAsyncResult BeginGetRotateSpecial(System.AsyncCallback callback, object asyncState);
        
        WSPoS.POSPrinterServiceReference.Rotation EndGetRotateSpecial(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetRotateSpecial", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetRotateSpecialResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void SetRotateSpecial(WSPoS.POSPrinterServiceReference.Rotation RotateSpecial);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetRotateSpecial", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetRotateSpecialResponse")]
        System.IAsyncResult BeginSetRotateSpecial(WSPoS.POSPrinterServiceReference.Rotation RotateSpecial, System.AsyncCallback callback, object asyncState);
        
        void EndSetRotateSpecial(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetJrnLineChars", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetJrnLineCharsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        int GetJrnLineChars();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetJrnLineChars", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetJrnLineCharsResponse")]
        System.IAsyncResult BeginGetJrnLineChars(System.AsyncCallback callback, object asyncState);
        
        int EndGetJrnLineChars(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetJrnLineChars", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetJrnLineCharsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void SetJrnLineChars(int JrnLineChars);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetJrnLineChars", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetJrnLineCharsResponse")]
        System.IAsyncResult BeginSetJrnLineChars(int JrnLineChars, System.AsyncCallback callback, object asyncState);
        
        void EndSetJrnLineChars(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetJrnLineCharsList", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetJrnLineCharsListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        WSPoS.POSPrinterServiceReference.LineCharsList GetJrnLineCharsList();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetJrnLineCharsList", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetJrnLineCharsListResponse")]
        System.IAsyncResult BeginGetJrnLineCharsList(System.AsyncCallback callback, object asyncState);
        
        WSPoS.POSPrinterServiceReference.LineCharsList EndGetJrnLineCharsList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetJrnLineHeight", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetJrnLineHeightResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        int GetJrnLineHeight();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetJrnLineHeight", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetJrnLineHeightResponse")]
        System.IAsyncResult BeginGetJrnLineHeight(System.AsyncCallback callback, object asyncState);
        
        int EndGetJrnLineHeight(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetJrnLineHeight", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetJrnLineHeightResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void SetJrnLineHeight(int JrnLineHeight);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetJrnLineHeight", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetJrnLineHeightResponse")]
        System.IAsyncResult BeginSetJrnLineHeight(int JrnLineHeight, System.AsyncCallback callback, object asyncState);
        
        void EndSetJrnLineHeight(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetJrnLineSpacing", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetJrnLineSpacingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        int GetJrnLineSpacing();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetJrnLineSpacing", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetJrnLineSpacingResponse")]
        System.IAsyncResult BeginGetJrnLineSpacing(System.AsyncCallback callback, object asyncState);
        
        int EndGetJrnLineSpacing(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetJrnLineSpacing", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetJrnLineSpacingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void SetJrnLineSpacing(int JrnLineSpacing);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetJrnLineSpacing", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetJrnLineSpacingResponse")]
        System.IAsyncResult BeginSetJrnLineSpacing(int JrnLineSpacing, System.AsyncCallback callback, object asyncState);
        
        void EndSetJrnLineSpacing(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetJrnLineWidth", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetJrnLineWidthResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        int GetJrnLineWidth();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetJrnLineWidth", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetJrnLineWidthResponse")]
        System.IAsyncResult BeginGetJrnLineWidth(System.AsyncCallback callback, object asyncState);
        
        int EndGetJrnLineWidth(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetJrnLetterQuality", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetJrnLetterQualityResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetJrnLetterQuality();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetJrnLetterQuality", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetJrnLetterQualityResponse")]
        System.IAsyncResult BeginGetJrnLetterQuality(System.AsyncCallback callback, object asyncState);
        
        bool EndGetJrnLetterQuality(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetJrnLetterQuality", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetJrnLetterQualityResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void SetJrnLetterQuality(bool JrnLetterQuality);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetJrnLetterQuality", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetJrnLetterQualityResponse")]
        System.IAsyncResult BeginSetJrnLetterQuality(bool JrnLetterQuality, System.AsyncCallback callback, object asyncState);
        
        void EndSetJrnLetterQuality(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetJrnEmpty", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetJrnEmptyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetJrnEmpty();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetJrnEmpty", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetJrnEmptyResponse")]
        System.IAsyncResult BeginGetJrnEmpty(System.AsyncCallback callback, object asyncState);
        
        bool EndGetJrnEmpty(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpPresent", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpPresentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapSlpPresent();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpPresent", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpPresentResponse")]
        System.IAsyncResult BeginGetCapSlpPresent(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapSlpPresent(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpFullslip", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpFullslipResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapSlpFullslip();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpFullslip", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpFullslipResponse")]
        System.IAsyncResult BeginGetCapSlpFullslip(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapSlpFullslip(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlp2Color", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlp2ColorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapSlp2Color();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlp2Color", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlp2ColorResponse")]
        System.IAsyncResult BeginGetCapSlp2Color(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapSlp2Color(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpBarCode", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpBarCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapSlpBarCode();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpBarCode", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpBarCodeResponse")]
        System.IAsyncResult BeginGetCapSlpBarCode(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapSlpBarCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpBitmap", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpBitmapResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapSlpBitmap();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpBitmap", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpBitmapResponse")]
        System.IAsyncResult BeginGetCapSlpBitmap(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapSlpBitmap(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpBold", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpBoldResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapSlpBold();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpBold", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpBoldResponse")]
        System.IAsyncResult BeginGetCapSlpBold(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapSlpBold(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpDhigh", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpDhighResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapSlpDhigh();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpDhigh", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpDhighResponse")]
        System.IAsyncResult BeginGetCapSlpDhigh(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapSlpDhigh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpDwide", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpDwideResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapSlpDwide();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpDwide", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpDwideResponse")]
        System.IAsyncResult BeginGetCapSlpDwide(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapSlpDwide(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpDwideDhigh", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpDwideDhighResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapSlpDwideDhigh();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpDwideDhigh", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpDwideDhighResponse")]
        System.IAsyncResult BeginGetCapSlpDwideDhigh(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapSlpDwideDhigh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpEmptySensor", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpEmptySensorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapSlpEmptySensor();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpEmptySensor", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpEmptySensorResponse")]
        System.IAsyncResult BeginGetCapSlpEmptySensor(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapSlpEmptySensor(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpItalic", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpItalicResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapSlpItalic();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpItalic", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpItalicResponse")]
        System.IAsyncResult BeginGetCapSlpItalic(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapSlpItalic(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpLeft90", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpLeft90Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapSlpLeft90();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpLeft90", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpLeft90Response")]
        System.IAsyncResult BeginGetCapSlpLeft90(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapSlpLeft90(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpNearEndSensor", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpNearEndSensorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapSlpNearEndSensor();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpNearEndSensor", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpNearEndSensorResponse")]
        System.IAsyncResult BeginGetCapSlpNearEndSensor(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapSlpNearEndSensor(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpRight90", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpRight90Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapSlpRight90();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpRight90", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpRight90Response")]
        System.IAsyncResult BeginGetCapSlpRight90(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapSlpRight90(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpRotate180", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpRotate180Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapSlpRotate180();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpRotate180", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpRotate180Response")]
        System.IAsyncResult BeginGetCapSlpRotate180(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapSlpRotate180(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpUnderline", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpUnderlineResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapSlpUnderline();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpUnderline", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpUnderlineResponse")]
        System.IAsyncResult BeginGetCapSlpUnderline(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapSlpUnderline(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpBothSidesPrint", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpBothSidesPrintResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapSlpBothSidesPrint();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpBothSidesPrint", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpBothSidesPrintResponse")]
        System.IAsyncResult BeginGetCapSlpBothSidesPrint(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapSlpBothSidesPrint(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpCartridgeSensor", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpCartridgeSensorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        int GetCapSlpCartridgeSensor();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpCartridgeSensor", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpCartridgeSensorResponse")]
        System.IAsyncResult BeginGetCapSlpCartridgeSensor(System.AsyncCallback callback, object asyncState);
        
        int EndGetCapSlpCartridgeSensor(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpColor", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpColorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        int GetCapSlpColor();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpColor", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpColorResponse")]
        System.IAsyncResult BeginGetCapSlpColor(System.AsyncCallback callback, object asyncState);
        
        int EndGetCapSlpColor(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpPageMode", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpPageModeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapSlpPageMode();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpPageMode", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpPageModeResponse")]
        System.IAsyncResult BeginGetCapSlpPageMode(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapSlpPageMode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpRuledLine", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpRuledLineResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        int GetCapSlpRuledLine();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpRuledLine", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapSlpRuledLineResponse")]
        System.IAsyncResult BeginGetCapSlpRuledLine(System.AsyncCallback callback, object asyncState);
        
        int EndGetCapSlpRuledLine(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetAsyncMode", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetAsyncModeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetAsyncMode();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetAsyncMode", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetAsyncModeResponse")]
        System.IAsyncResult BeginGetAsyncMode(System.AsyncCallback callback, object asyncState);
        
        bool EndGetAsyncMode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetAsyncMode", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetAsyncModeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void SetAsyncMode(bool AsyncMode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetAsyncMode", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetAsyncModeResponse")]
        System.IAsyncResult BeginSetAsyncMode(bool AsyncMode, System.AsyncCallback callback, object asyncState);
        
        void EndSetAsyncMode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCartridgeNotify", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCartridgeNotifyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        WSPoS.POSPrinterServiceReference.PrinterCartridgeNotify GetCartridgeNotify();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCartridgeNotify", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCartridgeNotifyResponse")]
        System.IAsyncResult BeginGetCartridgeNotify(System.AsyncCallback callback, object asyncState);
        
        WSPoS.POSPrinterServiceReference.PrinterCartridgeNotify EndGetCartridgeNotify(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetCartridgeNotify", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetCartridgeNotifyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void SetCartridgeNotify(WSPoS.POSPrinterServiceReference.PrinterCartridgeNotify CartridgeNotify);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetCartridgeNotify", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetCartridgeNotifyResponse")]
        System.IAsyncResult BeginSetCartridgeNotify(WSPoS.POSPrinterServiceReference.PrinterCartridgeNotify CartridgeNotify, System.AsyncCallback callback, object asyncState);
        
        void EndSetCartridgeNotify(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCharacterSet", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCharacterSetResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        int GetCharacterSet();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCharacterSet", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCharacterSetResponse")]
        System.IAsyncResult BeginGetCharacterSet(System.AsyncCallback callback, object asyncState);
        
        int EndGetCharacterSet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetCharacterSet", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetCharacterSetResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void SetCharacterSet(int CharacterSet);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetCharacterSet", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetCharacterSetResponse")]
        System.IAsyncResult BeginSetCharacterSet(int CharacterSet, System.AsyncCallback callback, object asyncState);
        
        void EndSetCharacterSet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCharacterSetList", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCharacterSetListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        WSPoS.POSPrinterServiceReference.CharacterSetList GetCharacterSetList();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCharacterSetList", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCharacterSetListResponse")]
        System.IAsyncResult BeginGetCharacterSetList(System.AsyncCallback callback, object asyncState);
        
        WSPoS.POSPrinterServiceReference.CharacterSetList EndGetCharacterSetList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCoverOpen", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCoverOpenResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCoverOpen();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCoverOpen", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCoverOpenResponse")]
        System.IAsyncResult BeginGetCoverOpen(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCoverOpen(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetErrorLevel", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetErrorLevelResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        WSPoS.POSPrinterServiceReference.PrinterErrorLevel GetErrorLevel();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetErrorLevel", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetErrorLevelResponse")]
        System.IAsyncResult BeginGetErrorLevel(System.AsyncCallback callback, object asyncState);
        
        WSPoS.POSPrinterServiceReference.PrinterErrorLevel EndGetErrorLevel(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetErrorStation", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetErrorStationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        WSPoS.POSPrinterServiceReference.PrinterStation GetErrorStation();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetErrorStation", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetErrorStationResponse")]
        System.IAsyncResult BeginGetErrorStation(System.AsyncCallback callback, object asyncState);
        
        WSPoS.POSPrinterServiceReference.PrinterStation EndGetErrorStation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetErrorString", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetErrorStringResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        string GetErrorString();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetErrorString", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetErrorStringResponse")]
        System.IAsyncResult BeginGetErrorString(System.AsyncCallback callback, object asyncState);
        
        string EndGetErrorString(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrnBold", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrnBoldResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapJrnBold();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrnBold", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrnBoldResponse")]
        System.IAsyncResult BeginGetCapJrnBold(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapJrnBold(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrnDhigh", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrnDhighResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapJrnDhigh();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrnDhigh", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrnDhighResponse")]
        System.IAsyncResult BeginGetCapJrnDhigh(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapJrnDhigh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrnDwide", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrnDwideResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapJrnDwide();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrnDwide", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrnDwideResponse")]
        System.IAsyncResult BeginGetCapJrnDwide(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapJrnDwide(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrnDwideDhigh", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrnDwideDhighResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapJrnDwideDhigh();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrnDwideDhigh", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrnDwideDhighResponse")]
        System.IAsyncResult BeginGetCapJrnDwideDhigh(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapJrnDwideDhigh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrnEmptySensor", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrnEmptySensorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapJrnEmptySensor();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrnEmptySensor", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrnEmptySensorResponse")]
        System.IAsyncResult BeginGetCapJrnEmptySensor(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapJrnEmptySensor(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrnItalic", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrnItalicResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapJrnItalic();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrnItalic", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrnItalicResponse")]
        System.IAsyncResult BeginGetCapJrnItalic(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapJrnItalic(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrnNearEndSensor", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrnNearEndSensorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapJrnNearEndSensor();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrnNearEndSensor", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrnNearEndSensorResponse")]
        System.IAsyncResult BeginGetCapJrnNearEndSensor(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapJrnNearEndSensor(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrnUnderline", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrnUnderlineResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapJrnUnderline();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrnUnderline", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrnUnderlineResponse")]
        System.IAsyncResult BeginGetCapJrnUnderline(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapJrnUnderline(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrnCartridgeSensor", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrnCartridgeSensorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        int GetCapJrnCartridgeSensor();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrnCartridgeSensor", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrnCartridgeSensorResponse")]
        System.IAsyncResult BeginGetCapJrnCartridgeSensor(System.AsyncCallback callback, object asyncState);
        
        int EndGetCapJrnCartridgeSensor(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrnColor", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrnColorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        int GetCapJrnColor();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrnColor", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrnColorResponse")]
        System.IAsyncResult BeginGetCapJrnColor(System.AsyncCallback callback, object asyncState);
        
        int EndGetCapJrnColor(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecPresent", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecPresentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapRecPresent();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecPresent", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecPresentResponse")]
        System.IAsyncResult BeginGetCapRecPresent(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapRecPresent(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRec2Color", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRec2ColorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapRec2Color();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRec2Color", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRec2ColorResponse")]
        System.IAsyncResult BeginGetCapRec2Color(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapRec2Color(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecBarCode", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecBarCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapRecBarCode();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecBarCode", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecBarCodeResponse")]
        System.IAsyncResult BeginGetCapRecBarCode(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapRecBarCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecBitmap", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecBitmapResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapRecBitmap();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecBitmap", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecBitmapResponse")]
        System.IAsyncResult BeginGetCapRecBitmap(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapRecBitmap(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecBold", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecBoldResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapRecBold();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecBold", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecBoldResponse")]
        System.IAsyncResult BeginGetCapRecBold(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapRecBold(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecDhigh", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecDhighResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapRecDhigh();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecDhigh", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecDhighResponse")]
        System.IAsyncResult BeginGetCapRecDhigh(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapRecDhigh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecDwide", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecDwideResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapRecDwide();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecDwide", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecDwideResponse")]
        System.IAsyncResult BeginGetCapRecDwide(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapRecDwide(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecDwideDhigh", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecDwideDhighResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapRecDwideDhigh();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecDwideDhigh", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecDwideDhighResponse")]
        System.IAsyncResult BeginGetCapRecDwideDhigh(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapRecDwideDhigh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecEmptySensor", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecEmptySensorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapRecEmptySensor();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecEmptySensor", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecEmptySensorResponse")]
        System.IAsyncResult BeginGetCapRecEmptySensor(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapRecEmptySensor(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecItalic", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecItalicResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapRecItalic();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecItalic", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecItalicResponse")]
        System.IAsyncResult BeginGetCapRecItalic(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapRecItalic(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecLeft90", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecLeft90Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapRecLeft90();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecLeft90", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecLeft90Response")]
        System.IAsyncResult BeginGetCapRecLeft90(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapRecLeft90(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecNearEndSensor", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecNearEndSensorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapRecNearEndSensor();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecNearEndSensor", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecNearEndSensorResponse")]
        System.IAsyncResult BeginGetCapRecNearEndSensor(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapRecNearEndSensor(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecPapercut", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecPapercutResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapRecPapercut();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecPapercut", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecPapercutResponse")]
        System.IAsyncResult BeginGetCapRecPapercut(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapRecPapercut(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecRight90", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecRight90Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapRecRight90();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecRight90", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecRight90Response")]
        System.IAsyncResult BeginGetCapRecRight90(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapRecRight90(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecRotate180", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecRotate180Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapRecRotate180();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecRotate180", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecRotate180Response")]
        System.IAsyncResult BeginGetCapRecRotate180(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapRecRotate180(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecStamp", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecStampResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapRecStamp();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecStamp", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecStampResponse")]
        System.IAsyncResult BeginGetCapRecStamp(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapRecStamp(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecUnderline", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecUnderlineResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapRecUnderline();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecUnderline", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecUnderlineResponse")]
        System.IAsyncResult BeginGetCapRecUnderline(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapRecUnderline(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecCartridgeSensor", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecCartridgeSensorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        int GetCapRecCartridgeSensor();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecCartridgeSensor", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecCartridgeSensorResponse")]
        System.IAsyncResult BeginGetCapRecCartridgeSensor(System.AsyncCallback callback, object asyncState);
        
        int EndGetCapRecCartridgeSensor(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecColor", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecColorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        int GetCapRecColor();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecColor", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecColorResponse")]
        System.IAsyncResult BeginGetCapRecColor(System.AsyncCallback callback, object asyncState);
        
        int EndGetCapRecColor(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecMarkFeed", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecMarkFeedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        int GetCapRecMarkFeed();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecMarkFeed", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecMarkFeedResponse")]
        System.IAsyncResult BeginGetCapRecMarkFeed(System.AsyncCallback callback, object asyncState);
        
        int EndGetCapRecMarkFeed(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecPageMode", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecPageModeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapRecPageMode();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecPageMode", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecPageModeResponse")]
        System.IAsyncResult BeginGetCapRecPageMode(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapRecPageMode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecRuledLine", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecRuledLineResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        int GetCapRecRuledLine();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecRuledLine", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapRecRuledLineResponse")]
        System.IAsyncResult BeginGetCapRecRuledLine(System.AsyncCallback callback, object asyncState);
        
        int EndGetCapRecRuledLine(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapCompareFirmwareVersion", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapCompareFirmwareVersionRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapCompareFirmwareVersion();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapCompareFirmwareVersion", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapCompareFirmwareVersionRespons" +
            "e")]
        System.IAsyncResult BeginGetCapCompareFirmwareVersion(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapCompareFirmwareVersion(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapPowerReporting", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapPowerReportingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        WSPoS.POSPrinterServiceReference.PowerReporting GetCapPowerReporting();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapPowerReporting", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapPowerReportingResponse")]
        System.IAsyncResult BeginGetCapPowerReporting(System.AsyncCallback callback, object asyncState);
        
        WSPoS.POSPrinterServiceReference.PowerReporting EndGetCapPowerReporting(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapStatisticsReporting", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapStatisticsReportingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapStatisticsReporting();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapStatisticsReporting", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapStatisticsReportingResponse")]
        System.IAsyncResult BeginGetCapStatisticsReporting(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapStatisticsReporting(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapUpdateFirmware", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapUpdateFirmwareResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapUpdateFirmware();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapUpdateFirmware", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapUpdateFirmwareResponse")]
        System.IAsyncResult BeginGetCapUpdateFirmware(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapUpdateFirmware(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapUpdateStatistics", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapUpdateStatisticsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapUpdateStatistics();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapUpdateStatistics", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapUpdateStatisticsResponse")]
        System.IAsyncResult BeginGetCapUpdateStatistics(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapUpdateStatistics(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCheckHealthText", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCheckHealthTextResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        string GetCheckHealthText();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCheckHealthText", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCheckHealthTextResponse")]
        System.IAsyncResult BeginGetCheckHealthText(System.AsyncCallback callback, object asyncState);
        
        string EndGetCheckHealthText(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetClaimed", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetClaimedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetClaimed();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetClaimed", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetClaimedResponse")]
        System.IAsyncResult BeginGetClaimed(System.AsyncCallback callback, object asyncState);
        
        bool EndGetClaimed(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetDeviceEnabled", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetDeviceEnabledResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetDeviceEnabled();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetDeviceEnabled", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetDeviceEnabledResponse")]
        System.IAsyncResult BeginGetDeviceEnabled(System.AsyncCallback callback, object asyncState);
        
        bool EndGetDeviceEnabled(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetDeviceEnabled", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetDeviceEnabledResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void SetDeviceEnabled(bool DeviceEnabled);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetDeviceEnabled", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetDeviceEnabledResponse")]
        System.IAsyncResult BeginSetDeviceEnabled(bool DeviceEnabled, System.AsyncCallback callback, object asyncState);
        
        void EndSetDeviceEnabled(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetFreezeEvents", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetFreezeEventsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetFreezeEvents();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetFreezeEvents", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetFreezeEventsResponse")]
        System.IAsyncResult BeginGetFreezeEvents(System.AsyncCallback callback, object asyncState);
        
        bool EndGetFreezeEvents(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetFreezeEvents", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetFreezeEventsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void SetFreezeEvents(bool FreezeEvents);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetFreezeEvents", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetFreezeEventsResponse")]
        System.IAsyncResult BeginSetFreezeEvents(bool FreezeEvents, System.AsyncCallback callback, object asyncState);
        
        void EndSetFreezeEvents(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetOutputID", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetOutputIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        int GetOutputID();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetOutputID", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetOutputIDResponse")]
        System.IAsyncResult BeginGetOutputID(System.AsyncCallback callback, object asyncState);
        
        int EndGetOutputID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetPowerNotify", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetPowerNotifyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        WSPoS.POSPrinterServiceReference.PowerNotification GetPowerNotify();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetPowerNotify", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetPowerNotifyResponse")]
        System.IAsyncResult BeginGetPowerNotify(System.AsyncCallback callback, object asyncState);
        
        WSPoS.POSPrinterServiceReference.PowerNotification EndGetPowerNotify(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetPowerNotify", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetPowerNotifyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        void SetPowerNotify(WSPoS.POSPrinterServiceReference.PowerNotification PowerNotify);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetPowerNotify", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/SetPowerNotifyResponse")]
        System.IAsyncResult BeginSetPowerNotify(WSPoS.POSPrinterServiceReference.PowerNotification PowerNotify, System.AsyncCallback callback, object asyncState);
        
        void EndSetPowerNotify(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetPowerState", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetPowerStateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        WSPoS.POSPrinterServiceReference.PowerState GetPowerState();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetPowerState", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetPowerStateResponse")]
        System.IAsyncResult BeginGetPowerState(System.AsyncCallback callback, object asyncState);
        
        WSPoS.POSPrinterServiceReference.PowerState EndGetPowerState(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetState", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetStateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        WSPoS.POSPrinterServiceReference.ControlState GetState();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetState", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetStateResponse")]
        System.IAsyncResult BeginGetState(System.AsyncCallback callback, object asyncState);
        
        WSPoS.POSPrinterServiceReference.ControlState EndGetState(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetDeviceControlDescription", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetDeviceControlDescriptionResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        string GetDeviceControlDescription();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetDeviceControlDescription", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetDeviceControlDescriptionResponse" +
            "")]
        System.IAsyncResult BeginGetDeviceControlDescription(System.AsyncCallback callback, object asyncState);
        
        string EndGetDeviceControlDescription(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetDeviceControlVersion", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetDeviceControlVersionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        WSPoS.POSPrinterServiceReference.UposVersion GetDeviceControlVersion();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetDeviceControlVersion", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetDeviceControlVersionResponse")]
        System.IAsyncResult BeginGetDeviceControlVersion(System.AsyncCallback callback, object asyncState);
        
        WSPoS.POSPrinterServiceReference.UposVersion EndGetDeviceControlVersion(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetDeviceServiceDescription", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetDeviceServiceDescriptionResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        string GetDeviceServiceDescription();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetDeviceServiceDescription", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetDeviceServiceDescriptionResponse" +
            "")]
        System.IAsyncResult BeginGetDeviceServiceDescription(System.AsyncCallback callback, object asyncState);
        
        string EndGetDeviceServiceDescription(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetDeviceServiceVersion", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetDeviceServiceVersionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        WSPoS.POSPrinterServiceReference.UposVersion GetDeviceServiceVersion();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetDeviceServiceVersion", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetDeviceServiceVersionResponse")]
        System.IAsyncResult BeginGetDeviceServiceVersion(System.AsyncCallback callback, object asyncState);
        
        WSPoS.POSPrinterServiceReference.UposVersion EndGetDeviceServiceVersion(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetPhysicalDeviceDescription", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetPhysicalDeviceDescriptionRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        string GetPhysicalDeviceDescription();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetPhysicalDeviceDescription", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetPhysicalDeviceDescriptionRespons" +
            "e")]
        System.IAsyncResult BeginGetPhysicalDeviceDescription(System.AsyncCallback callback, object asyncState);
        
        string EndGetPhysicalDeviceDescription(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetPhysicalDeviceName", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetPhysicalDeviceNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        string GetPhysicalDeviceName();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetPhysicalDeviceName", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetPhysicalDeviceNameResponse")]
        System.IAsyncResult BeginGetPhysicalDeviceName(System.AsyncCallback callback, object asyncState);
        
        string EndGetPhysicalDeviceName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapCharacterSet", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapCharacterSetResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        WSPoS.POSPrinterServiceReference.CharacterSetCapability GetCapCharacterSet();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapCharacterSet", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapCharacterSetResponse")]
        System.IAsyncResult BeginGetCapCharacterSet(System.AsyncCallback callback, object asyncState);
        
        WSPoS.POSPrinterServiceReference.CharacterSetCapability EndGetCapCharacterSet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapConcurrentJrnRec", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapConcurrentJrnRecResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapConcurrentJrnRec();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapConcurrentJrnRec", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapConcurrentJrnRecResponse")]
        System.IAsyncResult BeginGetCapConcurrentJrnRec(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapConcurrentJrnRec(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapConcurrentJrnSlp", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapConcurrentJrnSlpResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapConcurrentJrnSlp();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapConcurrentJrnSlp", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapConcurrentJrnSlpResponse")]
        System.IAsyncResult BeginGetCapConcurrentJrnSlp(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapConcurrentJrnSlp(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapConcurrentPageMode", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapConcurrentPageModeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapConcurrentPageMode();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapConcurrentPageMode", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapConcurrentPageModeResponse")]
        System.IAsyncResult BeginGetCapConcurrentPageMode(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapConcurrentPageMode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapConcurrentRecSlp", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapConcurrentRecSlpResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapConcurrentRecSlp();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapConcurrentRecSlp", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapConcurrentRecSlpResponse")]
        System.IAsyncResult BeginGetCapConcurrentRecSlp(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapConcurrentRecSlp(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapCoverSensor", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapCoverSensorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapCoverSensor();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapCoverSensor", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapCoverSensorResponse")]
        System.IAsyncResult BeginGetCapCoverSensor(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapCoverSensor(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapMapCharacterSet", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapMapCharacterSetResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapMapCharacterSet();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapMapCharacterSet", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapMapCharacterSetResponse")]
        System.IAsyncResult BeginGetCapMapCharacterSet(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapMapCharacterSet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapTransaction", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapTransactionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapTransaction();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapTransaction", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapTransactionResponse")]
        System.IAsyncResult BeginGetCapTransaction(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapTransaction(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrnPresent", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrnPresentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapJrnPresent();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrnPresent", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrnPresentResponse")]
        System.IAsyncResult BeginGetCapJrnPresent(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapJrnPresent(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrn2Color", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrn2ColorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSPoS.POSPrinterServiceReference.UposException), Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/UposException", Name="UposException")]
        bool GetCapJrn2Color();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrn2Color", ReplyAction="http://www.nrf-arts.org/UnifiedPOS/POSPrinter/GetCapJrn2ColorResponse")]
        System.IAsyncResult BeginGetCapJrn2Color(System.AsyncCallback callback, object asyncState);
        
        bool EndGetCapJrn2Color(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface POSPrinterChannel : WSPoS.POSPrinterServiceReference.POSPrinter, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSlpLetterQualityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSlpLetterQualityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSlpEmptyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSlpEmptyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSlpNearEndCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSlpNearEndCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSlpSidewaysMaxLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSlpSidewaysMaxLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSlpSidewaysMaxCharsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSlpSidewaysMaxCharsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSlpMaxLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSlpMaxLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSlpLinesNearEndToEndCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSlpLinesNearEndToEndCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSlpBarCodeRotationListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSlpBarCodeRotationListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WSPoS.POSPrinterServiceReference.RotationList Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WSPoS.POSPrinterServiceReference.RotationList)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSlpBitmapRotationListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSlpBitmapRotationListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WSPoS.POSPrinterServiceReference.RotationList Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WSPoS.POSPrinterServiceReference.RotationList)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSlpPrintSideCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSlpPrintSideCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WSPoS.POSPrinterServiceReference.PrinterSide Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WSPoS.POSPrinterServiceReference.PrinterSide)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSlpCartridgeStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSlpCartridgeStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WSPoS.POSPrinterServiceReference.PrinterCartridgeStates Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WSPoS.POSPrinterServiceReference.PrinterCartridgeStates)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSlpCurrentCartridgeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSlpCurrentCartridgeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DirectIOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DirectIOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WSPoS.POSPrinterServiceReference.DirectIOData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WSPoS.POSPrinterServiceReference.DirectIOData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CompareFirmwareVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CompareFirmwareVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WSPoS.POSPrinterServiceReference.CompareFirmwareResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WSPoS.POSPrinterServiceReference.CompareFirmwareResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveStatisticsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveStatisticsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetJrnNearEndCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetJrnNearEndCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetJrnCartridgeStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetJrnCartridgeStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WSPoS.POSPrinterServiceReference.PrinterCartridgeStates Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WSPoS.POSPrinterServiceReference.PrinterCartridgeStates)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetJrnCurrentCartridgeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetJrnCurrentCartridgeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRecLineCharsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRecLineCharsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRecLineCharsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRecLineCharsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WSPoS.POSPrinterServiceReference.LineCharsList Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WSPoS.POSPrinterServiceReference.LineCharsList)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRecLineHeightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRecLineHeightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRecLineSpacingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRecLineSpacingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRecLineWidthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRecLineWidthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRecLetterQualityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRecLetterQualityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRecEmptyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRecEmptyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRecNearEndCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRecNearEndCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRecSidewaysMaxCharsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRecSidewaysMaxCharsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRecSidewaysMaxLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRecSidewaysMaxLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRecLinesToPaperCutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRecLinesToPaperCutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRecBarCodeRotationListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRecBarCodeRotationListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WSPoS.POSPrinterServiceReference.RotationList Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WSPoS.POSPrinterServiceReference.RotationList)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRecBitmapRotationListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRecBitmapRotationListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WSPoS.POSPrinterServiceReference.RotationList Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WSPoS.POSPrinterServiceReference.RotationList)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRecCartridgeStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRecCartridgeStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WSPoS.POSPrinterServiceReference.PrinterCartridgeStates Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WSPoS.POSPrinterServiceReference.PrinterCartridgeStates)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRecCurrentCartridgeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRecCurrentCartridgeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSlpLineCharsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSlpLineCharsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSlpLineCharsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSlpLineCharsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WSPoS.POSPrinterServiceReference.LineCharsList Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WSPoS.POSPrinterServiceReference.LineCharsList)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSlpLineHeightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSlpLineHeightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSlpLineSpacingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSlpLineSpacingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSlpLineWidthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSlpLineWidthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFontTypefaceListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFontTypefaceListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WSPoS.POSPrinterServiceReference.FontTypefaceList Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WSPoS.POSPrinterServiceReference.FontTypefaceList)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFlagWhenIdleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFlagWhenIdleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMapCharacterSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMapCharacterSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMapModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMapModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WSPoS.POSPrinterServiceReference.MapMode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WSPoS.POSPrinterServiceReference.MapMode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPageModeAreaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPageModeAreaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WSPoS.POSPrinterServiceReference.Point Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WSPoS.POSPrinterServiceReference.Point)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPageModeDescriptorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPageModeDescriptorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPageModeHorizontalPositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPageModeHorizontalPositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPageModePrintAreaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPageModePrintAreaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WSPoS.POSPrinterServiceReference.Rectangle Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WSPoS.POSPrinterServiceReference.Rectangle)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPageModePrintDirectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPageModePrintDirectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WSPoS.POSPrinterServiceReference.PageModePrintDirection Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WSPoS.POSPrinterServiceReference.PageModePrintDirection)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPageModeStationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPageModeStationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WSPoS.POSPrinterServiceReference.PrinterStation Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WSPoS.POSPrinterServiceReference.PrinterStation)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPageModeVerticalPositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPageModeVerticalPositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRotateSpecialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRotateSpecialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WSPoS.POSPrinterServiceReference.Rotation Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WSPoS.POSPrinterServiceReference.Rotation)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetJrnLineCharsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetJrnLineCharsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetJrnLineCharsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetJrnLineCharsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WSPoS.POSPrinterServiceReference.LineCharsList Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WSPoS.POSPrinterServiceReference.LineCharsList)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetJrnLineHeightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetJrnLineHeightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetJrnLineSpacingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetJrnLineSpacingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetJrnLineWidthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetJrnLineWidthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetJrnLetterQualityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetJrnLetterQualityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetJrnEmptyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetJrnEmptyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapSlpPresentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapSlpPresentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapSlpFullslipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapSlpFullslipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapSlp2ColorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapSlp2ColorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapSlpBarCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapSlpBarCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapSlpBitmapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapSlpBitmapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapSlpBoldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapSlpBoldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapSlpDhighCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapSlpDhighCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapSlpDwideCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapSlpDwideCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapSlpDwideDhighCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapSlpDwideDhighCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapSlpEmptySensorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapSlpEmptySensorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapSlpItalicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapSlpItalicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapSlpLeft90CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapSlpLeft90CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapSlpNearEndSensorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapSlpNearEndSensorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapSlpRight90CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapSlpRight90CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapSlpRotate180CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapSlpRotate180CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapSlpUnderlineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapSlpUnderlineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapSlpBothSidesPrintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapSlpBothSidesPrintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapSlpCartridgeSensorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapSlpCartridgeSensorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapSlpColorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapSlpColorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapSlpPageModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapSlpPageModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapSlpRuledLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapSlpRuledLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAsyncModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAsyncModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCartridgeNotifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCartridgeNotifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WSPoS.POSPrinterServiceReference.PrinterCartridgeNotify Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WSPoS.POSPrinterServiceReference.PrinterCartridgeNotify)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCharacterSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCharacterSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCharacterSetListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCharacterSetListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WSPoS.POSPrinterServiceReference.CharacterSetList Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WSPoS.POSPrinterServiceReference.CharacterSetList)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCoverOpenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCoverOpenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetErrorLevelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetErrorLevelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WSPoS.POSPrinterServiceReference.PrinterErrorLevel Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WSPoS.POSPrinterServiceReference.PrinterErrorLevel)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetErrorStationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetErrorStationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WSPoS.POSPrinterServiceReference.PrinterStation Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WSPoS.POSPrinterServiceReference.PrinterStation)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetErrorStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetErrorStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapJrnBoldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapJrnBoldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapJrnDhighCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapJrnDhighCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapJrnDwideCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapJrnDwideCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapJrnDwideDhighCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapJrnDwideDhighCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapJrnEmptySensorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapJrnEmptySensorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapJrnItalicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapJrnItalicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapJrnNearEndSensorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapJrnNearEndSensorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapJrnUnderlineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapJrnUnderlineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapJrnCartridgeSensorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapJrnCartridgeSensorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapJrnColorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapJrnColorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapRecPresentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapRecPresentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapRec2ColorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapRec2ColorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapRecBarCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapRecBarCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapRecBitmapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapRecBitmapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapRecBoldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapRecBoldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapRecDhighCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapRecDhighCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapRecDwideCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapRecDwideCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapRecDwideDhighCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapRecDwideDhighCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapRecEmptySensorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapRecEmptySensorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapRecItalicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapRecItalicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapRecLeft90CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapRecLeft90CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapRecNearEndSensorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapRecNearEndSensorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapRecPapercutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapRecPapercutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapRecRight90CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapRecRight90CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapRecRotate180CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapRecRotate180CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapRecStampCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapRecStampCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapRecUnderlineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapRecUnderlineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapRecCartridgeSensorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapRecCartridgeSensorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapRecColorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapRecColorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapRecMarkFeedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapRecMarkFeedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapRecPageModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapRecPageModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapRecRuledLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapRecRuledLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapCompareFirmwareVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapCompareFirmwareVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapPowerReportingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapPowerReportingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WSPoS.POSPrinterServiceReference.PowerReporting Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WSPoS.POSPrinterServiceReference.PowerReporting)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapStatisticsReportingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapStatisticsReportingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapUpdateFirmwareCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapUpdateFirmwareCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapUpdateStatisticsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapUpdateStatisticsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCheckHealthTextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCheckHealthTextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetClaimedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetClaimedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDeviceEnabledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDeviceEnabledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFreezeEventsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFreezeEventsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOutputIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOutputIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPowerNotifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPowerNotifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WSPoS.POSPrinterServiceReference.PowerNotification Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WSPoS.POSPrinterServiceReference.PowerNotification)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPowerStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPowerStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WSPoS.POSPrinterServiceReference.PowerState Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WSPoS.POSPrinterServiceReference.PowerState)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WSPoS.POSPrinterServiceReference.ControlState Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WSPoS.POSPrinterServiceReference.ControlState)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDeviceControlDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDeviceControlDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDeviceControlVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDeviceControlVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WSPoS.POSPrinterServiceReference.UposVersion Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WSPoS.POSPrinterServiceReference.UposVersion)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDeviceServiceDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDeviceServiceDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDeviceServiceVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDeviceServiceVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WSPoS.POSPrinterServiceReference.UposVersion Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WSPoS.POSPrinterServiceReference.UposVersion)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPhysicalDeviceDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPhysicalDeviceDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPhysicalDeviceNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPhysicalDeviceNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapCharacterSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapCharacterSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WSPoS.POSPrinterServiceReference.CharacterSetCapability Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WSPoS.POSPrinterServiceReference.CharacterSetCapability)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapConcurrentJrnRecCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapConcurrentJrnRecCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapConcurrentJrnSlpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapConcurrentJrnSlpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapConcurrentPageModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapConcurrentPageModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapConcurrentRecSlpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapConcurrentRecSlpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapCoverSensorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapCoverSensorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapMapCharacterSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapMapCharacterSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapJrnPresentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapJrnPresentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapJrn2ColorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapJrn2ColorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class POSPrinterClient : System.ServiceModel.ClientBase<WSPoS.POSPrinterServiceReference.POSPrinter>, WSPoS.POSPrinterServiceReference.POSPrinter {
        
        private BeginOperationDelegate onBeginEndInsertionDelegate;
        
        private EndOperationDelegate onEndEndInsertionDelegate;
        
        private System.Threading.SendOrPostCallback onEndInsertionCompletedDelegate;
        
        private BeginOperationDelegate onBeginEndRemovalDelegate;
        
        private EndOperationDelegate onEndEndRemovalDelegate;
        
        private System.Threading.SendOrPostCallback onEndRemovalCompletedDelegate;
        
        private BeginOperationDelegate onBeginMarkFeedDelegate;
        
        private EndOperationDelegate onEndMarkFeedDelegate;
        
        private System.Threading.SendOrPostCallback onMarkFeedCompletedDelegate;
        
        private BeginOperationDelegate onBeginPageModePrintDelegate;
        
        private EndOperationDelegate onEndPageModePrintDelegate;
        
        private System.Threading.SendOrPostCallback onPageModePrintCompletedDelegate;
        
        private BeginOperationDelegate onBeginPrintBarCodeDelegate;
        
        private EndOperationDelegate onEndPrintBarCodeDelegate;
        
        private System.Threading.SendOrPostCallback onPrintBarCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginPrintBitmapDelegate;
        
        private EndOperationDelegate onEndPrintBitmapDelegate;
        
        private System.Threading.SendOrPostCallback onPrintBitmapCompletedDelegate;
        
        private BeginOperationDelegate onBeginPrintImmediateDelegate;
        
        private EndOperationDelegate onEndPrintImmediateDelegate;
        
        private System.Threading.SendOrPostCallback onPrintImmediateCompletedDelegate;
        
        private BeginOperationDelegate onBeginPrintMemoryBitmapDelegate;
        
        private EndOperationDelegate onEndPrintMemoryBitmapDelegate;
        
        private System.Threading.SendOrPostCallback onPrintMemoryBitmapCompletedDelegate;
        
        private BeginOperationDelegate onBeginPrintNormalDelegate;
        
        private EndOperationDelegate onEndPrintNormalDelegate;
        
        private System.Threading.SendOrPostCallback onPrintNormalCompletedDelegate;
        
        private BeginOperationDelegate onBeginPrintTwoNormalDelegate;
        
        private EndOperationDelegate onEndPrintTwoNormalDelegate;
        
        private System.Threading.SendOrPostCallback onPrintTwoNormalCompletedDelegate;
        
        private BeginOperationDelegate onBeginRotatePrintDelegate;
        
        private EndOperationDelegate onEndRotatePrintDelegate;
        
        private System.Threading.SendOrPostCallback onRotatePrintCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetBitmapDelegate;
        
        private EndOperationDelegate onEndSetBitmapDelegate;
        
        private System.Threading.SendOrPostCallback onSetBitmapCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetLogoDelegate;
        
        private EndOperationDelegate onEndSetLogoDelegate;
        
        private System.Threading.SendOrPostCallback onSetLogoCompletedDelegate;
        
        private BeginOperationDelegate onBeginTransactionPrintDelegate;
        
        private EndOperationDelegate onEndTransactionPrintDelegate;
        
        private System.Threading.SendOrPostCallback onTransactionPrintCompletedDelegate;
        
        private BeginOperationDelegate onBeginValidateDataDelegate;
        
        private EndOperationDelegate onEndValidateDataDelegate;
        
        private System.Threading.SendOrPostCallback onValidateDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSlpLetterQualityDelegate;
        
        private EndOperationDelegate onEndGetSlpLetterQualityDelegate;
        
        private System.Threading.SendOrPostCallback onGetSlpLetterQualityCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetSlpLetterQualityDelegate;
        
        private EndOperationDelegate onEndSetSlpLetterQualityDelegate;
        
        private System.Threading.SendOrPostCallback onSetSlpLetterQualityCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSlpEmptyDelegate;
        
        private EndOperationDelegate onEndGetSlpEmptyDelegate;
        
        private System.Threading.SendOrPostCallback onGetSlpEmptyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSlpNearEndDelegate;
        
        private EndOperationDelegate onEndGetSlpNearEndDelegate;
        
        private System.Threading.SendOrPostCallback onGetSlpNearEndCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSlpSidewaysMaxLinesDelegate;
        
        private EndOperationDelegate onEndGetSlpSidewaysMaxLinesDelegate;
        
        private System.Threading.SendOrPostCallback onGetSlpSidewaysMaxLinesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSlpSidewaysMaxCharsDelegate;
        
        private EndOperationDelegate onEndGetSlpSidewaysMaxCharsDelegate;
        
        private System.Threading.SendOrPostCallback onGetSlpSidewaysMaxCharsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSlpMaxLinesDelegate;
        
        private EndOperationDelegate onEndGetSlpMaxLinesDelegate;
        
        private System.Threading.SendOrPostCallback onGetSlpMaxLinesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSlpLinesNearEndToEndDelegate;
        
        private EndOperationDelegate onEndGetSlpLinesNearEndToEndDelegate;
        
        private System.Threading.SendOrPostCallback onGetSlpLinesNearEndToEndCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSlpBarCodeRotationListDelegate;
        
        private EndOperationDelegate onEndGetSlpBarCodeRotationListDelegate;
        
        private System.Threading.SendOrPostCallback onGetSlpBarCodeRotationListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSlpBitmapRotationListDelegate;
        
        private EndOperationDelegate onEndGetSlpBitmapRotationListDelegate;
        
        private System.Threading.SendOrPostCallback onGetSlpBitmapRotationListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSlpPrintSideDelegate;
        
        private EndOperationDelegate onEndGetSlpPrintSideDelegate;
        
        private System.Threading.SendOrPostCallback onGetSlpPrintSideCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSlpCartridgeStateDelegate;
        
        private EndOperationDelegate onEndGetSlpCartridgeStateDelegate;
        
        private System.Threading.SendOrPostCallback onGetSlpCartridgeStateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSlpCurrentCartridgeDelegate;
        
        private EndOperationDelegate onEndGetSlpCurrentCartridgeDelegate;
        
        private System.Threading.SendOrPostCallback onGetSlpCurrentCartridgeCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetSlpCurrentCartridgeDelegate;
        
        private EndOperationDelegate onEndSetSlpCurrentCartridgeDelegate;
        
        private System.Threading.SendOrPostCallback onSetSlpCurrentCartridgeCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        private BeginOperationDelegate onBeginClaimDelegate;
        
        private EndOperationDelegate onEndClaimDelegate;
        
        private System.Threading.SendOrPostCallback onClaimCompletedDelegate;
        
        private BeginOperationDelegate onBeginReleaseDelegate;
        
        private EndOperationDelegate onEndReleaseDelegate;
        
        private System.Threading.SendOrPostCallback onReleaseCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckHealthDelegate;
        
        private EndOperationDelegate onEndCheckHealthDelegate;
        
        private System.Threading.SendOrPostCallback onCheckHealthCompletedDelegate;
        
        private BeginOperationDelegate onBeginClearOutputDelegate;
        
        private EndOperationDelegate onEndClearOutputDelegate;
        
        private System.Threading.SendOrPostCallback onClearOutputCompletedDelegate;
        
        private BeginOperationDelegate onBeginDirectIODelegate;
        
        private EndOperationDelegate onEndDirectIODelegate;
        
        private System.Threading.SendOrPostCallback onDirectIOCompletedDelegate;
        
        private BeginOperationDelegate onBeginCompareFirmwareVersionDelegate;
        
        private EndOperationDelegate onEndCompareFirmwareVersionDelegate;
        
        private System.Threading.SendOrPostCallback onCompareFirmwareVersionCompletedDelegate;
        
        private BeginOperationDelegate onBeginResetStatisticsDelegate;
        
        private EndOperationDelegate onEndResetStatisticsDelegate;
        
        private System.Threading.SendOrPostCallback onResetStatisticsCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveStatisticsDelegate;
        
        private EndOperationDelegate onEndRetrieveStatisticsDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveStatisticsCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateFirmwareDelegate;
        
        private EndOperationDelegate onEndUpdateFirmwareDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateFirmwareCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateStatisticsDelegate;
        
        private EndOperationDelegate onEndUpdateStatisticsDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateStatisticsCompletedDelegate;
        
        private BeginOperationDelegate onBeginBeginInsertionDelegate;
        
        private EndOperationDelegate onEndBeginInsertionDelegate;
        
        private System.Threading.SendOrPostCallback onBeginInsertionCompletedDelegate;
        
        private BeginOperationDelegate onBeginBeginRemovalDelegate;
        
        private EndOperationDelegate onEndBeginRemovalDelegate;
        
        private System.Threading.SendOrPostCallback onBeginRemovalCompletedDelegate;
        
        private BeginOperationDelegate onBeginChangePrintSideDelegate;
        
        private EndOperationDelegate onEndChangePrintSideDelegate;
        
        private System.Threading.SendOrPostCallback onChangePrintSideCompletedDelegate;
        
        private BeginOperationDelegate onBeginClearPrintAreaDelegate;
        
        private EndOperationDelegate onEndClearPrintAreaDelegate;
        
        private System.Threading.SendOrPostCallback onClearPrintAreaCompletedDelegate;
        
        private BeginOperationDelegate onBeginCutPaperDelegate;
        
        private EndOperationDelegate onEndCutPaperDelegate;
        
        private System.Threading.SendOrPostCallback onCutPaperCompletedDelegate;
        
        private BeginOperationDelegate onBeginDrawRuledLineDelegate;
        
        private EndOperationDelegate onEndDrawRuledLineDelegate;
        
        private System.Threading.SendOrPostCallback onDrawRuledLineCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetJrnNearEndDelegate;
        
        private EndOperationDelegate onEndGetJrnNearEndDelegate;
        
        private System.Threading.SendOrPostCallback onGetJrnNearEndCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetJrnCartridgeStateDelegate;
        
        private EndOperationDelegate onEndGetJrnCartridgeStateDelegate;
        
        private System.Threading.SendOrPostCallback onGetJrnCartridgeStateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetJrnCurrentCartridgeDelegate;
        
        private EndOperationDelegate onEndGetJrnCurrentCartridgeDelegate;
        
        private System.Threading.SendOrPostCallback onGetJrnCurrentCartridgeCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetJrnCurrentCartridgeDelegate;
        
        private EndOperationDelegate onEndSetJrnCurrentCartridgeDelegate;
        
        private System.Threading.SendOrPostCallback onSetJrnCurrentCartridgeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRecLineCharsDelegate;
        
        private EndOperationDelegate onEndGetRecLineCharsDelegate;
        
        private System.Threading.SendOrPostCallback onGetRecLineCharsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetRecLineCharsDelegate;
        
        private EndOperationDelegate onEndSetRecLineCharsDelegate;
        
        private System.Threading.SendOrPostCallback onSetRecLineCharsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRecLineCharsListDelegate;
        
        private EndOperationDelegate onEndGetRecLineCharsListDelegate;
        
        private System.Threading.SendOrPostCallback onGetRecLineCharsListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRecLineHeightDelegate;
        
        private EndOperationDelegate onEndGetRecLineHeightDelegate;
        
        private System.Threading.SendOrPostCallback onGetRecLineHeightCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetRecLineHeightDelegate;
        
        private EndOperationDelegate onEndSetRecLineHeightDelegate;
        
        private System.Threading.SendOrPostCallback onSetRecLineHeightCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRecLineSpacingDelegate;
        
        private EndOperationDelegate onEndGetRecLineSpacingDelegate;
        
        private System.Threading.SendOrPostCallback onGetRecLineSpacingCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetRecLineSpacingDelegate;
        
        private EndOperationDelegate onEndSetRecLineSpacingDelegate;
        
        private System.Threading.SendOrPostCallback onSetRecLineSpacingCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRecLineWidthDelegate;
        
        private EndOperationDelegate onEndGetRecLineWidthDelegate;
        
        private System.Threading.SendOrPostCallback onGetRecLineWidthCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRecLetterQualityDelegate;
        
        private EndOperationDelegate onEndGetRecLetterQualityDelegate;
        
        private System.Threading.SendOrPostCallback onGetRecLetterQualityCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetRecLetterQualityDelegate;
        
        private EndOperationDelegate onEndSetRecLetterQualityDelegate;
        
        private System.Threading.SendOrPostCallback onSetRecLetterQualityCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRecEmptyDelegate;
        
        private EndOperationDelegate onEndGetRecEmptyDelegate;
        
        private System.Threading.SendOrPostCallback onGetRecEmptyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRecNearEndDelegate;
        
        private EndOperationDelegate onEndGetRecNearEndDelegate;
        
        private System.Threading.SendOrPostCallback onGetRecNearEndCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRecSidewaysMaxCharsDelegate;
        
        private EndOperationDelegate onEndGetRecSidewaysMaxCharsDelegate;
        
        private System.Threading.SendOrPostCallback onGetRecSidewaysMaxCharsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRecSidewaysMaxLinesDelegate;
        
        private EndOperationDelegate onEndGetRecSidewaysMaxLinesDelegate;
        
        private System.Threading.SendOrPostCallback onGetRecSidewaysMaxLinesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRecLinesToPaperCutDelegate;
        
        private EndOperationDelegate onEndGetRecLinesToPaperCutDelegate;
        
        private System.Threading.SendOrPostCallback onGetRecLinesToPaperCutCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRecBarCodeRotationListDelegate;
        
        private EndOperationDelegate onEndGetRecBarCodeRotationListDelegate;
        
        private System.Threading.SendOrPostCallback onGetRecBarCodeRotationListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRecBitmapRotationListDelegate;
        
        private EndOperationDelegate onEndGetRecBitmapRotationListDelegate;
        
        private System.Threading.SendOrPostCallback onGetRecBitmapRotationListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRecCartridgeStateDelegate;
        
        private EndOperationDelegate onEndGetRecCartridgeStateDelegate;
        
        private System.Threading.SendOrPostCallback onGetRecCartridgeStateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRecCurrentCartridgeDelegate;
        
        private EndOperationDelegate onEndGetRecCurrentCartridgeDelegate;
        
        private System.Threading.SendOrPostCallback onGetRecCurrentCartridgeCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetRecCurrentCartridgeDelegate;
        
        private EndOperationDelegate onEndSetRecCurrentCartridgeDelegate;
        
        private System.Threading.SendOrPostCallback onSetRecCurrentCartridgeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSlpLineCharsDelegate;
        
        private EndOperationDelegate onEndGetSlpLineCharsDelegate;
        
        private System.Threading.SendOrPostCallback onGetSlpLineCharsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetSlpLineCharsDelegate;
        
        private EndOperationDelegate onEndSetSlpLineCharsDelegate;
        
        private System.Threading.SendOrPostCallback onSetSlpLineCharsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSlpLineCharsListDelegate;
        
        private EndOperationDelegate onEndGetSlpLineCharsListDelegate;
        
        private System.Threading.SendOrPostCallback onGetSlpLineCharsListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSlpLineHeightDelegate;
        
        private EndOperationDelegate onEndGetSlpLineHeightDelegate;
        
        private System.Threading.SendOrPostCallback onGetSlpLineHeightCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetSlpLineHeightDelegate;
        
        private EndOperationDelegate onEndSetSlpLineHeightDelegate;
        
        private System.Threading.SendOrPostCallback onSetSlpLineHeightCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSlpLineSpacingDelegate;
        
        private EndOperationDelegate onEndGetSlpLineSpacingDelegate;
        
        private System.Threading.SendOrPostCallback onGetSlpLineSpacingCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetSlpLineSpacingDelegate;
        
        private EndOperationDelegate onEndSetSlpLineSpacingDelegate;
        
        private System.Threading.SendOrPostCallback onSetSlpLineSpacingCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSlpLineWidthDelegate;
        
        private EndOperationDelegate onEndGetSlpLineWidthDelegate;
        
        private System.Threading.SendOrPostCallback onGetSlpLineWidthCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFontTypefaceListDelegate;
        
        private EndOperationDelegate onEndGetFontTypefaceListDelegate;
        
        private System.Threading.SendOrPostCallback onGetFontTypefaceListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFlagWhenIdleDelegate;
        
        private EndOperationDelegate onEndGetFlagWhenIdleDelegate;
        
        private System.Threading.SendOrPostCallback onGetFlagWhenIdleCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetFlagWhenIdleDelegate;
        
        private EndOperationDelegate onEndSetFlagWhenIdleDelegate;
        
        private System.Threading.SendOrPostCallback onSetFlagWhenIdleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMapCharacterSetDelegate;
        
        private EndOperationDelegate onEndGetMapCharacterSetDelegate;
        
        private System.Threading.SendOrPostCallback onGetMapCharacterSetCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetMapCharacterSetDelegate;
        
        private EndOperationDelegate onEndSetMapCharacterSetDelegate;
        
        private System.Threading.SendOrPostCallback onSetMapCharacterSetCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMapModeDelegate;
        
        private EndOperationDelegate onEndGetMapModeDelegate;
        
        private System.Threading.SendOrPostCallback onGetMapModeCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetMapModeDelegate;
        
        private EndOperationDelegate onEndSetMapModeDelegate;
        
        private System.Threading.SendOrPostCallback onSetMapModeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPageModeAreaDelegate;
        
        private EndOperationDelegate onEndGetPageModeAreaDelegate;
        
        private System.Threading.SendOrPostCallback onGetPageModeAreaCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPageModeDescriptorDelegate;
        
        private EndOperationDelegate onEndGetPageModeDescriptorDelegate;
        
        private System.Threading.SendOrPostCallback onGetPageModeDescriptorCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPageModeHorizontalPositionDelegate;
        
        private EndOperationDelegate onEndGetPageModeHorizontalPositionDelegate;
        
        private System.Threading.SendOrPostCallback onGetPageModeHorizontalPositionCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetPageModeHorizontalPositionDelegate;
        
        private EndOperationDelegate onEndSetPageModeHorizontalPositionDelegate;
        
        private System.Threading.SendOrPostCallback onSetPageModeHorizontalPositionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPageModePrintAreaDelegate;
        
        private EndOperationDelegate onEndGetPageModePrintAreaDelegate;
        
        private System.Threading.SendOrPostCallback onGetPageModePrintAreaCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetPageModePrintAreaDelegate;
        
        private EndOperationDelegate onEndSetPageModePrintAreaDelegate;
        
        private System.Threading.SendOrPostCallback onSetPageModePrintAreaCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPageModePrintDirectionDelegate;
        
        private EndOperationDelegate onEndGetPageModePrintDirectionDelegate;
        
        private System.Threading.SendOrPostCallback onGetPageModePrintDirectionCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetPageModePrintDirectionDelegate;
        
        private EndOperationDelegate onEndSetPageModePrintDirectionDelegate;
        
        private System.Threading.SendOrPostCallback onSetPageModePrintDirectionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPageModeStationDelegate;
        
        private EndOperationDelegate onEndGetPageModeStationDelegate;
        
        private System.Threading.SendOrPostCallback onGetPageModeStationCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetPageModeStationDelegate;
        
        private EndOperationDelegate onEndSetPageModeStationDelegate;
        
        private System.Threading.SendOrPostCallback onSetPageModeStationCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPageModeVerticalPositionDelegate;
        
        private EndOperationDelegate onEndGetPageModeVerticalPositionDelegate;
        
        private System.Threading.SendOrPostCallback onGetPageModeVerticalPositionCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetPageModeVerticalPositionDelegate;
        
        private EndOperationDelegate onEndSetPageModeVerticalPositionDelegate;
        
        private System.Threading.SendOrPostCallback onSetPageModeVerticalPositionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRotateSpecialDelegate;
        
        private EndOperationDelegate onEndGetRotateSpecialDelegate;
        
        private System.Threading.SendOrPostCallback onGetRotateSpecialCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetRotateSpecialDelegate;
        
        private EndOperationDelegate onEndSetRotateSpecialDelegate;
        
        private System.Threading.SendOrPostCallback onSetRotateSpecialCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetJrnLineCharsDelegate;
        
        private EndOperationDelegate onEndGetJrnLineCharsDelegate;
        
        private System.Threading.SendOrPostCallback onGetJrnLineCharsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetJrnLineCharsDelegate;
        
        private EndOperationDelegate onEndSetJrnLineCharsDelegate;
        
        private System.Threading.SendOrPostCallback onSetJrnLineCharsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetJrnLineCharsListDelegate;
        
        private EndOperationDelegate onEndGetJrnLineCharsListDelegate;
        
        private System.Threading.SendOrPostCallback onGetJrnLineCharsListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetJrnLineHeightDelegate;
        
        private EndOperationDelegate onEndGetJrnLineHeightDelegate;
        
        private System.Threading.SendOrPostCallback onGetJrnLineHeightCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetJrnLineHeightDelegate;
        
        private EndOperationDelegate onEndSetJrnLineHeightDelegate;
        
        private System.Threading.SendOrPostCallback onSetJrnLineHeightCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetJrnLineSpacingDelegate;
        
        private EndOperationDelegate onEndGetJrnLineSpacingDelegate;
        
        private System.Threading.SendOrPostCallback onGetJrnLineSpacingCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetJrnLineSpacingDelegate;
        
        private EndOperationDelegate onEndSetJrnLineSpacingDelegate;
        
        private System.Threading.SendOrPostCallback onSetJrnLineSpacingCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetJrnLineWidthDelegate;
        
        private EndOperationDelegate onEndGetJrnLineWidthDelegate;
        
        private System.Threading.SendOrPostCallback onGetJrnLineWidthCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetJrnLetterQualityDelegate;
        
        private EndOperationDelegate onEndGetJrnLetterQualityDelegate;
        
        private System.Threading.SendOrPostCallback onGetJrnLetterQualityCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetJrnLetterQualityDelegate;
        
        private EndOperationDelegate onEndSetJrnLetterQualityDelegate;
        
        private System.Threading.SendOrPostCallback onSetJrnLetterQualityCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetJrnEmptyDelegate;
        
        private EndOperationDelegate onEndGetJrnEmptyDelegate;
        
        private System.Threading.SendOrPostCallback onGetJrnEmptyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapSlpPresentDelegate;
        
        private EndOperationDelegate onEndGetCapSlpPresentDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapSlpPresentCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapSlpFullslipDelegate;
        
        private EndOperationDelegate onEndGetCapSlpFullslipDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapSlpFullslipCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapSlp2ColorDelegate;
        
        private EndOperationDelegate onEndGetCapSlp2ColorDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapSlp2ColorCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapSlpBarCodeDelegate;
        
        private EndOperationDelegate onEndGetCapSlpBarCodeDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapSlpBarCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapSlpBitmapDelegate;
        
        private EndOperationDelegate onEndGetCapSlpBitmapDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapSlpBitmapCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapSlpBoldDelegate;
        
        private EndOperationDelegate onEndGetCapSlpBoldDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapSlpBoldCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapSlpDhighDelegate;
        
        private EndOperationDelegate onEndGetCapSlpDhighDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapSlpDhighCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapSlpDwideDelegate;
        
        private EndOperationDelegate onEndGetCapSlpDwideDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapSlpDwideCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapSlpDwideDhighDelegate;
        
        private EndOperationDelegate onEndGetCapSlpDwideDhighDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapSlpDwideDhighCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapSlpEmptySensorDelegate;
        
        private EndOperationDelegate onEndGetCapSlpEmptySensorDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapSlpEmptySensorCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapSlpItalicDelegate;
        
        private EndOperationDelegate onEndGetCapSlpItalicDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapSlpItalicCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapSlpLeft90Delegate;
        
        private EndOperationDelegate onEndGetCapSlpLeft90Delegate;
        
        private System.Threading.SendOrPostCallback onGetCapSlpLeft90CompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapSlpNearEndSensorDelegate;
        
        private EndOperationDelegate onEndGetCapSlpNearEndSensorDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapSlpNearEndSensorCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapSlpRight90Delegate;
        
        private EndOperationDelegate onEndGetCapSlpRight90Delegate;
        
        private System.Threading.SendOrPostCallback onGetCapSlpRight90CompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapSlpRotate180Delegate;
        
        private EndOperationDelegate onEndGetCapSlpRotate180Delegate;
        
        private System.Threading.SendOrPostCallback onGetCapSlpRotate180CompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapSlpUnderlineDelegate;
        
        private EndOperationDelegate onEndGetCapSlpUnderlineDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapSlpUnderlineCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapSlpBothSidesPrintDelegate;
        
        private EndOperationDelegate onEndGetCapSlpBothSidesPrintDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapSlpBothSidesPrintCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapSlpCartridgeSensorDelegate;
        
        private EndOperationDelegate onEndGetCapSlpCartridgeSensorDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapSlpCartridgeSensorCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapSlpColorDelegate;
        
        private EndOperationDelegate onEndGetCapSlpColorDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapSlpColorCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapSlpPageModeDelegate;
        
        private EndOperationDelegate onEndGetCapSlpPageModeDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapSlpPageModeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapSlpRuledLineDelegate;
        
        private EndOperationDelegate onEndGetCapSlpRuledLineDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapSlpRuledLineCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAsyncModeDelegate;
        
        private EndOperationDelegate onEndGetAsyncModeDelegate;
        
        private System.Threading.SendOrPostCallback onGetAsyncModeCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetAsyncModeDelegate;
        
        private EndOperationDelegate onEndSetAsyncModeDelegate;
        
        private System.Threading.SendOrPostCallback onSetAsyncModeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCartridgeNotifyDelegate;
        
        private EndOperationDelegate onEndGetCartridgeNotifyDelegate;
        
        private System.Threading.SendOrPostCallback onGetCartridgeNotifyCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetCartridgeNotifyDelegate;
        
        private EndOperationDelegate onEndSetCartridgeNotifyDelegate;
        
        private System.Threading.SendOrPostCallback onSetCartridgeNotifyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCharacterSetDelegate;
        
        private EndOperationDelegate onEndGetCharacterSetDelegate;
        
        private System.Threading.SendOrPostCallback onGetCharacterSetCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetCharacterSetDelegate;
        
        private EndOperationDelegate onEndSetCharacterSetDelegate;
        
        private System.Threading.SendOrPostCallback onSetCharacterSetCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCharacterSetListDelegate;
        
        private EndOperationDelegate onEndGetCharacterSetListDelegate;
        
        private System.Threading.SendOrPostCallback onGetCharacterSetListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCoverOpenDelegate;
        
        private EndOperationDelegate onEndGetCoverOpenDelegate;
        
        private System.Threading.SendOrPostCallback onGetCoverOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetErrorLevelDelegate;
        
        private EndOperationDelegate onEndGetErrorLevelDelegate;
        
        private System.Threading.SendOrPostCallback onGetErrorLevelCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetErrorStationDelegate;
        
        private EndOperationDelegate onEndGetErrorStationDelegate;
        
        private System.Threading.SendOrPostCallback onGetErrorStationCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetErrorStringDelegate;
        
        private EndOperationDelegate onEndGetErrorStringDelegate;
        
        private System.Threading.SendOrPostCallback onGetErrorStringCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapJrnBoldDelegate;
        
        private EndOperationDelegate onEndGetCapJrnBoldDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapJrnBoldCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapJrnDhighDelegate;
        
        private EndOperationDelegate onEndGetCapJrnDhighDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapJrnDhighCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapJrnDwideDelegate;
        
        private EndOperationDelegate onEndGetCapJrnDwideDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapJrnDwideCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapJrnDwideDhighDelegate;
        
        private EndOperationDelegate onEndGetCapJrnDwideDhighDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapJrnDwideDhighCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapJrnEmptySensorDelegate;
        
        private EndOperationDelegate onEndGetCapJrnEmptySensorDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapJrnEmptySensorCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapJrnItalicDelegate;
        
        private EndOperationDelegate onEndGetCapJrnItalicDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapJrnItalicCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapJrnNearEndSensorDelegate;
        
        private EndOperationDelegate onEndGetCapJrnNearEndSensorDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapJrnNearEndSensorCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapJrnUnderlineDelegate;
        
        private EndOperationDelegate onEndGetCapJrnUnderlineDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapJrnUnderlineCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapJrnCartridgeSensorDelegate;
        
        private EndOperationDelegate onEndGetCapJrnCartridgeSensorDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapJrnCartridgeSensorCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapJrnColorDelegate;
        
        private EndOperationDelegate onEndGetCapJrnColorDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapJrnColorCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapRecPresentDelegate;
        
        private EndOperationDelegate onEndGetCapRecPresentDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapRecPresentCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapRec2ColorDelegate;
        
        private EndOperationDelegate onEndGetCapRec2ColorDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapRec2ColorCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapRecBarCodeDelegate;
        
        private EndOperationDelegate onEndGetCapRecBarCodeDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapRecBarCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapRecBitmapDelegate;
        
        private EndOperationDelegate onEndGetCapRecBitmapDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapRecBitmapCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapRecBoldDelegate;
        
        private EndOperationDelegate onEndGetCapRecBoldDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapRecBoldCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapRecDhighDelegate;
        
        private EndOperationDelegate onEndGetCapRecDhighDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapRecDhighCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapRecDwideDelegate;
        
        private EndOperationDelegate onEndGetCapRecDwideDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapRecDwideCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapRecDwideDhighDelegate;
        
        private EndOperationDelegate onEndGetCapRecDwideDhighDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapRecDwideDhighCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapRecEmptySensorDelegate;
        
        private EndOperationDelegate onEndGetCapRecEmptySensorDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapRecEmptySensorCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapRecItalicDelegate;
        
        private EndOperationDelegate onEndGetCapRecItalicDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapRecItalicCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapRecLeft90Delegate;
        
        private EndOperationDelegate onEndGetCapRecLeft90Delegate;
        
        private System.Threading.SendOrPostCallback onGetCapRecLeft90CompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapRecNearEndSensorDelegate;
        
        private EndOperationDelegate onEndGetCapRecNearEndSensorDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapRecNearEndSensorCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapRecPapercutDelegate;
        
        private EndOperationDelegate onEndGetCapRecPapercutDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapRecPapercutCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapRecRight90Delegate;
        
        private EndOperationDelegate onEndGetCapRecRight90Delegate;
        
        private System.Threading.SendOrPostCallback onGetCapRecRight90CompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapRecRotate180Delegate;
        
        private EndOperationDelegate onEndGetCapRecRotate180Delegate;
        
        private System.Threading.SendOrPostCallback onGetCapRecRotate180CompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapRecStampDelegate;
        
        private EndOperationDelegate onEndGetCapRecStampDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapRecStampCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapRecUnderlineDelegate;
        
        private EndOperationDelegate onEndGetCapRecUnderlineDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapRecUnderlineCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapRecCartridgeSensorDelegate;
        
        private EndOperationDelegate onEndGetCapRecCartridgeSensorDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapRecCartridgeSensorCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapRecColorDelegate;
        
        private EndOperationDelegate onEndGetCapRecColorDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapRecColorCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapRecMarkFeedDelegate;
        
        private EndOperationDelegate onEndGetCapRecMarkFeedDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapRecMarkFeedCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapRecPageModeDelegate;
        
        private EndOperationDelegate onEndGetCapRecPageModeDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapRecPageModeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapRecRuledLineDelegate;
        
        private EndOperationDelegate onEndGetCapRecRuledLineDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapRecRuledLineCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapCompareFirmwareVersionDelegate;
        
        private EndOperationDelegate onEndGetCapCompareFirmwareVersionDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapCompareFirmwareVersionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapPowerReportingDelegate;
        
        private EndOperationDelegate onEndGetCapPowerReportingDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapPowerReportingCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapStatisticsReportingDelegate;
        
        private EndOperationDelegate onEndGetCapStatisticsReportingDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapStatisticsReportingCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapUpdateFirmwareDelegate;
        
        private EndOperationDelegate onEndGetCapUpdateFirmwareDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapUpdateFirmwareCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapUpdateStatisticsDelegate;
        
        private EndOperationDelegate onEndGetCapUpdateStatisticsDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapUpdateStatisticsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCheckHealthTextDelegate;
        
        private EndOperationDelegate onEndGetCheckHealthTextDelegate;
        
        private System.Threading.SendOrPostCallback onGetCheckHealthTextCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetClaimedDelegate;
        
        private EndOperationDelegate onEndGetClaimedDelegate;
        
        private System.Threading.SendOrPostCallback onGetClaimedCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDeviceEnabledDelegate;
        
        private EndOperationDelegate onEndGetDeviceEnabledDelegate;
        
        private System.Threading.SendOrPostCallback onGetDeviceEnabledCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetDeviceEnabledDelegate;
        
        private EndOperationDelegate onEndSetDeviceEnabledDelegate;
        
        private System.Threading.SendOrPostCallback onSetDeviceEnabledCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFreezeEventsDelegate;
        
        private EndOperationDelegate onEndGetFreezeEventsDelegate;
        
        private System.Threading.SendOrPostCallback onGetFreezeEventsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetFreezeEventsDelegate;
        
        private EndOperationDelegate onEndSetFreezeEventsDelegate;
        
        private System.Threading.SendOrPostCallback onSetFreezeEventsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOutputIDDelegate;
        
        private EndOperationDelegate onEndGetOutputIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetOutputIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPowerNotifyDelegate;
        
        private EndOperationDelegate onEndGetPowerNotifyDelegate;
        
        private System.Threading.SendOrPostCallback onGetPowerNotifyCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetPowerNotifyDelegate;
        
        private EndOperationDelegate onEndSetPowerNotifyDelegate;
        
        private System.Threading.SendOrPostCallback onSetPowerNotifyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPowerStateDelegate;
        
        private EndOperationDelegate onEndGetPowerStateDelegate;
        
        private System.Threading.SendOrPostCallback onGetPowerStateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStateDelegate;
        
        private EndOperationDelegate onEndGetStateDelegate;
        
        private System.Threading.SendOrPostCallback onGetStateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDeviceControlDescriptionDelegate;
        
        private EndOperationDelegate onEndGetDeviceControlDescriptionDelegate;
        
        private System.Threading.SendOrPostCallback onGetDeviceControlDescriptionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDeviceControlVersionDelegate;
        
        private EndOperationDelegate onEndGetDeviceControlVersionDelegate;
        
        private System.Threading.SendOrPostCallback onGetDeviceControlVersionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDeviceServiceDescriptionDelegate;
        
        private EndOperationDelegate onEndGetDeviceServiceDescriptionDelegate;
        
        private System.Threading.SendOrPostCallback onGetDeviceServiceDescriptionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDeviceServiceVersionDelegate;
        
        private EndOperationDelegate onEndGetDeviceServiceVersionDelegate;
        
        private System.Threading.SendOrPostCallback onGetDeviceServiceVersionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPhysicalDeviceDescriptionDelegate;
        
        private EndOperationDelegate onEndGetPhysicalDeviceDescriptionDelegate;
        
        private System.Threading.SendOrPostCallback onGetPhysicalDeviceDescriptionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPhysicalDeviceNameDelegate;
        
        private EndOperationDelegate onEndGetPhysicalDeviceNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetPhysicalDeviceNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapCharacterSetDelegate;
        
        private EndOperationDelegate onEndGetCapCharacterSetDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapCharacterSetCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapConcurrentJrnRecDelegate;
        
        private EndOperationDelegate onEndGetCapConcurrentJrnRecDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapConcurrentJrnRecCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapConcurrentJrnSlpDelegate;
        
        private EndOperationDelegate onEndGetCapConcurrentJrnSlpDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapConcurrentJrnSlpCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapConcurrentPageModeDelegate;
        
        private EndOperationDelegate onEndGetCapConcurrentPageModeDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapConcurrentPageModeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapConcurrentRecSlpDelegate;
        
        private EndOperationDelegate onEndGetCapConcurrentRecSlpDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapConcurrentRecSlpCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapCoverSensorDelegate;
        
        private EndOperationDelegate onEndGetCapCoverSensorDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapCoverSensorCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapMapCharacterSetDelegate;
        
        private EndOperationDelegate onEndGetCapMapCharacterSetDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapMapCharacterSetCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapTransactionDelegate;
        
        private EndOperationDelegate onEndGetCapTransactionDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapTransactionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapJrnPresentDelegate;
        
        private EndOperationDelegate onEndGetCapJrnPresentDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapJrnPresentCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapJrn2ColorDelegate;
        
        private EndOperationDelegate onEndGetCapJrn2ColorDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapJrn2ColorCompletedDelegate;
        
        public POSPrinterClient() {
        }
        
        public POSPrinterClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public POSPrinterClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public POSPrinterClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public POSPrinterClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> EndInsertionCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> EndRemovalCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> MarkFeedCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> PageModePrintCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> PrintBarCodeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> PrintBitmapCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> PrintImmediateCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> PrintMemoryBitmapCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> PrintNormalCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> PrintTwoNormalCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RotatePrintCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetBitmapCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetLogoCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> TransactionPrintCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ValidateDataCompleted;
        
        public event System.EventHandler<GetSlpLetterQualityCompletedEventArgs> GetSlpLetterQualityCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetSlpLetterQualityCompleted;
        
        public event System.EventHandler<GetSlpEmptyCompletedEventArgs> GetSlpEmptyCompleted;
        
        public event System.EventHandler<GetSlpNearEndCompletedEventArgs> GetSlpNearEndCompleted;
        
        public event System.EventHandler<GetSlpSidewaysMaxLinesCompletedEventArgs> GetSlpSidewaysMaxLinesCompleted;
        
        public event System.EventHandler<GetSlpSidewaysMaxCharsCompletedEventArgs> GetSlpSidewaysMaxCharsCompleted;
        
        public event System.EventHandler<GetSlpMaxLinesCompletedEventArgs> GetSlpMaxLinesCompleted;
        
        public event System.EventHandler<GetSlpLinesNearEndToEndCompletedEventArgs> GetSlpLinesNearEndToEndCompleted;
        
        public event System.EventHandler<GetSlpBarCodeRotationListCompletedEventArgs> GetSlpBarCodeRotationListCompleted;
        
        public event System.EventHandler<GetSlpBitmapRotationListCompletedEventArgs> GetSlpBitmapRotationListCompleted;
        
        public event System.EventHandler<GetSlpPrintSideCompletedEventArgs> GetSlpPrintSideCompleted;
        
        public event System.EventHandler<GetSlpCartridgeStateCompletedEventArgs> GetSlpCartridgeStateCompleted;
        
        public event System.EventHandler<GetSlpCurrentCartridgeCompletedEventArgs> GetSlpCurrentCartridgeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetSlpCurrentCartridgeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ClaimCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ReleaseCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CheckHealthCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ClearOutputCompleted;
        
        public event System.EventHandler<DirectIOCompletedEventArgs> DirectIOCompleted;
        
        public event System.EventHandler<CompareFirmwareVersionCompletedEventArgs> CompareFirmwareVersionCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ResetStatisticsCompleted;
        
        public event System.EventHandler<RetrieveStatisticsCompletedEventArgs> RetrieveStatisticsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateFirmwareCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateStatisticsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> BeginInsertionCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> BeginRemovalCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ChangePrintSideCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ClearPrintAreaCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CutPaperCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DrawRuledLineCompleted;
        
        public event System.EventHandler<GetJrnNearEndCompletedEventArgs> GetJrnNearEndCompleted;
        
        public event System.EventHandler<GetJrnCartridgeStateCompletedEventArgs> GetJrnCartridgeStateCompleted;
        
        public event System.EventHandler<GetJrnCurrentCartridgeCompletedEventArgs> GetJrnCurrentCartridgeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetJrnCurrentCartridgeCompleted;
        
        public event System.EventHandler<GetRecLineCharsCompletedEventArgs> GetRecLineCharsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetRecLineCharsCompleted;
        
        public event System.EventHandler<GetRecLineCharsListCompletedEventArgs> GetRecLineCharsListCompleted;
        
        public event System.EventHandler<GetRecLineHeightCompletedEventArgs> GetRecLineHeightCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetRecLineHeightCompleted;
        
        public event System.EventHandler<GetRecLineSpacingCompletedEventArgs> GetRecLineSpacingCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetRecLineSpacingCompleted;
        
        public event System.EventHandler<GetRecLineWidthCompletedEventArgs> GetRecLineWidthCompleted;
        
        public event System.EventHandler<GetRecLetterQualityCompletedEventArgs> GetRecLetterQualityCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetRecLetterQualityCompleted;
        
        public event System.EventHandler<GetRecEmptyCompletedEventArgs> GetRecEmptyCompleted;
        
        public event System.EventHandler<GetRecNearEndCompletedEventArgs> GetRecNearEndCompleted;
        
        public event System.EventHandler<GetRecSidewaysMaxCharsCompletedEventArgs> GetRecSidewaysMaxCharsCompleted;
        
        public event System.EventHandler<GetRecSidewaysMaxLinesCompletedEventArgs> GetRecSidewaysMaxLinesCompleted;
        
        public event System.EventHandler<GetRecLinesToPaperCutCompletedEventArgs> GetRecLinesToPaperCutCompleted;
        
        public event System.EventHandler<GetRecBarCodeRotationListCompletedEventArgs> GetRecBarCodeRotationListCompleted;
        
        public event System.EventHandler<GetRecBitmapRotationListCompletedEventArgs> GetRecBitmapRotationListCompleted;
        
        public event System.EventHandler<GetRecCartridgeStateCompletedEventArgs> GetRecCartridgeStateCompleted;
        
        public event System.EventHandler<GetRecCurrentCartridgeCompletedEventArgs> GetRecCurrentCartridgeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetRecCurrentCartridgeCompleted;
        
        public event System.EventHandler<GetSlpLineCharsCompletedEventArgs> GetSlpLineCharsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetSlpLineCharsCompleted;
        
        public event System.EventHandler<GetSlpLineCharsListCompletedEventArgs> GetSlpLineCharsListCompleted;
        
        public event System.EventHandler<GetSlpLineHeightCompletedEventArgs> GetSlpLineHeightCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetSlpLineHeightCompleted;
        
        public event System.EventHandler<GetSlpLineSpacingCompletedEventArgs> GetSlpLineSpacingCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetSlpLineSpacingCompleted;
        
        public event System.EventHandler<GetSlpLineWidthCompletedEventArgs> GetSlpLineWidthCompleted;
        
        public event System.EventHandler<GetFontTypefaceListCompletedEventArgs> GetFontTypefaceListCompleted;
        
        public event System.EventHandler<GetFlagWhenIdleCompletedEventArgs> GetFlagWhenIdleCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetFlagWhenIdleCompleted;
        
        public event System.EventHandler<GetMapCharacterSetCompletedEventArgs> GetMapCharacterSetCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetMapCharacterSetCompleted;
        
        public event System.EventHandler<GetMapModeCompletedEventArgs> GetMapModeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetMapModeCompleted;
        
        public event System.EventHandler<GetPageModeAreaCompletedEventArgs> GetPageModeAreaCompleted;
        
        public event System.EventHandler<GetPageModeDescriptorCompletedEventArgs> GetPageModeDescriptorCompleted;
        
        public event System.EventHandler<GetPageModeHorizontalPositionCompletedEventArgs> GetPageModeHorizontalPositionCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetPageModeHorizontalPositionCompleted;
        
        public event System.EventHandler<GetPageModePrintAreaCompletedEventArgs> GetPageModePrintAreaCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetPageModePrintAreaCompleted;
        
        public event System.EventHandler<GetPageModePrintDirectionCompletedEventArgs> GetPageModePrintDirectionCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetPageModePrintDirectionCompleted;
        
        public event System.EventHandler<GetPageModeStationCompletedEventArgs> GetPageModeStationCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetPageModeStationCompleted;
        
        public event System.EventHandler<GetPageModeVerticalPositionCompletedEventArgs> GetPageModeVerticalPositionCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetPageModeVerticalPositionCompleted;
        
        public event System.EventHandler<GetRotateSpecialCompletedEventArgs> GetRotateSpecialCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetRotateSpecialCompleted;
        
        public event System.EventHandler<GetJrnLineCharsCompletedEventArgs> GetJrnLineCharsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetJrnLineCharsCompleted;
        
        public event System.EventHandler<GetJrnLineCharsListCompletedEventArgs> GetJrnLineCharsListCompleted;
        
        public event System.EventHandler<GetJrnLineHeightCompletedEventArgs> GetJrnLineHeightCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetJrnLineHeightCompleted;
        
        public event System.EventHandler<GetJrnLineSpacingCompletedEventArgs> GetJrnLineSpacingCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetJrnLineSpacingCompleted;
        
        public event System.EventHandler<GetJrnLineWidthCompletedEventArgs> GetJrnLineWidthCompleted;
        
        public event System.EventHandler<GetJrnLetterQualityCompletedEventArgs> GetJrnLetterQualityCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetJrnLetterQualityCompleted;
        
        public event System.EventHandler<GetJrnEmptyCompletedEventArgs> GetJrnEmptyCompleted;
        
        public event System.EventHandler<GetCapSlpPresentCompletedEventArgs> GetCapSlpPresentCompleted;
        
        public event System.EventHandler<GetCapSlpFullslipCompletedEventArgs> GetCapSlpFullslipCompleted;
        
        public event System.EventHandler<GetCapSlp2ColorCompletedEventArgs> GetCapSlp2ColorCompleted;
        
        public event System.EventHandler<GetCapSlpBarCodeCompletedEventArgs> GetCapSlpBarCodeCompleted;
        
        public event System.EventHandler<GetCapSlpBitmapCompletedEventArgs> GetCapSlpBitmapCompleted;
        
        public event System.EventHandler<GetCapSlpBoldCompletedEventArgs> GetCapSlpBoldCompleted;
        
        public event System.EventHandler<GetCapSlpDhighCompletedEventArgs> GetCapSlpDhighCompleted;
        
        public event System.EventHandler<GetCapSlpDwideCompletedEventArgs> GetCapSlpDwideCompleted;
        
        public event System.EventHandler<GetCapSlpDwideDhighCompletedEventArgs> GetCapSlpDwideDhighCompleted;
        
        public event System.EventHandler<GetCapSlpEmptySensorCompletedEventArgs> GetCapSlpEmptySensorCompleted;
        
        public event System.EventHandler<GetCapSlpItalicCompletedEventArgs> GetCapSlpItalicCompleted;
        
        public event System.EventHandler<GetCapSlpLeft90CompletedEventArgs> GetCapSlpLeft90Completed;
        
        public event System.EventHandler<GetCapSlpNearEndSensorCompletedEventArgs> GetCapSlpNearEndSensorCompleted;
        
        public event System.EventHandler<GetCapSlpRight90CompletedEventArgs> GetCapSlpRight90Completed;
        
        public event System.EventHandler<GetCapSlpRotate180CompletedEventArgs> GetCapSlpRotate180Completed;
        
        public event System.EventHandler<GetCapSlpUnderlineCompletedEventArgs> GetCapSlpUnderlineCompleted;
        
        public event System.EventHandler<GetCapSlpBothSidesPrintCompletedEventArgs> GetCapSlpBothSidesPrintCompleted;
        
        public event System.EventHandler<GetCapSlpCartridgeSensorCompletedEventArgs> GetCapSlpCartridgeSensorCompleted;
        
        public event System.EventHandler<GetCapSlpColorCompletedEventArgs> GetCapSlpColorCompleted;
        
        public event System.EventHandler<GetCapSlpPageModeCompletedEventArgs> GetCapSlpPageModeCompleted;
        
        public event System.EventHandler<GetCapSlpRuledLineCompletedEventArgs> GetCapSlpRuledLineCompleted;
        
        public event System.EventHandler<GetAsyncModeCompletedEventArgs> GetAsyncModeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetAsyncModeCompleted;
        
        public event System.EventHandler<GetCartridgeNotifyCompletedEventArgs> GetCartridgeNotifyCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetCartridgeNotifyCompleted;
        
        public event System.EventHandler<GetCharacterSetCompletedEventArgs> GetCharacterSetCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetCharacterSetCompleted;
        
        public event System.EventHandler<GetCharacterSetListCompletedEventArgs> GetCharacterSetListCompleted;
        
        public event System.EventHandler<GetCoverOpenCompletedEventArgs> GetCoverOpenCompleted;
        
        public event System.EventHandler<GetErrorLevelCompletedEventArgs> GetErrorLevelCompleted;
        
        public event System.EventHandler<GetErrorStationCompletedEventArgs> GetErrorStationCompleted;
        
        public event System.EventHandler<GetErrorStringCompletedEventArgs> GetErrorStringCompleted;
        
        public event System.EventHandler<GetCapJrnBoldCompletedEventArgs> GetCapJrnBoldCompleted;
        
        public event System.EventHandler<GetCapJrnDhighCompletedEventArgs> GetCapJrnDhighCompleted;
        
        public event System.EventHandler<GetCapJrnDwideCompletedEventArgs> GetCapJrnDwideCompleted;
        
        public event System.EventHandler<GetCapJrnDwideDhighCompletedEventArgs> GetCapJrnDwideDhighCompleted;
        
        public event System.EventHandler<GetCapJrnEmptySensorCompletedEventArgs> GetCapJrnEmptySensorCompleted;
        
        public event System.EventHandler<GetCapJrnItalicCompletedEventArgs> GetCapJrnItalicCompleted;
        
        public event System.EventHandler<GetCapJrnNearEndSensorCompletedEventArgs> GetCapJrnNearEndSensorCompleted;
        
        public event System.EventHandler<GetCapJrnUnderlineCompletedEventArgs> GetCapJrnUnderlineCompleted;
        
        public event System.EventHandler<GetCapJrnCartridgeSensorCompletedEventArgs> GetCapJrnCartridgeSensorCompleted;
        
        public event System.EventHandler<GetCapJrnColorCompletedEventArgs> GetCapJrnColorCompleted;
        
        public event System.EventHandler<GetCapRecPresentCompletedEventArgs> GetCapRecPresentCompleted;
        
        public event System.EventHandler<GetCapRec2ColorCompletedEventArgs> GetCapRec2ColorCompleted;
        
        public event System.EventHandler<GetCapRecBarCodeCompletedEventArgs> GetCapRecBarCodeCompleted;
        
        public event System.EventHandler<GetCapRecBitmapCompletedEventArgs> GetCapRecBitmapCompleted;
        
        public event System.EventHandler<GetCapRecBoldCompletedEventArgs> GetCapRecBoldCompleted;
        
        public event System.EventHandler<GetCapRecDhighCompletedEventArgs> GetCapRecDhighCompleted;
        
        public event System.EventHandler<GetCapRecDwideCompletedEventArgs> GetCapRecDwideCompleted;
        
        public event System.EventHandler<GetCapRecDwideDhighCompletedEventArgs> GetCapRecDwideDhighCompleted;
        
        public event System.EventHandler<GetCapRecEmptySensorCompletedEventArgs> GetCapRecEmptySensorCompleted;
        
        public event System.EventHandler<GetCapRecItalicCompletedEventArgs> GetCapRecItalicCompleted;
        
        public event System.EventHandler<GetCapRecLeft90CompletedEventArgs> GetCapRecLeft90Completed;
        
        public event System.EventHandler<GetCapRecNearEndSensorCompletedEventArgs> GetCapRecNearEndSensorCompleted;
        
        public event System.EventHandler<GetCapRecPapercutCompletedEventArgs> GetCapRecPapercutCompleted;
        
        public event System.EventHandler<GetCapRecRight90CompletedEventArgs> GetCapRecRight90Completed;
        
        public event System.EventHandler<GetCapRecRotate180CompletedEventArgs> GetCapRecRotate180Completed;
        
        public event System.EventHandler<GetCapRecStampCompletedEventArgs> GetCapRecStampCompleted;
        
        public event System.EventHandler<GetCapRecUnderlineCompletedEventArgs> GetCapRecUnderlineCompleted;
        
        public event System.EventHandler<GetCapRecCartridgeSensorCompletedEventArgs> GetCapRecCartridgeSensorCompleted;
        
        public event System.EventHandler<GetCapRecColorCompletedEventArgs> GetCapRecColorCompleted;
        
        public event System.EventHandler<GetCapRecMarkFeedCompletedEventArgs> GetCapRecMarkFeedCompleted;
        
        public event System.EventHandler<GetCapRecPageModeCompletedEventArgs> GetCapRecPageModeCompleted;
        
        public event System.EventHandler<GetCapRecRuledLineCompletedEventArgs> GetCapRecRuledLineCompleted;
        
        public event System.EventHandler<GetCapCompareFirmwareVersionCompletedEventArgs> GetCapCompareFirmwareVersionCompleted;
        
        public event System.EventHandler<GetCapPowerReportingCompletedEventArgs> GetCapPowerReportingCompleted;
        
        public event System.EventHandler<GetCapStatisticsReportingCompletedEventArgs> GetCapStatisticsReportingCompleted;
        
        public event System.EventHandler<GetCapUpdateFirmwareCompletedEventArgs> GetCapUpdateFirmwareCompleted;
        
        public event System.EventHandler<GetCapUpdateStatisticsCompletedEventArgs> GetCapUpdateStatisticsCompleted;
        
        public event System.EventHandler<GetCheckHealthTextCompletedEventArgs> GetCheckHealthTextCompleted;
        
        public event System.EventHandler<GetClaimedCompletedEventArgs> GetClaimedCompleted;
        
        public event System.EventHandler<GetDeviceEnabledCompletedEventArgs> GetDeviceEnabledCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetDeviceEnabledCompleted;
        
        public event System.EventHandler<GetFreezeEventsCompletedEventArgs> GetFreezeEventsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetFreezeEventsCompleted;
        
        public event System.EventHandler<GetOutputIDCompletedEventArgs> GetOutputIDCompleted;
        
        public event System.EventHandler<GetPowerNotifyCompletedEventArgs> GetPowerNotifyCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetPowerNotifyCompleted;
        
        public event System.EventHandler<GetPowerStateCompletedEventArgs> GetPowerStateCompleted;
        
        public event System.EventHandler<GetStateCompletedEventArgs> GetStateCompleted;
        
        public event System.EventHandler<GetDeviceControlDescriptionCompletedEventArgs> GetDeviceControlDescriptionCompleted;
        
        public event System.EventHandler<GetDeviceControlVersionCompletedEventArgs> GetDeviceControlVersionCompleted;
        
        public event System.EventHandler<GetDeviceServiceDescriptionCompletedEventArgs> GetDeviceServiceDescriptionCompleted;
        
        public event System.EventHandler<GetDeviceServiceVersionCompletedEventArgs> GetDeviceServiceVersionCompleted;
        
        public event System.EventHandler<GetPhysicalDeviceDescriptionCompletedEventArgs> GetPhysicalDeviceDescriptionCompleted;
        
        public event System.EventHandler<GetPhysicalDeviceNameCompletedEventArgs> GetPhysicalDeviceNameCompleted;
        
        public event System.EventHandler<GetCapCharacterSetCompletedEventArgs> GetCapCharacterSetCompleted;
        
        public event System.EventHandler<GetCapConcurrentJrnRecCompletedEventArgs> GetCapConcurrentJrnRecCompleted;
        
        public event System.EventHandler<GetCapConcurrentJrnSlpCompletedEventArgs> GetCapConcurrentJrnSlpCompleted;
        
        public event System.EventHandler<GetCapConcurrentPageModeCompletedEventArgs> GetCapConcurrentPageModeCompleted;
        
        public event System.EventHandler<GetCapConcurrentRecSlpCompletedEventArgs> GetCapConcurrentRecSlpCompleted;
        
        public event System.EventHandler<GetCapCoverSensorCompletedEventArgs> GetCapCoverSensorCompleted;
        
        public event System.EventHandler<GetCapMapCharacterSetCompletedEventArgs> GetCapMapCharacterSetCompleted;
        
        public event System.EventHandler<GetCapTransactionCompletedEventArgs> GetCapTransactionCompleted;
        
        public event System.EventHandler<GetCapJrnPresentCompletedEventArgs> GetCapJrnPresentCompleted;
        
        public event System.EventHandler<GetCapJrn2ColorCompletedEventArgs> GetCapJrn2ColorCompleted;
        
        public void EndInsertion() {
            base.Channel.EndInsertion();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEndInsertion(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEndInsertion(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndEndInsertion(System.IAsyncResult result) {
            base.Channel.EndEndInsertion(result);
        }
        
        private System.IAsyncResult OnBeginEndInsertion(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginEndInsertion(callback, asyncState);
        }
        
        private object[] OnEndEndInsertion(System.IAsyncResult result) {
            this.EndEndInsertion(result);
            return null;
        }
        
        private void OnEndInsertionCompleted(object state) {
            if ((this.EndInsertionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EndInsertionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EndInsertionAsync() {
            this.EndInsertionAsync(null);
        }
        
        public void EndInsertionAsync(object userState) {
            if ((this.onBeginEndInsertionDelegate == null)) {
                this.onBeginEndInsertionDelegate = new BeginOperationDelegate(this.OnBeginEndInsertion);
            }
            if ((this.onEndEndInsertionDelegate == null)) {
                this.onEndEndInsertionDelegate = new EndOperationDelegate(this.OnEndEndInsertion);
            }
            if ((this.onEndInsertionCompletedDelegate == null)) {
                this.onEndInsertionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEndInsertionCompleted);
            }
            base.InvokeAsync(this.onBeginEndInsertionDelegate, null, this.onEndEndInsertionDelegate, this.onEndInsertionCompletedDelegate, userState);
        }
        
        public void EndRemoval() {
            base.Channel.EndRemoval();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEndRemoval(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEndRemoval(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndEndRemoval(System.IAsyncResult result) {
            base.Channel.EndEndRemoval(result);
        }
        
        private System.IAsyncResult OnBeginEndRemoval(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginEndRemoval(callback, asyncState);
        }
        
        private object[] OnEndEndRemoval(System.IAsyncResult result) {
            this.EndEndRemoval(result);
            return null;
        }
        
        private void OnEndRemovalCompleted(object state) {
            if ((this.EndRemovalCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EndRemovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EndRemovalAsync() {
            this.EndRemovalAsync(null);
        }
        
        public void EndRemovalAsync(object userState) {
            if ((this.onBeginEndRemovalDelegate == null)) {
                this.onBeginEndRemovalDelegate = new BeginOperationDelegate(this.OnBeginEndRemoval);
            }
            if ((this.onEndEndRemovalDelegate == null)) {
                this.onEndEndRemovalDelegate = new EndOperationDelegate(this.OnEndEndRemoval);
            }
            if ((this.onEndRemovalCompletedDelegate == null)) {
                this.onEndRemovalCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEndRemovalCompleted);
            }
            base.InvokeAsync(this.onBeginEndRemovalDelegate, null, this.onEndEndRemovalDelegate, this.onEndRemovalCompletedDelegate, userState);
        }
        
        public void MarkFeed(int Type) {
            base.Channel.MarkFeed(Type);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMarkFeed(int Type, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMarkFeed(Type, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndMarkFeed(System.IAsyncResult result) {
            base.Channel.EndMarkFeed(result);
        }
        
        private System.IAsyncResult OnBeginMarkFeed(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Type = ((int)(inValues[0]));
            return this.BeginMarkFeed(Type, callback, asyncState);
        }
        
        private object[] OnEndMarkFeed(System.IAsyncResult result) {
            this.EndMarkFeed(result);
            return null;
        }
        
        private void OnMarkFeedCompleted(object state) {
            if ((this.MarkFeedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MarkFeedCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MarkFeedAsync(int Type) {
            this.MarkFeedAsync(Type, null);
        }
        
        public void MarkFeedAsync(int Type, object userState) {
            if ((this.onBeginMarkFeedDelegate == null)) {
                this.onBeginMarkFeedDelegate = new BeginOperationDelegate(this.OnBeginMarkFeed);
            }
            if ((this.onEndMarkFeedDelegate == null)) {
                this.onEndMarkFeedDelegate = new EndOperationDelegate(this.OnEndMarkFeed);
            }
            if ((this.onMarkFeedCompletedDelegate == null)) {
                this.onMarkFeedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMarkFeedCompleted);
            }
            base.InvokeAsync(this.onBeginMarkFeedDelegate, new object[] {
                        Type}, this.onEndMarkFeedDelegate, this.onMarkFeedCompletedDelegate, userState);
        }
        
        public void PageModePrint(WSPoS.POSPrinterServiceReference.PageModePrintControl Control) {
            base.Channel.PageModePrint(Control);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPageModePrint(WSPoS.POSPrinterServiceReference.PageModePrintControl Control, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPageModePrint(Control, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndPageModePrint(System.IAsyncResult result) {
            base.Channel.EndPageModePrint(result);
        }
        
        private System.IAsyncResult OnBeginPageModePrint(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WSPoS.POSPrinterServiceReference.PageModePrintControl Control = ((WSPoS.POSPrinterServiceReference.PageModePrintControl)(inValues[0]));
            return this.BeginPageModePrint(Control, callback, asyncState);
        }
        
        private object[] OnEndPageModePrint(System.IAsyncResult result) {
            this.EndPageModePrint(result);
            return null;
        }
        
        private void OnPageModePrintCompleted(object state) {
            if ((this.PageModePrintCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PageModePrintCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PageModePrintAsync(WSPoS.POSPrinterServiceReference.PageModePrintControl Control) {
            this.PageModePrintAsync(Control, null);
        }
        
        public void PageModePrintAsync(WSPoS.POSPrinterServiceReference.PageModePrintControl Control, object userState) {
            if ((this.onBeginPageModePrintDelegate == null)) {
                this.onBeginPageModePrintDelegate = new BeginOperationDelegate(this.OnBeginPageModePrint);
            }
            if ((this.onEndPageModePrintDelegate == null)) {
                this.onEndPageModePrintDelegate = new EndOperationDelegate(this.OnEndPageModePrint);
            }
            if ((this.onPageModePrintCompletedDelegate == null)) {
                this.onPageModePrintCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPageModePrintCompleted);
            }
            base.InvokeAsync(this.onBeginPageModePrintDelegate, new object[] {
                        Control}, this.onEndPageModePrintDelegate, this.onPageModePrintCompletedDelegate, userState);
        }
        
        public void PrintBarCode(WSPoS.POSPrinterServiceReference.PrinterStation Station, string Data, int Symbology, int Height, int Width, int Alignment, WSPoS.POSPrinterServiceReference.BarCodeTextPosition TextPosition) {
            base.Channel.PrintBarCode(Station, Data, Symbology, Height, Width, Alignment, TextPosition);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPrintBarCode(WSPoS.POSPrinterServiceReference.PrinterStation Station, string Data, int Symbology, int Height, int Width, int Alignment, WSPoS.POSPrinterServiceReference.BarCodeTextPosition TextPosition, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPrintBarCode(Station, Data, Symbology, Height, Width, Alignment, TextPosition, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndPrintBarCode(System.IAsyncResult result) {
            base.Channel.EndPrintBarCode(result);
        }
        
        private System.IAsyncResult OnBeginPrintBarCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WSPoS.POSPrinterServiceReference.PrinterStation Station = ((WSPoS.POSPrinterServiceReference.PrinterStation)(inValues[0]));
            string Data = ((string)(inValues[1]));
            int Symbology = ((int)(inValues[2]));
            int Height = ((int)(inValues[3]));
            int Width = ((int)(inValues[4]));
            int Alignment = ((int)(inValues[5]));
            WSPoS.POSPrinterServiceReference.BarCodeTextPosition TextPosition = ((WSPoS.POSPrinterServiceReference.BarCodeTextPosition)(inValues[6]));
            return this.BeginPrintBarCode(Station, Data, Symbology, Height, Width, Alignment, TextPosition, callback, asyncState);
        }
        
        private object[] OnEndPrintBarCode(System.IAsyncResult result) {
            this.EndPrintBarCode(result);
            return null;
        }
        
        private void OnPrintBarCodeCompleted(object state) {
            if ((this.PrintBarCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PrintBarCodeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PrintBarCodeAsync(WSPoS.POSPrinterServiceReference.PrinterStation Station, string Data, int Symbology, int Height, int Width, int Alignment, WSPoS.POSPrinterServiceReference.BarCodeTextPosition TextPosition) {
            this.PrintBarCodeAsync(Station, Data, Symbology, Height, Width, Alignment, TextPosition, null);
        }
        
        public void PrintBarCodeAsync(WSPoS.POSPrinterServiceReference.PrinterStation Station, string Data, int Symbology, int Height, int Width, int Alignment, WSPoS.POSPrinterServiceReference.BarCodeTextPosition TextPosition, object userState) {
            if ((this.onBeginPrintBarCodeDelegate == null)) {
                this.onBeginPrintBarCodeDelegate = new BeginOperationDelegate(this.OnBeginPrintBarCode);
            }
            if ((this.onEndPrintBarCodeDelegate == null)) {
                this.onEndPrintBarCodeDelegate = new EndOperationDelegate(this.OnEndPrintBarCode);
            }
            if ((this.onPrintBarCodeCompletedDelegate == null)) {
                this.onPrintBarCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPrintBarCodeCompleted);
            }
            base.InvokeAsync(this.onBeginPrintBarCodeDelegate, new object[] {
                        Station,
                        Data,
                        Symbology,
                        Height,
                        Width,
                        Alignment,
                        TextPosition}, this.onEndPrintBarCodeDelegate, this.onPrintBarCodeCompletedDelegate, userState);
        }
        
        public void PrintBitmap(WSPoS.POSPrinterServiceReference.PrinterStation Station, string FileName, int Width, int Alignment) {
            base.Channel.PrintBitmap(Station, FileName, Width, Alignment);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPrintBitmap(WSPoS.POSPrinterServiceReference.PrinterStation Station, string FileName, int Width, int Alignment, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPrintBitmap(Station, FileName, Width, Alignment, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndPrintBitmap(System.IAsyncResult result) {
            base.Channel.EndPrintBitmap(result);
        }
        
        private System.IAsyncResult OnBeginPrintBitmap(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WSPoS.POSPrinterServiceReference.PrinterStation Station = ((WSPoS.POSPrinterServiceReference.PrinterStation)(inValues[0]));
            string FileName = ((string)(inValues[1]));
            int Width = ((int)(inValues[2]));
            int Alignment = ((int)(inValues[3]));
            return this.BeginPrintBitmap(Station, FileName, Width, Alignment, callback, asyncState);
        }
        
        private object[] OnEndPrintBitmap(System.IAsyncResult result) {
            this.EndPrintBitmap(result);
            return null;
        }
        
        private void OnPrintBitmapCompleted(object state) {
            if ((this.PrintBitmapCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PrintBitmapCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PrintBitmapAsync(WSPoS.POSPrinterServiceReference.PrinterStation Station, string FileName, int Width, int Alignment) {
            this.PrintBitmapAsync(Station, FileName, Width, Alignment, null);
        }
        
        public void PrintBitmapAsync(WSPoS.POSPrinterServiceReference.PrinterStation Station, string FileName, int Width, int Alignment, object userState) {
            if ((this.onBeginPrintBitmapDelegate == null)) {
                this.onBeginPrintBitmapDelegate = new BeginOperationDelegate(this.OnBeginPrintBitmap);
            }
            if ((this.onEndPrintBitmapDelegate == null)) {
                this.onEndPrintBitmapDelegate = new EndOperationDelegate(this.OnEndPrintBitmap);
            }
            if ((this.onPrintBitmapCompletedDelegate == null)) {
                this.onPrintBitmapCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPrintBitmapCompleted);
            }
            base.InvokeAsync(this.onBeginPrintBitmapDelegate, new object[] {
                        Station,
                        FileName,
                        Width,
                        Alignment}, this.onEndPrintBitmapDelegate, this.onPrintBitmapCompletedDelegate, userState);
        }
        
        public void PrintImmediate(WSPoS.POSPrinterServiceReference.PrinterStation Station, string Data) {
            base.Channel.PrintImmediate(Station, Data);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPrintImmediate(WSPoS.POSPrinterServiceReference.PrinterStation Station, string Data, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPrintImmediate(Station, Data, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndPrintImmediate(System.IAsyncResult result) {
            base.Channel.EndPrintImmediate(result);
        }
        
        private System.IAsyncResult OnBeginPrintImmediate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WSPoS.POSPrinterServiceReference.PrinterStation Station = ((WSPoS.POSPrinterServiceReference.PrinterStation)(inValues[0]));
            string Data = ((string)(inValues[1]));
            return this.BeginPrintImmediate(Station, Data, callback, asyncState);
        }
        
        private object[] OnEndPrintImmediate(System.IAsyncResult result) {
            this.EndPrintImmediate(result);
            return null;
        }
        
        private void OnPrintImmediateCompleted(object state) {
            if ((this.PrintImmediateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PrintImmediateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PrintImmediateAsync(WSPoS.POSPrinterServiceReference.PrinterStation Station, string Data) {
            this.PrintImmediateAsync(Station, Data, null);
        }
        
        public void PrintImmediateAsync(WSPoS.POSPrinterServiceReference.PrinterStation Station, string Data, object userState) {
            if ((this.onBeginPrintImmediateDelegate == null)) {
                this.onBeginPrintImmediateDelegate = new BeginOperationDelegate(this.OnBeginPrintImmediate);
            }
            if ((this.onEndPrintImmediateDelegate == null)) {
                this.onEndPrintImmediateDelegate = new EndOperationDelegate(this.OnEndPrintImmediate);
            }
            if ((this.onPrintImmediateCompletedDelegate == null)) {
                this.onPrintImmediateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPrintImmediateCompleted);
            }
            base.InvokeAsync(this.onBeginPrintImmediateDelegate, new object[] {
                        Station,
                        Data}, this.onEndPrintImmediateDelegate, this.onPrintImmediateCompletedDelegate, userState);
        }
        
        public void PrintMemoryBitmap(WSPoS.POSPrinterServiceReference.PrinterStation Station, byte[] Data, WSPoS.POSPrinterServiceReference.BitmapType Type, int Width, int Alignment) {
            base.Channel.PrintMemoryBitmap(Station, Data, Type, Width, Alignment);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPrintMemoryBitmap(WSPoS.POSPrinterServiceReference.PrinterStation Station, byte[] Data, WSPoS.POSPrinterServiceReference.BitmapType Type, int Width, int Alignment, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPrintMemoryBitmap(Station, Data, Type, Width, Alignment, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndPrintMemoryBitmap(System.IAsyncResult result) {
            base.Channel.EndPrintMemoryBitmap(result);
        }
        
        private System.IAsyncResult OnBeginPrintMemoryBitmap(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WSPoS.POSPrinterServiceReference.PrinterStation Station = ((WSPoS.POSPrinterServiceReference.PrinterStation)(inValues[0]));
            byte[] Data = ((byte[])(inValues[1]));
            WSPoS.POSPrinterServiceReference.BitmapType Type = ((WSPoS.POSPrinterServiceReference.BitmapType)(inValues[2]));
            int Width = ((int)(inValues[3]));
            int Alignment = ((int)(inValues[4]));
            return this.BeginPrintMemoryBitmap(Station, Data, Type, Width, Alignment, callback, asyncState);
        }
        
        private object[] OnEndPrintMemoryBitmap(System.IAsyncResult result) {
            this.EndPrintMemoryBitmap(result);
            return null;
        }
        
        private void OnPrintMemoryBitmapCompleted(object state) {
            if ((this.PrintMemoryBitmapCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PrintMemoryBitmapCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PrintMemoryBitmapAsync(WSPoS.POSPrinterServiceReference.PrinterStation Station, byte[] Data, WSPoS.POSPrinterServiceReference.BitmapType Type, int Width, int Alignment) {
            this.PrintMemoryBitmapAsync(Station, Data, Type, Width, Alignment, null);
        }
        
        public void PrintMemoryBitmapAsync(WSPoS.POSPrinterServiceReference.PrinterStation Station, byte[] Data, WSPoS.POSPrinterServiceReference.BitmapType Type, int Width, int Alignment, object userState) {
            if ((this.onBeginPrintMemoryBitmapDelegate == null)) {
                this.onBeginPrintMemoryBitmapDelegate = new BeginOperationDelegate(this.OnBeginPrintMemoryBitmap);
            }
            if ((this.onEndPrintMemoryBitmapDelegate == null)) {
                this.onEndPrintMemoryBitmapDelegate = new EndOperationDelegate(this.OnEndPrintMemoryBitmap);
            }
            if ((this.onPrintMemoryBitmapCompletedDelegate == null)) {
                this.onPrintMemoryBitmapCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPrintMemoryBitmapCompleted);
            }
            base.InvokeAsync(this.onBeginPrintMemoryBitmapDelegate, new object[] {
                        Station,
                        Data,
                        Type,
                        Width,
                        Alignment}, this.onEndPrintMemoryBitmapDelegate, this.onPrintMemoryBitmapCompletedDelegate, userState);
        }
        
        public void PrintNormal(WSPoS.POSPrinterServiceReference.PrinterStation Station, string Data) {
            base.Channel.PrintNormal(Station, Data);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPrintNormal(WSPoS.POSPrinterServiceReference.PrinterStation Station, string Data, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPrintNormal(Station, Data, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndPrintNormal(System.IAsyncResult result) {
            base.Channel.EndPrintNormal(result);
        }
        
        private System.IAsyncResult OnBeginPrintNormal(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WSPoS.POSPrinterServiceReference.PrinterStation Station = ((WSPoS.POSPrinterServiceReference.PrinterStation)(inValues[0]));
            string Data = ((string)(inValues[1]));
            return this.BeginPrintNormal(Station, Data, callback, asyncState);
        }
        
        private object[] OnEndPrintNormal(System.IAsyncResult result) {
            this.EndPrintNormal(result);
            return null;
        }
        
        private void OnPrintNormalCompleted(object state) {
            if ((this.PrintNormalCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PrintNormalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PrintNormalAsync(WSPoS.POSPrinterServiceReference.PrinterStation Station, string Data) {
            this.PrintNormalAsync(Station, Data, null);
        }
        
        public void PrintNormalAsync(WSPoS.POSPrinterServiceReference.PrinterStation Station, string Data, object userState) {
            if ((this.onBeginPrintNormalDelegate == null)) {
                this.onBeginPrintNormalDelegate = new BeginOperationDelegate(this.OnBeginPrintNormal);
            }
            if ((this.onEndPrintNormalDelegate == null)) {
                this.onEndPrintNormalDelegate = new EndOperationDelegate(this.OnEndPrintNormal);
            }
            if ((this.onPrintNormalCompletedDelegate == null)) {
                this.onPrintNormalCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPrintNormalCompleted);
            }
            base.InvokeAsync(this.onBeginPrintNormalDelegate, new object[] {
                        Station,
                        Data}, this.onEndPrintNormalDelegate, this.onPrintNormalCompletedDelegate, userState);
        }
        
        public void PrintTwoNormal(WSPoS.POSPrinterServiceReference.PrinterStation Station, string Data1, string Data2) {
            base.Channel.PrintTwoNormal(Station, Data1, Data2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPrintTwoNormal(WSPoS.POSPrinterServiceReference.PrinterStation Station, string Data1, string Data2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPrintTwoNormal(Station, Data1, Data2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndPrintTwoNormal(System.IAsyncResult result) {
            base.Channel.EndPrintTwoNormal(result);
        }
        
        private System.IAsyncResult OnBeginPrintTwoNormal(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WSPoS.POSPrinterServiceReference.PrinterStation Station = ((WSPoS.POSPrinterServiceReference.PrinterStation)(inValues[0]));
            string Data1 = ((string)(inValues[1]));
            string Data2 = ((string)(inValues[2]));
            return this.BeginPrintTwoNormal(Station, Data1, Data2, callback, asyncState);
        }
        
        private object[] OnEndPrintTwoNormal(System.IAsyncResult result) {
            this.EndPrintTwoNormal(result);
            return null;
        }
        
        private void OnPrintTwoNormalCompleted(object state) {
            if ((this.PrintTwoNormalCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PrintTwoNormalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PrintTwoNormalAsync(WSPoS.POSPrinterServiceReference.PrinterStation Station, string Data1, string Data2) {
            this.PrintTwoNormalAsync(Station, Data1, Data2, null);
        }
        
        public void PrintTwoNormalAsync(WSPoS.POSPrinterServiceReference.PrinterStation Station, string Data1, string Data2, object userState) {
            if ((this.onBeginPrintTwoNormalDelegate == null)) {
                this.onBeginPrintTwoNormalDelegate = new BeginOperationDelegate(this.OnBeginPrintTwoNormal);
            }
            if ((this.onEndPrintTwoNormalDelegate == null)) {
                this.onEndPrintTwoNormalDelegate = new EndOperationDelegate(this.OnEndPrintTwoNormal);
            }
            if ((this.onPrintTwoNormalCompletedDelegate == null)) {
                this.onPrintTwoNormalCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPrintTwoNormalCompleted);
            }
            base.InvokeAsync(this.onBeginPrintTwoNormalDelegate, new object[] {
                        Station,
                        Data1,
                        Data2}, this.onEndPrintTwoNormalDelegate, this.onPrintTwoNormalCompletedDelegate, userState);
        }
        
        public void RotatePrint(WSPoS.POSPrinterServiceReference.PrinterStation Station, int Rotation) {
            base.Channel.RotatePrint(Station, Rotation);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRotatePrint(WSPoS.POSPrinterServiceReference.PrinterStation Station, int Rotation, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRotatePrint(Station, Rotation, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndRotatePrint(System.IAsyncResult result) {
            base.Channel.EndRotatePrint(result);
        }
        
        private System.IAsyncResult OnBeginRotatePrint(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WSPoS.POSPrinterServiceReference.PrinterStation Station = ((WSPoS.POSPrinterServiceReference.PrinterStation)(inValues[0]));
            int Rotation = ((int)(inValues[1]));
            return this.BeginRotatePrint(Station, Rotation, callback, asyncState);
        }
        
        private object[] OnEndRotatePrint(System.IAsyncResult result) {
            this.EndRotatePrint(result);
            return null;
        }
        
        private void OnRotatePrintCompleted(object state) {
            if ((this.RotatePrintCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RotatePrintCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RotatePrintAsync(WSPoS.POSPrinterServiceReference.PrinterStation Station, int Rotation) {
            this.RotatePrintAsync(Station, Rotation, null);
        }
        
        public void RotatePrintAsync(WSPoS.POSPrinterServiceReference.PrinterStation Station, int Rotation, object userState) {
            if ((this.onBeginRotatePrintDelegate == null)) {
                this.onBeginRotatePrintDelegate = new BeginOperationDelegate(this.OnBeginRotatePrint);
            }
            if ((this.onEndRotatePrintDelegate == null)) {
                this.onEndRotatePrintDelegate = new EndOperationDelegate(this.OnEndRotatePrint);
            }
            if ((this.onRotatePrintCompletedDelegate == null)) {
                this.onRotatePrintCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRotatePrintCompleted);
            }
            base.InvokeAsync(this.onBeginRotatePrintDelegate, new object[] {
                        Station,
                        Rotation}, this.onEndRotatePrintDelegate, this.onRotatePrintCompletedDelegate, userState);
        }
        
        public void SetBitmap(int BitmapNumber, WSPoS.POSPrinterServiceReference.PrinterStation Station, string FileName, int Width, int Alignment) {
            base.Channel.SetBitmap(BitmapNumber, Station, FileName, Width, Alignment);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetBitmap(int BitmapNumber, WSPoS.POSPrinterServiceReference.PrinterStation Station, string FileName, int Width, int Alignment, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetBitmap(BitmapNumber, Station, FileName, Width, Alignment, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetBitmap(System.IAsyncResult result) {
            base.Channel.EndSetBitmap(result);
        }
        
        private System.IAsyncResult OnBeginSetBitmap(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int BitmapNumber = ((int)(inValues[0]));
            WSPoS.POSPrinterServiceReference.PrinterStation Station = ((WSPoS.POSPrinterServiceReference.PrinterStation)(inValues[1]));
            string FileName = ((string)(inValues[2]));
            int Width = ((int)(inValues[3]));
            int Alignment = ((int)(inValues[4]));
            return this.BeginSetBitmap(BitmapNumber, Station, FileName, Width, Alignment, callback, asyncState);
        }
        
        private object[] OnEndSetBitmap(System.IAsyncResult result) {
            this.EndSetBitmap(result);
            return null;
        }
        
        private void OnSetBitmapCompleted(object state) {
            if ((this.SetBitmapCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetBitmapCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetBitmapAsync(int BitmapNumber, WSPoS.POSPrinterServiceReference.PrinterStation Station, string FileName, int Width, int Alignment) {
            this.SetBitmapAsync(BitmapNumber, Station, FileName, Width, Alignment, null);
        }
        
        public void SetBitmapAsync(int BitmapNumber, WSPoS.POSPrinterServiceReference.PrinterStation Station, string FileName, int Width, int Alignment, object userState) {
            if ((this.onBeginSetBitmapDelegate == null)) {
                this.onBeginSetBitmapDelegate = new BeginOperationDelegate(this.OnBeginSetBitmap);
            }
            if ((this.onEndSetBitmapDelegate == null)) {
                this.onEndSetBitmapDelegate = new EndOperationDelegate(this.OnEndSetBitmap);
            }
            if ((this.onSetBitmapCompletedDelegate == null)) {
                this.onSetBitmapCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetBitmapCompleted);
            }
            base.InvokeAsync(this.onBeginSetBitmapDelegate, new object[] {
                        BitmapNumber,
                        Station,
                        FileName,
                        Width,
                        Alignment}, this.onEndSetBitmapDelegate, this.onSetBitmapCompletedDelegate, userState);
        }
        
        public void SetLogo(WSPoS.POSPrinterServiceReference.PrinterLogoLocation Location, string Data) {
            base.Channel.SetLogo(Location, Data);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetLogo(WSPoS.POSPrinterServiceReference.PrinterLogoLocation Location, string Data, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetLogo(Location, Data, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetLogo(System.IAsyncResult result) {
            base.Channel.EndSetLogo(result);
        }
        
        private System.IAsyncResult OnBeginSetLogo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WSPoS.POSPrinterServiceReference.PrinterLogoLocation Location = ((WSPoS.POSPrinterServiceReference.PrinterLogoLocation)(inValues[0]));
            string Data = ((string)(inValues[1]));
            return this.BeginSetLogo(Location, Data, callback, asyncState);
        }
        
        private object[] OnEndSetLogo(System.IAsyncResult result) {
            this.EndSetLogo(result);
            return null;
        }
        
        private void OnSetLogoCompleted(object state) {
            if ((this.SetLogoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetLogoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetLogoAsync(WSPoS.POSPrinterServiceReference.PrinterLogoLocation Location, string Data) {
            this.SetLogoAsync(Location, Data, null);
        }
        
        public void SetLogoAsync(WSPoS.POSPrinterServiceReference.PrinterLogoLocation Location, string Data, object userState) {
            if ((this.onBeginSetLogoDelegate == null)) {
                this.onBeginSetLogoDelegate = new BeginOperationDelegate(this.OnBeginSetLogo);
            }
            if ((this.onEndSetLogoDelegate == null)) {
                this.onEndSetLogoDelegate = new EndOperationDelegate(this.OnEndSetLogo);
            }
            if ((this.onSetLogoCompletedDelegate == null)) {
                this.onSetLogoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetLogoCompleted);
            }
            base.InvokeAsync(this.onBeginSetLogoDelegate, new object[] {
                        Location,
                        Data}, this.onEndSetLogoDelegate, this.onSetLogoCompletedDelegate, userState);
        }
        
        public void TransactionPrint(WSPoS.POSPrinterServiceReference.PrinterStation Station, WSPoS.POSPrinterServiceReference.PrinterTransactionControl Control) {
            base.Channel.TransactionPrint(Station, Control);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginTransactionPrint(WSPoS.POSPrinterServiceReference.PrinterStation Station, WSPoS.POSPrinterServiceReference.PrinterTransactionControl Control, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTransactionPrint(Station, Control, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndTransactionPrint(System.IAsyncResult result) {
            base.Channel.EndTransactionPrint(result);
        }
        
        private System.IAsyncResult OnBeginTransactionPrint(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WSPoS.POSPrinterServiceReference.PrinterStation Station = ((WSPoS.POSPrinterServiceReference.PrinterStation)(inValues[0]));
            WSPoS.POSPrinterServiceReference.PrinterTransactionControl Control = ((WSPoS.POSPrinterServiceReference.PrinterTransactionControl)(inValues[1]));
            return this.BeginTransactionPrint(Station, Control, callback, asyncState);
        }
        
        private object[] OnEndTransactionPrint(System.IAsyncResult result) {
            this.EndTransactionPrint(result);
            return null;
        }
        
        private void OnTransactionPrintCompleted(object state) {
            if ((this.TransactionPrintCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TransactionPrintCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TransactionPrintAsync(WSPoS.POSPrinterServiceReference.PrinterStation Station, WSPoS.POSPrinterServiceReference.PrinterTransactionControl Control) {
            this.TransactionPrintAsync(Station, Control, null);
        }
        
        public void TransactionPrintAsync(WSPoS.POSPrinterServiceReference.PrinterStation Station, WSPoS.POSPrinterServiceReference.PrinterTransactionControl Control, object userState) {
            if ((this.onBeginTransactionPrintDelegate == null)) {
                this.onBeginTransactionPrintDelegate = new BeginOperationDelegate(this.OnBeginTransactionPrint);
            }
            if ((this.onEndTransactionPrintDelegate == null)) {
                this.onEndTransactionPrintDelegate = new EndOperationDelegate(this.OnEndTransactionPrint);
            }
            if ((this.onTransactionPrintCompletedDelegate == null)) {
                this.onTransactionPrintCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTransactionPrintCompleted);
            }
            base.InvokeAsync(this.onBeginTransactionPrintDelegate, new object[] {
                        Station,
                        Control}, this.onEndTransactionPrintDelegate, this.onTransactionPrintCompletedDelegate, userState);
        }
        
        public void ValidateData(WSPoS.POSPrinterServiceReference.PrinterStation Station, string Data) {
            base.Channel.ValidateData(Station, Data);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginValidateData(WSPoS.POSPrinterServiceReference.PrinterStation Station, string Data, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginValidateData(Station, Data, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndValidateData(System.IAsyncResult result) {
            base.Channel.EndValidateData(result);
        }
        
        private System.IAsyncResult OnBeginValidateData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WSPoS.POSPrinterServiceReference.PrinterStation Station = ((WSPoS.POSPrinterServiceReference.PrinterStation)(inValues[0]));
            string Data = ((string)(inValues[1]));
            return this.BeginValidateData(Station, Data, callback, asyncState);
        }
        
        private object[] OnEndValidateData(System.IAsyncResult result) {
            this.EndValidateData(result);
            return null;
        }
        
        private void OnValidateDataCompleted(object state) {
            if ((this.ValidateDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValidateDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ValidateDataAsync(WSPoS.POSPrinterServiceReference.PrinterStation Station, string Data) {
            this.ValidateDataAsync(Station, Data, null);
        }
        
        public void ValidateDataAsync(WSPoS.POSPrinterServiceReference.PrinterStation Station, string Data, object userState) {
            if ((this.onBeginValidateDataDelegate == null)) {
                this.onBeginValidateDataDelegate = new BeginOperationDelegate(this.OnBeginValidateData);
            }
            if ((this.onEndValidateDataDelegate == null)) {
                this.onEndValidateDataDelegate = new EndOperationDelegate(this.OnEndValidateData);
            }
            if ((this.onValidateDataCompletedDelegate == null)) {
                this.onValidateDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValidateDataCompleted);
            }
            base.InvokeAsync(this.onBeginValidateDataDelegate, new object[] {
                        Station,
                        Data}, this.onEndValidateDataDelegate, this.onValidateDataCompletedDelegate, userState);
        }
        
        public bool GetSlpLetterQuality() {
            return base.Channel.GetSlpLetterQuality();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSlpLetterQuality(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSlpLetterQuality(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetSlpLetterQuality(System.IAsyncResult result) {
            return base.Channel.EndGetSlpLetterQuality(result);
        }
        
        private System.IAsyncResult OnBeginGetSlpLetterQuality(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetSlpLetterQuality(callback, asyncState);
        }
        
        private object[] OnEndGetSlpLetterQuality(System.IAsyncResult result) {
            bool retVal = this.EndGetSlpLetterQuality(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSlpLetterQualityCompleted(object state) {
            if ((this.GetSlpLetterQualityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSlpLetterQualityCompleted(this, new GetSlpLetterQualityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSlpLetterQualityAsync() {
            this.GetSlpLetterQualityAsync(null);
        }
        
        public void GetSlpLetterQualityAsync(object userState) {
            if ((this.onBeginGetSlpLetterQualityDelegate == null)) {
                this.onBeginGetSlpLetterQualityDelegate = new BeginOperationDelegate(this.OnBeginGetSlpLetterQuality);
            }
            if ((this.onEndGetSlpLetterQualityDelegate == null)) {
                this.onEndGetSlpLetterQualityDelegate = new EndOperationDelegate(this.OnEndGetSlpLetterQuality);
            }
            if ((this.onGetSlpLetterQualityCompletedDelegate == null)) {
                this.onGetSlpLetterQualityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSlpLetterQualityCompleted);
            }
            base.InvokeAsync(this.onBeginGetSlpLetterQualityDelegate, null, this.onEndGetSlpLetterQualityDelegate, this.onGetSlpLetterQualityCompletedDelegate, userState);
        }
        
        public void SetSlpLetterQuality(bool SlpLetterQuality) {
            base.Channel.SetSlpLetterQuality(SlpLetterQuality);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetSlpLetterQuality(bool SlpLetterQuality, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetSlpLetterQuality(SlpLetterQuality, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetSlpLetterQuality(System.IAsyncResult result) {
            base.Channel.EndSetSlpLetterQuality(result);
        }
        
        private System.IAsyncResult OnBeginSetSlpLetterQuality(object[] inValues, System.AsyncCallback callback, object asyncState) {
            bool SlpLetterQuality = ((bool)(inValues[0]));
            return this.BeginSetSlpLetterQuality(SlpLetterQuality, callback, asyncState);
        }
        
        private object[] OnEndSetSlpLetterQuality(System.IAsyncResult result) {
            this.EndSetSlpLetterQuality(result);
            return null;
        }
        
        private void OnSetSlpLetterQualityCompleted(object state) {
            if ((this.SetSlpLetterQualityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetSlpLetterQualityCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetSlpLetterQualityAsync(bool SlpLetterQuality) {
            this.SetSlpLetterQualityAsync(SlpLetterQuality, null);
        }
        
        public void SetSlpLetterQualityAsync(bool SlpLetterQuality, object userState) {
            if ((this.onBeginSetSlpLetterQualityDelegate == null)) {
                this.onBeginSetSlpLetterQualityDelegate = new BeginOperationDelegate(this.OnBeginSetSlpLetterQuality);
            }
            if ((this.onEndSetSlpLetterQualityDelegate == null)) {
                this.onEndSetSlpLetterQualityDelegate = new EndOperationDelegate(this.OnEndSetSlpLetterQuality);
            }
            if ((this.onSetSlpLetterQualityCompletedDelegate == null)) {
                this.onSetSlpLetterQualityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetSlpLetterQualityCompleted);
            }
            base.InvokeAsync(this.onBeginSetSlpLetterQualityDelegate, new object[] {
                        SlpLetterQuality}, this.onEndSetSlpLetterQualityDelegate, this.onSetSlpLetterQualityCompletedDelegate, userState);
        }
        
        public bool GetSlpEmpty() {
            return base.Channel.GetSlpEmpty();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSlpEmpty(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSlpEmpty(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetSlpEmpty(System.IAsyncResult result) {
            return base.Channel.EndGetSlpEmpty(result);
        }
        
        private System.IAsyncResult OnBeginGetSlpEmpty(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetSlpEmpty(callback, asyncState);
        }
        
        private object[] OnEndGetSlpEmpty(System.IAsyncResult result) {
            bool retVal = this.EndGetSlpEmpty(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSlpEmptyCompleted(object state) {
            if ((this.GetSlpEmptyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSlpEmptyCompleted(this, new GetSlpEmptyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSlpEmptyAsync() {
            this.GetSlpEmptyAsync(null);
        }
        
        public void GetSlpEmptyAsync(object userState) {
            if ((this.onBeginGetSlpEmptyDelegate == null)) {
                this.onBeginGetSlpEmptyDelegate = new BeginOperationDelegate(this.OnBeginGetSlpEmpty);
            }
            if ((this.onEndGetSlpEmptyDelegate == null)) {
                this.onEndGetSlpEmptyDelegate = new EndOperationDelegate(this.OnEndGetSlpEmpty);
            }
            if ((this.onGetSlpEmptyCompletedDelegate == null)) {
                this.onGetSlpEmptyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSlpEmptyCompleted);
            }
            base.InvokeAsync(this.onBeginGetSlpEmptyDelegate, null, this.onEndGetSlpEmptyDelegate, this.onGetSlpEmptyCompletedDelegate, userState);
        }
        
        public bool GetSlpNearEnd() {
            return base.Channel.GetSlpNearEnd();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSlpNearEnd(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSlpNearEnd(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetSlpNearEnd(System.IAsyncResult result) {
            return base.Channel.EndGetSlpNearEnd(result);
        }
        
        private System.IAsyncResult OnBeginGetSlpNearEnd(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetSlpNearEnd(callback, asyncState);
        }
        
        private object[] OnEndGetSlpNearEnd(System.IAsyncResult result) {
            bool retVal = this.EndGetSlpNearEnd(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSlpNearEndCompleted(object state) {
            if ((this.GetSlpNearEndCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSlpNearEndCompleted(this, new GetSlpNearEndCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSlpNearEndAsync() {
            this.GetSlpNearEndAsync(null);
        }
        
        public void GetSlpNearEndAsync(object userState) {
            if ((this.onBeginGetSlpNearEndDelegate == null)) {
                this.onBeginGetSlpNearEndDelegate = new BeginOperationDelegate(this.OnBeginGetSlpNearEnd);
            }
            if ((this.onEndGetSlpNearEndDelegate == null)) {
                this.onEndGetSlpNearEndDelegate = new EndOperationDelegate(this.OnEndGetSlpNearEnd);
            }
            if ((this.onGetSlpNearEndCompletedDelegate == null)) {
                this.onGetSlpNearEndCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSlpNearEndCompleted);
            }
            base.InvokeAsync(this.onBeginGetSlpNearEndDelegate, null, this.onEndGetSlpNearEndDelegate, this.onGetSlpNearEndCompletedDelegate, userState);
        }
        
        public int GetSlpSidewaysMaxLines() {
            return base.Channel.GetSlpSidewaysMaxLines();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSlpSidewaysMaxLines(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSlpSidewaysMaxLines(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetSlpSidewaysMaxLines(System.IAsyncResult result) {
            return base.Channel.EndGetSlpSidewaysMaxLines(result);
        }
        
        private System.IAsyncResult OnBeginGetSlpSidewaysMaxLines(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetSlpSidewaysMaxLines(callback, asyncState);
        }
        
        private object[] OnEndGetSlpSidewaysMaxLines(System.IAsyncResult result) {
            int retVal = this.EndGetSlpSidewaysMaxLines(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSlpSidewaysMaxLinesCompleted(object state) {
            if ((this.GetSlpSidewaysMaxLinesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSlpSidewaysMaxLinesCompleted(this, new GetSlpSidewaysMaxLinesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSlpSidewaysMaxLinesAsync() {
            this.GetSlpSidewaysMaxLinesAsync(null);
        }
        
        public void GetSlpSidewaysMaxLinesAsync(object userState) {
            if ((this.onBeginGetSlpSidewaysMaxLinesDelegate == null)) {
                this.onBeginGetSlpSidewaysMaxLinesDelegate = new BeginOperationDelegate(this.OnBeginGetSlpSidewaysMaxLines);
            }
            if ((this.onEndGetSlpSidewaysMaxLinesDelegate == null)) {
                this.onEndGetSlpSidewaysMaxLinesDelegate = new EndOperationDelegate(this.OnEndGetSlpSidewaysMaxLines);
            }
            if ((this.onGetSlpSidewaysMaxLinesCompletedDelegate == null)) {
                this.onGetSlpSidewaysMaxLinesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSlpSidewaysMaxLinesCompleted);
            }
            base.InvokeAsync(this.onBeginGetSlpSidewaysMaxLinesDelegate, null, this.onEndGetSlpSidewaysMaxLinesDelegate, this.onGetSlpSidewaysMaxLinesCompletedDelegate, userState);
        }
        
        public int GetSlpSidewaysMaxChars() {
            return base.Channel.GetSlpSidewaysMaxChars();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSlpSidewaysMaxChars(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSlpSidewaysMaxChars(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetSlpSidewaysMaxChars(System.IAsyncResult result) {
            return base.Channel.EndGetSlpSidewaysMaxChars(result);
        }
        
        private System.IAsyncResult OnBeginGetSlpSidewaysMaxChars(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetSlpSidewaysMaxChars(callback, asyncState);
        }
        
        private object[] OnEndGetSlpSidewaysMaxChars(System.IAsyncResult result) {
            int retVal = this.EndGetSlpSidewaysMaxChars(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSlpSidewaysMaxCharsCompleted(object state) {
            if ((this.GetSlpSidewaysMaxCharsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSlpSidewaysMaxCharsCompleted(this, new GetSlpSidewaysMaxCharsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSlpSidewaysMaxCharsAsync() {
            this.GetSlpSidewaysMaxCharsAsync(null);
        }
        
        public void GetSlpSidewaysMaxCharsAsync(object userState) {
            if ((this.onBeginGetSlpSidewaysMaxCharsDelegate == null)) {
                this.onBeginGetSlpSidewaysMaxCharsDelegate = new BeginOperationDelegate(this.OnBeginGetSlpSidewaysMaxChars);
            }
            if ((this.onEndGetSlpSidewaysMaxCharsDelegate == null)) {
                this.onEndGetSlpSidewaysMaxCharsDelegate = new EndOperationDelegate(this.OnEndGetSlpSidewaysMaxChars);
            }
            if ((this.onGetSlpSidewaysMaxCharsCompletedDelegate == null)) {
                this.onGetSlpSidewaysMaxCharsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSlpSidewaysMaxCharsCompleted);
            }
            base.InvokeAsync(this.onBeginGetSlpSidewaysMaxCharsDelegate, null, this.onEndGetSlpSidewaysMaxCharsDelegate, this.onGetSlpSidewaysMaxCharsCompletedDelegate, userState);
        }
        
        public int GetSlpMaxLines() {
            return base.Channel.GetSlpMaxLines();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSlpMaxLines(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSlpMaxLines(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetSlpMaxLines(System.IAsyncResult result) {
            return base.Channel.EndGetSlpMaxLines(result);
        }
        
        private System.IAsyncResult OnBeginGetSlpMaxLines(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetSlpMaxLines(callback, asyncState);
        }
        
        private object[] OnEndGetSlpMaxLines(System.IAsyncResult result) {
            int retVal = this.EndGetSlpMaxLines(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSlpMaxLinesCompleted(object state) {
            if ((this.GetSlpMaxLinesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSlpMaxLinesCompleted(this, new GetSlpMaxLinesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSlpMaxLinesAsync() {
            this.GetSlpMaxLinesAsync(null);
        }
        
        public void GetSlpMaxLinesAsync(object userState) {
            if ((this.onBeginGetSlpMaxLinesDelegate == null)) {
                this.onBeginGetSlpMaxLinesDelegate = new BeginOperationDelegate(this.OnBeginGetSlpMaxLines);
            }
            if ((this.onEndGetSlpMaxLinesDelegate == null)) {
                this.onEndGetSlpMaxLinesDelegate = new EndOperationDelegate(this.OnEndGetSlpMaxLines);
            }
            if ((this.onGetSlpMaxLinesCompletedDelegate == null)) {
                this.onGetSlpMaxLinesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSlpMaxLinesCompleted);
            }
            base.InvokeAsync(this.onBeginGetSlpMaxLinesDelegate, null, this.onEndGetSlpMaxLinesDelegate, this.onGetSlpMaxLinesCompletedDelegate, userState);
        }
        
        public int GetSlpLinesNearEndToEnd() {
            return base.Channel.GetSlpLinesNearEndToEnd();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSlpLinesNearEndToEnd(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSlpLinesNearEndToEnd(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetSlpLinesNearEndToEnd(System.IAsyncResult result) {
            return base.Channel.EndGetSlpLinesNearEndToEnd(result);
        }
        
        private System.IAsyncResult OnBeginGetSlpLinesNearEndToEnd(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetSlpLinesNearEndToEnd(callback, asyncState);
        }
        
        private object[] OnEndGetSlpLinesNearEndToEnd(System.IAsyncResult result) {
            int retVal = this.EndGetSlpLinesNearEndToEnd(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSlpLinesNearEndToEndCompleted(object state) {
            if ((this.GetSlpLinesNearEndToEndCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSlpLinesNearEndToEndCompleted(this, new GetSlpLinesNearEndToEndCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSlpLinesNearEndToEndAsync() {
            this.GetSlpLinesNearEndToEndAsync(null);
        }
        
        public void GetSlpLinesNearEndToEndAsync(object userState) {
            if ((this.onBeginGetSlpLinesNearEndToEndDelegate == null)) {
                this.onBeginGetSlpLinesNearEndToEndDelegate = new BeginOperationDelegate(this.OnBeginGetSlpLinesNearEndToEnd);
            }
            if ((this.onEndGetSlpLinesNearEndToEndDelegate == null)) {
                this.onEndGetSlpLinesNearEndToEndDelegate = new EndOperationDelegate(this.OnEndGetSlpLinesNearEndToEnd);
            }
            if ((this.onGetSlpLinesNearEndToEndCompletedDelegate == null)) {
                this.onGetSlpLinesNearEndToEndCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSlpLinesNearEndToEndCompleted);
            }
            base.InvokeAsync(this.onBeginGetSlpLinesNearEndToEndDelegate, null, this.onEndGetSlpLinesNearEndToEndDelegate, this.onGetSlpLinesNearEndToEndCompletedDelegate, userState);
        }
        
        public WSPoS.POSPrinterServiceReference.RotationList GetSlpBarCodeRotationList() {
            return base.Channel.GetSlpBarCodeRotationList();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSlpBarCodeRotationList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSlpBarCodeRotationList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WSPoS.POSPrinterServiceReference.RotationList EndGetSlpBarCodeRotationList(System.IAsyncResult result) {
            return base.Channel.EndGetSlpBarCodeRotationList(result);
        }
        
        private System.IAsyncResult OnBeginGetSlpBarCodeRotationList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetSlpBarCodeRotationList(callback, asyncState);
        }
        
        private object[] OnEndGetSlpBarCodeRotationList(System.IAsyncResult result) {
            WSPoS.POSPrinterServiceReference.RotationList retVal = this.EndGetSlpBarCodeRotationList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSlpBarCodeRotationListCompleted(object state) {
            if ((this.GetSlpBarCodeRotationListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSlpBarCodeRotationListCompleted(this, new GetSlpBarCodeRotationListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSlpBarCodeRotationListAsync() {
            this.GetSlpBarCodeRotationListAsync(null);
        }
        
        public void GetSlpBarCodeRotationListAsync(object userState) {
            if ((this.onBeginGetSlpBarCodeRotationListDelegate == null)) {
                this.onBeginGetSlpBarCodeRotationListDelegate = new BeginOperationDelegate(this.OnBeginGetSlpBarCodeRotationList);
            }
            if ((this.onEndGetSlpBarCodeRotationListDelegate == null)) {
                this.onEndGetSlpBarCodeRotationListDelegate = new EndOperationDelegate(this.OnEndGetSlpBarCodeRotationList);
            }
            if ((this.onGetSlpBarCodeRotationListCompletedDelegate == null)) {
                this.onGetSlpBarCodeRotationListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSlpBarCodeRotationListCompleted);
            }
            base.InvokeAsync(this.onBeginGetSlpBarCodeRotationListDelegate, null, this.onEndGetSlpBarCodeRotationListDelegate, this.onGetSlpBarCodeRotationListCompletedDelegate, userState);
        }
        
        public WSPoS.POSPrinterServiceReference.RotationList GetSlpBitmapRotationList() {
            return base.Channel.GetSlpBitmapRotationList();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSlpBitmapRotationList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSlpBitmapRotationList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WSPoS.POSPrinterServiceReference.RotationList EndGetSlpBitmapRotationList(System.IAsyncResult result) {
            return base.Channel.EndGetSlpBitmapRotationList(result);
        }
        
        private System.IAsyncResult OnBeginGetSlpBitmapRotationList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetSlpBitmapRotationList(callback, asyncState);
        }
        
        private object[] OnEndGetSlpBitmapRotationList(System.IAsyncResult result) {
            WSPoS.POSPrinterServiceReference.RotationList retVal = this.EndGetSlpBitmapRotationList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSlpBitmapRotationListCompleted(object state) {
            if ((this.GetSlpBitmapRotationListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSlpBitmapRotationListCompleted(this, new GetSlpBitmapRotationListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSlpBitmapRotationListAsync() {
            this.GetSlpBitmapRotationListAsync(null);
        }
        
        public void GetSlpBitmapRotationListAsync(object userState) {
            if ((this.onBeginGetSlpBitmapRotationListDelegate == null)) {
                this.onBeginGetSlpBitmapRotationListDelegate = new BeginOperationDelegate(this.OnBeginGetSlpBitmapRotationList);
            }
            if ((this.onEndGetSlpBitmapRotationListDelegate == null)) {
                this.onEndGetSlpBitmapRotationListDelegate = new EndOperationDelegate(this.OnEndGetSlpBitmapRotationList);
            }
            if ((this.onGetSlpBitmapRotationListCompletedDelegate == null)) {
                this.onGetSlpBitmapRotationListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSlpBitmapRotationListCompleted);
            }
            base.InvokeAsync(this.onBeginGetSlpBitmapRotationListDelegate, null, this.onEndGetSlpBitmapRotationListDelegate, this.onGetSlpBitmapRotationListCompletedDelegate, userState);
        }
        
        public WSPoS.POSPrinterServiceReference.PrinterSide GetSlpPrintSide() {
            return base.Channel.GetSlpPrintSide();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSlpPrintSide(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSlpPrintSide(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WSPoS.POSPrinterServiceReference.PrinterSide EndGetSlpPrintSide(System.IAsyncResult result) {
            return base.Channel.EndGetSlpPrintSide(result);
        }
        
        private System.IAsyncResult OnBeginGetSlpPrintSide(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetSlpPrintSide(callback, asyncState);
        }
        
        private object[] OnEndGetSlpPrintSide(System.IAsyncResult result) {
            WSPoS.POSPrinterServiceReference.PrinterSide retVal = this.EndGetSlpPrintSide(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSlpPrintSideCompleted(object state) {
            if ((this.GetSlpPrintSideCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSlpPrintSideCompleted(this, new GetSlpPrintSideCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSlpPrintSideAsync() {
            this.GetSlpPrintSideAsync(null);
        }
        
        public void GetSlpPrintSideAsync(object userState) {
            if ((this.onBeginGetSlpPrintSideDelegate == null)) {
                this.onBeginGetSlpPrintSideDelegate = new BeginOperationDelegate(this.OnBeginGetSlpPrintSide);
            }
            if ((this.onEndGetSlpPrintSideDelegate == null)) {
                this.onEndGetSlpPrintSideDelegate = new EndOperationDelegate(this.OnEndGetSlpPrintSide);
            }
            if ((this.onGetSlpPrintSideCompletedDelegate == null)) {
                this.onGetSlpPrintSideCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSlpPrintSideCompleted);
            }
            base.InvokeAsync(this.onBeginGetSlpPrintSideDelegate, null, this.onEndGetSlpPrintSideDelegate, this.onGetSlpPrintSideCompletedDelegate, userState);
        }
        
        public WSPoS.POSPrinterServiceReference.PrinterCartridgeStates GetSlpCartridgeState() {
            return base.Channel.GetSlpCartridgeState();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSlpCartridgeState(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSlpCartridgeState(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WSPoS.POSPrinterServiceReference.PrinterCartridgeStates EndGetSlpCartridgeState(System.IAsyncResult result) {
            return base.Channel.EndGetSlpCartridgeState(result);
        }
        
        private System.IAsyncResult OnBeginGetSlpCartridgeState(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetSlpCartridgeState(callback, asyncState);
        }
        
        private object[] OnEndGetSlpCartridgeState(System.IAsyncResult result) {
            WSPoS.POSPrinterServiceReference.PrinterCartridgeStates retVal = this.EndGetSlpCartridgeState(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSlpCartridgeStateCompleted(object state) {
            if ((this.GetSlpCartridgeStateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSlpCartridgeStateCompleted(this, new GetSlpCartridgeStateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSlpCartridgeStateAsync() {
            this.GetSlpCartridgeStateAsync(null);
        }
        
        public void GetSlpCartridgeStateAsync(object userState) {
            if ((this.onBeginGetSlpCartridgeStateDelegate == null)) {
                this.onBeginGetSlpCartridgeStateDelegate = new BeginOperationDelegate(this.OnBeginGetSlpCartridgeState);
            }
            if ((this.onEndGetSlpCartridgeStateDelegate == null)) {
                this.onEndGetSlpCartridgeStateDelegate = new EndOperationDelegate(this.OnEndGetSlpCartridgeState);
            }
            if ((this.onGetSlpCartridgeStateCompletedDelegate == null)) {
                this.onGetSlpCartridgeStateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSlpCartridgeStateCompleted);
            }
            base.InvokeAsync(this.onBeginGetSlpCartridgeStateDelegate, null, this.onEndGetSlpCartridgeStateDelegate, this.onGetSlpCartridgeStateCompletedDelegate, userState);
        }
        
        public int GetSlpCurrentCartridge() {
            return base.Channel.GetSlpCurrentCartridge();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSlpCurrentCartridge(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSlpCurrentCartridge(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetSlpCurrentCartridge(System.IAsyncResult result) {
            return base.Channel.EndGetSlpCurrentCartridge(result);
        }
        
        private System.IAsyncResult OnBeginGetSlpCurrentCartridge(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetSlpCurrentCartridge(callback, asyncState);
        }
        
        private object[] OnEndGetSlpCurrentCartridge(System.IAsyncResult result) {
            int retVal = this.EndGetSlpCurrentCartridge(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSlpCurrentCartridgeCompleted(object state) {
            if ((this.GetSlpCurrentCartridgeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSlpCurrentCartridgeCompleted(this, new GetSlpCurrentCartridgeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSlpCurrentCartridgeAsync() {
            this.GetSlpCurrentCartridgeAsync(null);
        }
        
        public void GetSlpCurrentCartridgeAsync(object userState) {
            if ((this.onBeginGetSlpCurrentCartridgeDelegate == null)) {
                this.onBeginGetSlpCurrentCartridgeDelegate = new BeginOperationDelegate(this.OnBeginGetSlpCurrentCartridge);
            }
            if ((this.onEndGetSlpCurrentCartridgeDelegate == null)) {
                this.onEndGetSlpCurrentCartridgeDelegate = new EndOperationDelegate(this.OnEndGetSlpCurrentCartridge);
            }
            if ((this.onGetSlpCurrentCartridgeCompletedDelegate == null)) {
                this.onGetSlpCurrentCartridgeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSlpCurrentCartridgeCompleted);
            }
            base.InvokeAsync(this.onBeginGetSlpCurrentCartridgeDelegate, null, this.onEndGetSlpCurrentCartridgeDelegate, this.onGetSlpCurrentCartridgeCompletedDelegate, userState);
        }
        
        public void SetSlpCurrentCartridge(int SlpCurrentCartridge) {
            base.Channel.SetSlpCurrentCartridge(SlpCurrentCartridge);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetSlpCurrentCartridge(int SlpCurrentCartridge, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetSlpCurrentCartridge(SlpCurrentCartridge, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetSlpCurrentCartridge(System.IAsyncResult result) {
            base.Channel.EndSetSlpCurrentCartridge(result);
        }
        
        private System.IAsyncResult OnBeginSetSlpCurrentCartridge(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int SlpCurrentCartridge = ((int)(inValues[0]));
            return this.BeginSetSlpCurrentCartridge(SlpCurrentCartridge, callback, asyncState);
        }
        
        private object[] OnEndSetSlpCurrentCartridge(System.IAsyncResult result) {
            this.EndSetSlpCurrentCartridge(result);
            return null;
        }
        
        private void OnSetSlpCurrentCartridgeCompleted(object state) {
            if ((this.SetSlpCurrentCartridgeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetSlpCurrentCartridgeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetSlpCurrentCartridgeAsync(int SlpCurrentCartridge) {
            this.SetSlpCurrentCartridgeAsync(SlpCurrentCartridge, null);
        }
        
        public void SetSlpCurrentCartridgeAsync(int SlpCurrentCartridge, object userState) {
            if ((this.onBeginSetSlpCurrentCartridgeDelegate == null)) {
                this.onBeginSetSlpCurrentCartridgeDelegate = new BeginOperationDelegate(this.OnBeginSetSlpCurrentCartridge);
            }
            if ((this.onEndSetSlpCurrentCartridgeDelegate == null)) {
                this.onEndSetSlpCurrentCartridgeDelegate = new EndOperationDelegate(this.OnEndSetSlpCurrentCartridge);
            }
            if ((this.onSetSlpCurrentCartridgeCompletedDelegate == null)) {
                this.onSetSlpCurrentCartridgeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetSlpCurrentCartridgeCompleted);
            }
            base.InvokeAsync(this.onBeginSetSlpCurrentCartridgeDelegate, new object[] {
                        SlpCurrentCartridge}, this.onEndSetSlpCurrentCartridgeDelegate, this.onSetSlpCurrentCartridgeCompletedDelegate, userState);
        }
        
        public void Open(string EndpointAddress) {
            base.Channel.Open(EndpointAddress);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginOpen(string EndpointAddress, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginOpen(EndpointAddress, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndOpen(System.IAsyncResult result) {
            base.Channel.EndOpen(result);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string EndpointAddress = ((string)(inValues[0]));
            return this.BeginOpen(EndpointAddress, callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            this.EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync(string EndpointAddress) {
            this.OpenAsync(EndpointAddress, null);
        }
        
        public void OpenAsync(string EndpointAddress, object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, new object[] {
                        EndpointAddress}, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        public void Close(string EndpointAddress) {
            base.Channel.Close(EndpointAddress);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginClose(string EndpointAddress, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginClose(EndpointAddress, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndClose(System.IAsyncResult result) {
            base.Channel.EndClose(result);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string EndpointAddress = ((string)(inValues[0]));
            return this.BeginClose(EndpointAddress, callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            this.EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync(string EndpointAddress) {
            this.CloseAsync(EndpointAddress, null);
        }
        
        public void CloseAsync(string EndpointAddress, object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, new object[] {
                        EndpointAddress}, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        public void Claim(int Timeout) {
            base.Channel.Claim(Timeout);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginClaim(int Timeout, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginClaim(Timeout, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndClaim(System.IAsyncResult result) {
            base.Channel.EndClaim(result);
        }
        
        private System.IAsyncResult OnBeginClaim(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Timeout = ((int)(inValues[0]));
            return this.BeginClaim(Timeout, callback, asyncState);
        }
        
        private object[] OnEndClaim(System.IAsyncResult result) {
            this.EndClaim(result);
            return null;
        }
        
        private void OnClaimCompleted(object state) {
            if ((this.ClaimCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ClaimCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ClaimAsync(int Timeout) {
            this.ClaimAsync(Timeout, null);
        }
        
        public void ClaimAsync(int Timeout, object userState) {
            if ((this.onBeginClaimDelegate == null)) {
                this.onBeginClaimDelegate = new BeginOperationDelegate(this.OnBeginClaim);
            }
            if ((this.onEndClaimDelegate == null)) {
                this.onEndClaimDelegate = new EndOperationDelegate(this.OnEndClaim);
            }
            if ((this.onClaimCompletedDelegate == null)) {
                this.onClaimCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnClaimCompleted);
            }
            base.InvokeAsync(this.onBeginClaimDelegate, new object[] {
                        Timeout}, this.onEndClaimDelegate, this.onClaimCompletedDelegate, userState);
        }
        
        public void Release() {
            base.Channel.Release();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRelease(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRelease(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndRelease(System.IAsyncResult result) {
            base.Channel.EndRelease(result);
        }
        
        private System.IAsyncResult OnBeginRelease(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginRelease(callback, asyncState);
        }
        
        private object[] OnEndRelease(System.IAsyncResult result) {
            this.EndRelease(result);
            return null;
        }
        
        private void OnReleaseCompleted(object state) {
            if ((this.ReleaseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReleaseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReleaseAsync() {
            this.ReleaseAsync(null);
        }
        
        public void ReleaseAsync(object userState) {
            if ((this.onBeginReleaseDelegate == null)) {
                this.onBeginReleaseDelegate = new BeginOperationDelegate(this.OnBeginRelease);
            }
            if ((this.onEndReleaseDelegate == null)) {
                this.onEndReleaseDelegate = new EndOperationDelegate(this.OnEndRelease);
            }
            if ((this.onReleaseCompletedDelegate == null)) {
                this.onReleaseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReleaseCompleted);
            }
            base.InvokeAsync(this.onBeginReleaseDelegate, null, this.onEndReleaseDelegate, this.onReleaseCompletedDelegate, userState);
        }
        
        public void CheckHealth(WSPoS.POSPrinterServiceReference.HealthCheckLevel Level) {
            base.Channel.CheckHealth(Level);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCheckHealth(WSPoS.POSPrinterServiceReference.HealthCheckLevel Level, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckHealth(Level, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndCheckHealth(System.IAsyncResult result) {
            base.Channel.EndCheckHealth(result);
        }
        
        private System.IAsyncResult OnBeginCheckHealth(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WSPoS.POSPrinterServiceReference.HealthCheckLevel Level = ((WSPoS.POSPrinterServiceReference.HealthCheckLevel)(inValues[0]));
            return this.BeginCheckHealth(Level, callback, asyncState);
        }
        
        private object[] OnEndCheckHealth(System.IAsyncResult result) {
            this.EndCheckHealth(result);
            return null;
        }
        
        private void OnCheckHealthCompleted(object state) {
            if ((this.CheckHealthCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckHealthCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckHealthAsync(WSPoS.POSPrinterServiceReference.HealthCheckLevel Level) {
            this.CheckHealthAsync(Level, null);
        }
        
        public void CheckHealthAsync(WSPoS.POSPrinterServiceReference.HealthCheckLevel Level, object userState) {
            if ((this.onBeginCheckHealthDelegate == null)) {
                this.onBeginCheckHealthDelegate = new BeginOperationDelegate(this.OnBeginCheckHealth);
            }
            if ((this.onEndCheckHealthDelegate == null)) {
                this.onEndCheckHealthDelegate = new EndOperationDelegate(this.OnEndCheckHealth);
            }
            if ((this.onCheckHealthCompletedDelegate == null)) {
                this.onCheckHealthCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckHealthCompleted);
            }
            base.InvokeAsync(this.onBeginCheckHealthDelegate, new object[] {
                        Level}, this.onEndCheckHealthDelegate, this.onCheckHealthCompletedDelegate, userState);
        }
        
        public void ClearOutput() {
            base.Channel.ClearOutput();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginClearOutput(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginClearOutput(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndClearOutput(System.IAsyncResult result) {
            base.Channel.EndClearOutput(result);
        }
        
        private System.IAsyncResult OnBeginClearOutput(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginClearOutput(callback, asyncState);
        }
        
        private object[] OnEndClearOutput(System.IAsyncResult result) {
            this.EndClearOutput(result);
            return null;
        }
        
        private void OnClearOutputCompleted(object state) {
            if ((this.ClearOutputCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ClearOutputCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ClearOutputAsync() {
            this.ClearOutputAsync(null);
        }
        
        public void ClearOutputAsync(object userState) {
            if ((this.onBeginClearOutputDelegate == null)) {
                this.onBeginClearOutputDelegate = new BeginOperationDelegate(this.OnBeginClearOutput);
            }
            if ((this.onEndClearOutputDelegate == null)) {
                this.onEndClearOutputDelegate = new EndOperationDelegate(this.OnEndClearOutput);
            }
            if ((this.onClearOutputCompletedDelegate == null)) {
                this.onClearOutputCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnClearOutputCompleted);
            }
            base.InvokeAsync(this.onBeginClearOutputDelegate, null, this.onEndClearOutputDelegate, this.onClearOutputCompletedDelegate, userState);
        }
        
        public WSPoS.POSPrinterServiceReference.DirectIOData DirectIO(int Command, int Data, object Obj) {
            return base.Channel.DirectIO(Command, Data, Obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDirectIO(int Command, int Data, object Obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDirectIO(Command, Data, Obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WSPoS.POSPrinterServiceReference.DirectIOData EndDirectIO(System.IAsyncResult result) {
            return base.Channel.EndDirectIO(result);
        }
        
        private System.IAsyncResult OnBeginDirectIO(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Command = ((int)(inValues[0]));
            int Data = ((int)(inValues[1]));
            object Obj = ((object)(inValues[2]));
            return this.BeginDirectIO(Command, Data, Obj, callback, asyncState);
        }
        
        private object[] OnEndDirectIO(System.IAsyncResult result) {
            WSPoS.POSPrinterServiceReference.DirectIOData retVal = this.EndDirectIO(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDirectIOCompleted(object state) {
            if ((this.DirectIOCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DirectIOCompleted(this, new DirectIOCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DirectIOAsync(int Command, int Data, object Obj) {
            this.DirectIOAsync(Command, Data, Obj, null);
        }
        
        public void DirectIOAsync(int Command, int Data, object Obj, object userState) {
            if ((this.onBeginDirectIODelegate == null)) {
                this.onBeginDirectIODelegate = new BeginOperationDelegate(this.OnBeginDirectIO);
            }
            if ((this.onEndDirectIODelegate == null)) {
                this.onEndDirectIODelegate = new EndOperationDelegate(this.OnEndDirectIO);
            }
            if ((this.onDirectIOCompletedDelegate == null)) {
                this.onDirectIOCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDirectIOCompleted);
            }
            base.InvokeAsync(this.onBeginDirectIODelegate, new object[] {
                        Command,
                        Data,
                        Obj}, this.onEndDirectIODelegate, this.onDirectIOCompletedDelegate, userState);
        }
        
        public WSPoS.POSPrinterServiceReference.CompareFirmwareResult CompareFirmwareVersion(string FirmwareFileName) {
            return base.Channel.CompareFirmwareVersion(FirmwareFileName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCompareFirmwareVersion(string FirmwareFileName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCompareFirmwareVersion(FirmwareFileName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WSPoS.POSPrinterServiceReference.CompareFirmwareResult EndCompareFirmwareVersion(System.IAsyncResult result) {
            return base.Channel.EndCompareFirmwareVersion(result);
        }
        
        private System.IAsyncResult OnBeginCompareFirmwareVersion(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string FirmwareFileName = ((string)(inValues[0]));
            return this.BeginCompareFirmwareVersion(FirmwareFileName, callback, asyncState);
        }
        
        private object[] OnEndCompareFirmwareVersion(System.IAsyncResult result) {
            WSPoS.POSPrinterServiceReference.CompareFirmwareResult retVal = this.EndCompareFirmwareVersion(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCompareFirmwareVersionCompleted(object state) {
            if ((this.CompareFirmwareVersionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CompareFirmwareVersionCompleted(this, new CompareFirmwareVersionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CompareFirmwareVersionAsync(string FirmwareFileName) {
            this.CompareFirmwareVersionAsync(FirmwareFileName, null);
        }
        
        public void CompareFirmwareVersionAsync(string FirmwareFileName, object userState) {
            if ((this.onBeginCompareFirmwareVersionDelegate == null)) {
                this.onBeginCompareFirmwareVersionDelegate = new BeginOperationDelegate(this.OnBeginCompareFirmwareVersion);
            }
            if ((this.onEndCompareFirmwareVersionDelegate == null)) {
                this.onEndCompareFirmwareVersionDelegate = new EndOperationDelegate(this.OnEndCompareFirmwareVersion);
            }
            if ((this.onCompareFirmwareVersionCompletedDelegate == null)) {
                this.onCompareFirmwareVersionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCompareFirmwareVersionCompleted);
            }
            base.InvokeAsync(this.onBeginCompareFirmwareVersionDelegate, new object[] {
                        FirmwareFileName}, this.onEndCompareFirmwareVersionDelegate, this.onCompareFirmwareVersionCompletedDelegate, userState);
        }
        
        public void ResetStatistics(WSPoS.POSPrinterServiceReference.StatisticList StatisticsBuffer) {
            base.Channel.ResetStatistics(StatisticsBuffer);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginResetStatistics(WSPoS.POSPrinterServiceReference.StatisticList StatisticsBuffer, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginResetStatistics(StatisticsBuffer, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndResetStatistics(System.IAsyncResult result) {
            base.Channel.EndResetStatistics(result);
        }
        
        private System.IAsyncResult OnBeginResetStatistics(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WSPoS.POSPrinterServiceReference.StatisticList StatisticsBuffer = ((WSPoS.POSPrinterServiceReference.StatisticList)(inValues[0]));
            return this.BeginResetStatistics(StatisticsBuffer, callback, asyncState);
        }
        
        private object[] OnEndResetStatistics(System.IAsyncResult result) {
            this.EndResetStatistics(result);
            return null;
        }
        
        private void OnResetStatisticsCompleted(object state) {
            if ((this.ResetStatisticsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ResetStatisticsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ResetStatisticsAsync(WSPoS.POSPrinterServiceReference.StatisticList StatisticsBuffer) {
            this.ResetStatisticsAsync(StatisticsBuffer, null);
        }
        
        public void ResetStatisticsAsync(WSPoS.POSPrinterServiceReference.StatisticList StatisticsBuffer, object userState) {
            if ((this.onBeginResetStatisticsDelegate == null)) {
                this.onBeginResetStatisticsDelegate = new BeginOperationDelegate(this.OnBeginResetStatistics);
            }
            if ((this.onEndResetStatisticsDelegate == null)) {
                this.onEndResetStatisticsDelegate = new EndOperationDelegate(this.OnEndResetStatistics);
            }
            if ((this.onResetStatisticsCompletedDelegate == null)) {
                this.onResetStatisticsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnResetStatisticsCompleted);
            }
            base.InvokeAsync(this.onBeginResetStatisticsDelegate, new object[] {
                        StatisticsBuffer}, this.onEndResetStatisticsDelegate, this.onResetStatisticsCompletedDelegate, userState);
        }
        
        public string RetrieveStatistics(WSPoS.POSPrinterServiceReference.StatisticList StatisticsBuffer) {
            return base.Channel.RetrieveStatistics(StatisticsBuffer);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRetrieveStatistics(WSPoS.POSPrinterServiceReference.StatisticList StatisticsBuffer, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveStatistics(StatisticsBuffer, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndRetrieveStatistics(System.IAsyncResult result) {
            return base.Channel.EndRetrieveStatistics(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveStatistics(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WSPoS.POSPrinterServiceReference.StatisticList StatisticsBuffer = ((WSPoS.POSPrinterServiceReference.StatisticList)(inValues[0]));
            return this.BeginRetrieveStatistics(StatisticsBuffer, callback, asyncState);
        }
        
        private object[] OnEndRetrieveStatistics(System.IAsyncResult result) {
            string retVal = this.EndRetrieveStatistics(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveStatisticsCompleted(object state) {
            if ((this.RetrieveStatisticsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveStatisticsCompleted(this, new RetrieveStatisticsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveStatisticsAsync(WSPoS.POSPrinterServiceReference.StatisticList StatisticsBuffer) {
            this.RetrieveStatisticsAsync(StatisticsBuffer, null);
        }
        
        public void RetrieveStatisticsAsync(WSPoS.POSPrinterServiceReference.StatisticList StatisticsBuffer, object userState) {
            if ((this.onBeginRetrieveStatisticsDelegate == null)) {
                this.onBeginRetrieveStatisticsDelegate = new BeginOperationDelegate(this.OnBeginRetrieveStatistics);
            }
            if ((this.onEndRetrieveStatisticsDelegate == null)) {
                this.onEndRetrieveStatisticsDelegate = new EndOperationDelegate(this.OnEndRetrieveStatistics);
            }
            if ((this.onRetrieveStatisticsCompletedDelegate == null)) {
                this.onRetrieveStatisticsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveStatisticsCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveStatisticsDelegate, new object[] {
                        StatisticsBuffer}, this.onEndRetrieveStatisticsDelegate, this.onRetrieveStatisticsCompletedDelegate, userState);
        }
        
        public void UpdateFirmware(string FirmwareFileName) {
            base.Channel.UpdateFirmware(FirmwareFileName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateFirmware(string FirmwareFileName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateFirmware(FirmwareFileName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateFirmware(System.IAsyncResult result) {
            base.Channel.EndUpdateFirmware(result);
        }
        
        private System.IAsyncResult OnBeginUpdateFirmware(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string FirmwareFileName = ((string)(inValues[0]));
            return this.BeginUpdateFirmware(FirmwareFileName, callback, asyncState);
        }
        
        private object[] OnEndUpdateFirmware(System.IAsyncResult result) {
            this.EndUpdateFirmware(result);
            return null;
        }
        
        private void OnUpdateFirmwareCompleted(object state) {
            if ((this.UpdateFirmwareCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateFirmwareCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateFirmwareAsync(string FirmwareFileName) {
            this.UpdateFirmwareAsync(FirmwareFileName, null);
        }
        
        public void UpdateFirmwareAsync(string FirmwareFileName, object userState) {
            if ((this.onBeginUpdateFirmwareDelegate == null)) {
                this.onBeginUpdateFirmwareDelegate = new BeginOperationDelegate(this.OnBeginUpdateFirmware);
            }
            if ((this.onEndUpdateFirmwareDelegate == null)) {
                this.onEndUpdateFirmwareDelegate = new EndOperationDelegate(this.OnEndUpdateFirmware);
            }
            if ((this.onUpdateFirmwareCompletedDelegate == null)) {
                this.onUpdateFirmwareCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateFirmwareCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateFirmwareDelegate, new object[] {
                        FirmwareFileName}, this.onEndUpdateFirmwareDelegate, this.onUpdateFirmwareCompletedDelegate, userState);
        }
        
        public void UpdateStatistics(WSPoS.POSPrinterServiceReference.StatisticList StatisticsBuffer) {
            base.Channel.UpdateStatistics(StatisticsBuffer);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateStatistics(WSPoS.POSPrinterServiceReference.StatisticList StatisticsBuffer, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateStatistics(StatisticsBuffer, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateStatistics(System.IAsyncResult result) {
            base.Channel.EndUpdateStatistics(result);
        }
        
        private System.IAsyncResult OnBeginUpdateStatistics(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WSPoS.POSPrinterServiceReference.StatisticList StatisticsBuffer = ((WSPoS.POSPrinterServiceReference.StatisticList)(inValues[0]));
            return this.BeginUpdateStatistics(StatisticsBuffer, callback, asyncState);
        }
        
        private object[] OnEndUpdateStatistics(System.IAsyncResult result) {
            this.EndUpdateStatistics(result);
            return null;
        }
        
        private void OnUpdateStatisticsCompleted(object state) {
            if ((this.UpdateStatisticsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateStatisticsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateStatisticsAsync(WSPoS.POSPrinterServiceReference.StatisticList StatisticsBuffer) {
            this.UpdateStatisticsAsync(StatisticsBuffer, null);
        }
        
        public void UpdateStatisticsAsync(WSPoS.POSPrinterServiceReference.StatisticList StatisticsBuffer, object userState) {
            if ((this.onBeginUpdateStatisticsDelegate == null)) {
                this.onBeginUpdateStatisticsDelegate = new BeginOperationDelegate(this.OnBeginUpdateStatistics);
            }
            if ((this.onEndUpdateStatisticsDelegate == null)) {
                this.onEndUpdateStatisticsDelegate = new EndOperationDelegate(this.OnEndUpdateStatistics);
            }
            if ((this.onUpdateStatisticsCompletedDelegate == null)) {
                this.onUpdateStatisticsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateStatisticsCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateStatisticsDelegate, new object[] {
                        StatisticsBuffer}, this.onEndUpdateStatisticsDelegate, this.onUpdateStatisticsCompletedDelegate, userState);
        }
        
        public void BeginInsertion(int Timeout) {
            base.Channel.BeginInsertion(Timeout);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginBeginInsertion(int Timeout, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBeginInsertion(Timeout, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndBeginInsertion(System.IAsyncResult result) {
            base.Channel.EndBeginInsertion(result);
        }
        
        private System.IAsyncResult OnBeginBeginInsertion(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Timeout = ((int)(inValues[0]));
            return this.BeginBeginInsertion(Timeout, callback, asyncState);
        }
        
        private object[] OnEndBeginInsertion(System.IAsyncResult result) {
            this.EndBeginInsertion(result);
            return null;
        }
        
        private void OnBeginInsertionCompleted(object state) {
            if ((this.BeginInsertionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BeginInsertionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BeginInsertionAsync(int Timeout) {
            this.BeginInsertionAsync(Timeout, null);
        }
        
        public void BeginInsertionAsync(int Timeout, object userState) {
            if ((this.onBeginBeginInsertionDelegate == null)) {
                this.onBeginBeginInsertionDelegate = new BeginOperationDelegate(this.OnBeginBeginInsertion);
            }
            if ((this.onEndBeginInsertionDelegate == null)) {
                this.onEndBeginInsertionDelegate = new EndOperationDelegate(this.OnEndBeginInsertion);
            }
            if ((this.onBeginInsertionCompletedDelegate == null)) {
                this.onBeginInsertionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBeginInsertionCompleted);
            }
            base.InvokeAsync(this.onBeginBeginInsertionDelegate, new object[] {
                        Timeout}, this.onEndBeginInsertionDelegate, this.onBeginInsertionCompletedDelegate, userState);
        }
        
        public void BeginRemoval(int Timeout) {
            base.Channel.BeginRemoval(Timeout);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginBeginRemoval(int Timeout, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBeginRemoval(Timeout, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndBeginRemoval(System.IAsyncResult result) {
            base.Channel.EndBeginRemoval(result);
        }
        
        private System.IAsyncResult OnBeginBeginRemoval(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Timeout = ((int)(inValues[0]));
            return this.BeginBeginRemoval(Timeout, callback, asyncState);
        }
        
        private object[] OnEndBeginRemoval(System.IAsyncResult result) {
            this.EndBeginRemoval(result);
            return null;
        }
        
        private void OnBeginRemovalCompleted(object state) {
            if ((this.BeginRemovalCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BeginRemovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BeginRemovalAsync(int Timeout) {
            this.BeginRemovalAsync(Timeout, null);
        }
        
        public void BeginRemovalAsync(int Timeout, object userState) {
            if ((this.onBeginBeginRemovalDelegate == null)) {
                this.onBeginBeginRemovalDelegate = new BeginOperationDelegate(this.OnBeginBeginRemoval);
            }
            if ((this.onEndBeginRemovalDelegate == null)) {
                this.onEndBeginRemovalDelegate = new EndOperationDelegate(this.OnEndBeginRemoval);
            }
            if ((this.onBeginRemovalCompletedDelegate == null)) {
                this.onBeginRemovalCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBeginRemovalCompleted);
            }
            base.InvokeAsync(this.onBeginBeginRemovalDelegate, new object[] {
                        Timeout}, this.onEndBeginRemovalDelegate, this.onBeginRemovalCompletedDelegate, userState);
        }
        
        public void ChangePrintSide(WSPoS.POSPrinterServiceReference.PrinterSide Side) {
            base.Channel.ChangePrintSide(Side);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginChangePrintSide(WSPoS.POSPrinterServiceReference.PrinterSide Side, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginChangePrintSide(Side, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndChangePrintSide(System.IAsyncResult result) {
            base.Channel.EndChangePrintSide(result);
        }
        
        private System.IAsyncResult OnBeginChangePrintSide(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WSPoS.POSPrinterServiceReference.PrinterSide Side = ((WSPoS.POSPrinterServiceReference.PrinterSide)(inValues[0]));
            return this.BeginChangePrintSide(Side, callback, asyncState);
        }
        
        private object[] OnEndChangePrintSide(System.IAsyncResult result) {
            this.EndChangePrintSide(result);
            return null;
        }
        
        private void OnChangePrintSideCompleted(object state) {
            if ((this.ChangePrintSideCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ChangePrintSideCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ChangePrintSideAsync(WSPoS.POSPrinterServiceReference.PrinterSide Side) {
            this.ChangePrintSideAsync(Side, null);
        }
        
        public void ChangePrintSideAsync(WSPoS.POSPrinterServiceReference.PrinterSide Side, object userState) {
            if ((this.onBeginChangePrintSideDelegate == null)) {
                this.onBeginChangePrintSideDelegate = new BeginOperationDelegate(this.OnBeginChangePrintSide);
            }
            if ((this.onEndChangePrintSideDelegate == null)) {
                this.onEndChangePrintSideDelegate = new EndOperationDelegate(this.OnEndChangePrintSide);
            }
            if ((this.onChangePrintSideCompletedDelegate == null)) {
                this.onChangePrintSideCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnChangePrintSideCompleted);
            }
            base.InvokeAsync(this.onBeginChangePrintSideDelegate, new object[] {
                        Side}, this.onEndChangePrintSideDelegate, this.onChangePrintSideCompletedDelegate, userState);
        }
        
        public void ClearPrintArea() {
            base.Channel.ClearPrintArea();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginClearPrintArea(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginClearPrintArea(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndClearPrintArea(System.IAsyncResult result) {
            base.Channel.EndClearPrintArea(result);
        }
        
        private System.IAsyncResult OnBeginClearPrintArea(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginClearPrintArea(callback, asyncState);
        }
        
        private object[] OnEndClearPrintArea(System.IAsyncResult result) {
            this.EndClearPrintArea(result);
            return null;
        }
        
        private void OnClearPrintAreaCompleted(object state) {
            if ((this.ClearPrintAreaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ClearPrintAreaCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ClearPrintAreaAsync() {
            this.ClearPrintAreaAsync(null);
        }
        
        public void ClearPrintAreaAsync(object userState) {
            if ((this.onBeginClearPrintAreaDelegate == null)) {
                this.onBeginClearPrintAreaDelegate = new BeginOperationDelegate(this.OnBeginClearPrintArea);
            }
            if ((this.onEndClearPrintAreaDelegate == null)) {
                this.onEndClearPrintAreaDelegate = new EndOperationDelegate(this.OnEndClearPrintArea);
            }
            if ((this.onClearPrintAreaCompletedDelegate == null)) {
                this.onClearPrintAreaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnClearPrintAreaCompleted);
            }
            base.InvokeAsync(this.onBeginClearPrintAreaDelegate, null, this.onEndClearPrintAreaDelegate, this.onClearPrintAreaCompletedDelegate, userState);
        }
        
        public void CutPaper(int Percentage) {
            base.Channel.CutPaper(Percentage);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCutPaper(int Percentage, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCutPaper(Percentage, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndCutPaper(System.IAsyncResult result) {
            base.Channel.EndCutPaper(result);
        }
        
        private System.IAsyncResult OnBeginCutPaper(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Percentage = ((int)(inValues[0]));
            return this.BeginCutPaper(Percentage, callback, asyncState);
        }
        
        private object[] OnEndCutPaper(System.IAsyncResult result) {
            this.EndCutPaper(result);
            return null;
        }
        
        private void OnCutPaperCompleted(object state) {
            if ((this.CutPaperCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CutPaperCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CutPaperAsync(int Percentage) {
            this.CutPaperAsync(Percentage, null);
        }
        
        public void CutPaperAsync(int Percentage, object userState) {
            if ((this.onBeginCutPaperDelegate == null)) {
                this.onBeginCutPaperDelegate = new BeginOperationDelegate(this.OnBeginCutPaper);
            }
            if ((this.onEndCutPaperDelegate == null)) {
                this.onEndCutPaperDelegate = new EndOperationDelegate(this.OnEndCutPaper);
            }
            if ((this.onCutPaperCompletedDelegate == null)) {
                this.onCutPaperCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCutPaperCompleted);
            }
            base.InvokeAsync(this.onBeginCutPaperDelegate, new object[] {
                        Percentage}, this.onEndCutPaperDelegate, this.onCutPaperCompletedDelegate, userState);
        }
        
        public void DrawRuledLine(WSPoS.POSPrinterServiceReference.PrinterStation Station, WSPoS.POSPrinterServiceReference.PositionList PositionList, int LineDirection, int LineWidth, WSPoS.POSPrinterServiceReference.PrinterLineStyle LineStyle, int LineColor) {
            base.Channel.DrawRuledLine(Station, PositionList, LineDirection, LineWidth, LineStyle, LineColor);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDrawRuledLine(WSPoS.POSPrinterServiceReference.PrinterStation Station, WSPoS.POSPrinterServiceReference.PositionList PositionList, int LineDirection, int LineWidth, WSPoS.POSPrinterServiceReference.PrinterLineStyle LineStyle, int LineColor, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDrawRuledLine(Station, PositionList, LineDirection, LineWidth, LineStyle, LineColor, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDrawRuledLine(System.IAsyncResult result) {
            base.Channel.EndDrawRuledLine(result);
        }
        
        private System.IAsyncResult OnBeginDrawRuledLine(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WSPoS.POSPrinterServiceReference.PrinterStation Station = ((WSPoS.POSPrinterServiceReference.PrinterStation)(inValues[0]));
            WSPoS.POSPrinterServiceReference.PositionList PositionList = ((WSPoS.POSPrinterServiceReference.PositionList)(inValues[1]));
            int LineDirection = ((int)(inValues[2]));
            int LineWidth = ((int)(inValues[3]));
            WSPoS.POSPrinterServiceReference.PrinterLineStyle LineStyle = ((WSPoS.POSPrinterServiceReference.PrinterLineStyle)(inValues[4]));
            int LineColor = ((int)(inValues[5]));
            return this.BeginDrawRuledLine(Station, PositionList, LineDirection, LineWidth, LineStyle, LineColor, callback, asyncState);
        }
        
        private object[] OnEndDrawRuledLine(System.IAsyncResult result) {
            this.EndDrawRuledLine(result);
            return null;
        }
        
        private void OnDrawRuledLineCompleted(object state) {
            if ((this.DrawRuledLineCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DrawRuledLineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DrawRuledLineAsync(WSPoS.POSPrinterServiceReference.PrinterStation Station, WSPoS.POSPrinterServiceReference.PositionList PositionList, int LineDirection, int LineWidth, WSPoS.POSPrinterServiceReference.PrinterLineStyle LineStyle, int LineColor) {
            this.DrawRuledLineAsync(Station, PositionList, LineDirection, LineWidth, LineStyle, LineColor, null);
        }
        
        public void DrawRuledLineAsync(WSPoS.POSPrinterServiceReference.PrinterStation Station, WSPoS.POSPrinterServiceReference.PositionList PositionList, int LineDirection, int LineWidth, WSPoS.POSPrinterServiceReference.PrinterLineStyle LineStyle, int LineColor, object userState) {
            if ((this.onBeginDrawRuledLineDelegate == null)) {
                this.onBeginDrawRuledLineDelegate = new BeginOperationDelegate(this.OnBeginDrawRuledLine);
            }
            if ((this.onEndDrawRuledLineDelegate == null)) {
                this.onEndDrawRuledLineDelegate = new EndOperationDelegate(this.OnEndDrawRuledLine);
            }
            if ((this.onDrawRuledLineCompletedDelegate == null)) {
                this.onDrawRuledLineCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDrawRuledLineCompleted);
            }
            base.InvokeAsync(this.onBeginDrawRuledLineDelegate, new object[] {
                        Station,
                        PositionList,
                        LineDirection,
                        LineWidth,
                        LineStyle,
                        LineColor}, this.onEndDrawRuledLineDelegate, this.onDrawRuledLineCompletedDelegate, userState);
        }
        
        public bool GetJrnNearEnd() {
            return base.Channel.GetJrnNearEnd();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetJrnNearEnd(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetJrnNearEnd(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetJrnNearEnd(System.IAsyncResult result) {
            return base.Channel.EndGetJrnNearEnd(result);
        }
        
        private System.IAsyncResult OnBeginGetJrnNearEnd(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetJrnNearEnd(callback, asyncState);
        }
        
        private object[] OnEndGetJrnNearEnd(System.IAsyncResult result) {
            bool retVal = this.EndGetJrnNearEnd(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetJrnNearEndCompleted(object state) {
            if ((this.GetJrnNearEndCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetJrnNearEndCompleted(this, new GetJrnNearEndCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetJrnNearEndAsync() {
            this.GetJrnNearEndAsync(null);
        }
        
        public void GetJrnNearEndAsync(object userState) {
            if ((this.onBeginGetJrnNearEndDelegate == null)) {
                this.onBeginGetJrnNearEndDelegate = new BeginOperationDelegate(this.OnBeginGetJrnNearEnd);
            }
            if ((this.onEndGetJrnNearEndDelegate == null)) {
                this.onEndGetJrnNearEndDelegate = new EndOperationDelegate(this.OnEndGetJrnNearEnd);
            }
            if ((this.onGetJrnNearEndCompletedDelegate == null)) {
                this.onGetJrnNearEndCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetJrnNearEndCompleted);
            }
            base.InvokeAsync(this.onBeginGetJrnNearEndDelegate, null, this.onEndGetJrnNearEndDelegate, this.onGetJrnNearEndCompletedDelegate, userState);
        }
        
        public WSPoS.POSPrinterServiceReference.PrinterCartridgeStates GetJrnCartridgeState() {
            return base.Channel.GetJrnCartridgeState();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetJrnCartridgeState(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetJrnCartridgeState(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WSPoS.POSPrinterServiceReference.PrinterCartridgeStates EndGetJrnCartridgeState(System.IAsyncResult result) {
            return base.Channel.EndGetJrnCartridgeState(result);
        }
        
        private System.IAsyncResult OnBeginGetJrnCartridgeState(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetJrnCartridgeState(callback, asyncState);
        }
        
        private object[] OnEndGetJrnCartridgeState(System.IAsyncResult result) {
            WSPoS.POSPrinterServiceReference.PrinterCartridgeStates retVal = this.EndGetJrnCartridgeState(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetJrnCartridgeStateCompleted(object state) {
            if ((this.GetJrnCartridgeStateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetJrnCartridgeStateCompleted(this, new GetJrnCartridgeStateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetJrnCartridgeStateAsync() {
            this.GetJrnCartridgeStateAsync(null);
        }
        
        public void GetJrnCartridgeStateAsync(object userState) {
            if ((this.onBeginGetJrnCartridgeStateDelegate == null)) {
                this.onBeginGetJrnCartridgeStateDelegate = new BeginOperationDelegate(this.OnBeginGetJrnCartridgeState);
            }
            if ((this.onEndGetJrnCartridgeStateDelegate == null)) {
                this.onEndGetJrnCartridgeStateDelegate = new EndOperationDelegate(this.OnEndGetJrnCartridgeState);
            }
            if ((this.onGetJrnCartridgeStateCompletedDelegate == null)) {
                this.onGetJrnCartridgeStateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetJrnCartridgeStateCompleted);
            }
            base.InvokeAsync(this.onBeginGetJrnCartridgeStateDelegate, null, this.onEndGetJrnCartridgeStateDelegate, this.onGetJrnCartridgeStateCompletedDelegate, userState);
        }
        
        public int GetJrnCurrentCartridge() {
            return base.Channel.GetJrnCurrentCartridge();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetJrnCurrentCartridge(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetJrnCurrentCartridge(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetJrnCurrentCartridge(System.IAsyncResult result) {
            return base.Channel.EndGetJrnCurrentCartridge(result);
        }
        
        private System.IAsyncResult OnBeginGetJrnCurrentCartridge(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetJrnCurrentCartridge(callback, asyncState);
        }
        
        private object[] OnEndGetJrnCurrentCartridge(System.IAsyncResult result) {
            int retVal = this.EndGetJrnCurrentCartridge(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetJrnCurrentCartridgeCompleted(object state) {
            if ((this.GetJrnCurrentCartridgeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetJrnCurrentCartridgeCompleted(this, new GetJrnCurrentCartridgeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetJrnCurrentCartridgeAsync() {
            this.GetJrnCurrentCartridgeAsync(null);
        }
        
        public void GetJrnCurrentCartridgeAsync(object userState) {
            if ((this.onBeginGetJrnCurrentCartridgeDelegate == null)) {
                this.onBeginGetJrnCurrentCartridgeDelegate = new BeginOperationDelegate(this.OnBeginGetJrnCurrentCartridge);
            }
            if ((this.onEndGetJrnCurrentCartridgeDelegate == null)) {
                this.onEndGetJrnCurrentCartridgeDelegate = new EndOperationDelegate(this.OnEndGetJrnCurrentCartridge);
            }
            if ((this.onGetJrnCurrentCartridgeCompletedDelegate == null)) {
                this.onGetJrnCurrentCartridgeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetJrnCurrentCartridgeCompleted);
            }
            base.InvokeAsync(this.onBeginGetJrnCurrentCartridgeDelegate, null, this.onEndGetJrnCurrentCartridgeDelegate, this.onGetJrnCurrentCartridgeCompletedDelegate, userState);
        }
        
        public void SetJrnCurrentCartridge(int JrnCurrentCartridge) {
            base.Channel.SetJrnCurrentCartridge(JrnCurrentCartridge);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetJrnCurrentCartridge(int JrnCurrentCartridge, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetJrnCurrentCartridge(JrnCurrentCartridge, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetJrnCurrentCartridge(System.IAsyncResult result) {
            base.Channel.EndSetJrnCurrentCartridge(result);
        }
        
        private System.IAsyncResult OnBeginSetJrnCurrentCartridge(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int JrnCurrentCartridge = ((int)(inValues[0]));
            return this.BeginSetJrnCurrentCartridge(JrnCurrentCartridge, callback, asyncState);
        }
        
        private object[] OnEndSetJrnCurrentCartridge(System.IAsyncResult result) {
            this.EndSetJrnCurrentCartridge(result);
            return null;
        }
        
        private void OnSetJrnCurrentCartridgeCompleted(object state) {
            if ((this.SetJrnCurrentCartridgeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetJrnCurrentCartridgeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetJrnCurrentCartridgeAsync(int JrnCurrentCartridge) {
            this.SetJrnCurrentCartridgeAsync(JrnCurrentCartridge, null);
        }
        
        public void SetJrnCurrentCartridgeAsync(int JrnCurrentCartridge, object userState) {
            if ((this.onBeginSetJrnCurrentCartridgeDelegate == null)) {
                this.onBeginSetJrnCurrentCartridgeDelegate = new BeginOperationDelegate(this.OnBeginSetJrnCurrentCartridge);
            }
            if ((this.onEndSetJrnCurrentCartridgeDelegate == null)) {
                this.onEndSetJrnCurrentCartridgeDelegate = new EndOperationDelegate(this.OnEndSetJrnCurrentCartridge);
            }
            if ((this.onSetJrnCurrentCartridgeCompletedDelegate == null)) {
                this.onSetJrnCurrentCartridgeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetJrnCurrentCartridgeCompleted);
            }
            base.InvokeAsync(this.onBeginSetJrnCurrentCartridgeDelegate, new object[] {
                        JrnCurrentCartridge}, this.onEndSetJrnCurrentCartridgeDelegate, this.onSetJrnCurrentCartridgeCompletedDelegate, userState);
        }
        
        public int GetRecLineChars() {
            return base.Channel.GetRecLineChars();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRecLineChars(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRecLineChars(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetRecLineChars(System.IAsyncResult result) {
            return base.Channel.EndGetRecLineChars(result);
        }
        
        private System.IAsyncResult OnBeginGetRecLineChars(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetRecLineChars(callback, asyncState);
        }
        
        private object[] OnEndGetRecLineChars(System.IAsyncResult result) {
            int retVal = this.EndGetRecLineChars(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRecLineCharsCompleted(object state) {
            if ((this.GetRecLineCharsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRecLineCharsCompleted(this, new GetRecLineCharsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRecLineCharsAsync() {
            this.GetRecLineCharsAsync(null);
        }
        
        public void GetRecLineCharsAsync(object userState) {
            if ((this.onBeginGetRecLineCharsDelegate == null)) {
                this.onBeginGetRecLineCharsDelegate = new BeginOperationDelegate(this.OnBeginGetRecLineChars);
            }
            if ((this.onEndGetRecLineCharsDelegate == null)) {
                this.onEndGetRecLineCharsDelegate = new EndOperationDelegate(this.OnEndGetRecLineChars);
            }
            if ((this.onGetRecLineCharsCompletedDelegate == null)) {
                this.onGetRecLineCharsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRecLineCharsCompleted);
            }
            base.InvokeAsync(this.onBeginGetRecLineCharsDelegate, null, this.onEndGetRecLineCharsDelegate, this.onGetRecLineCharsCompletedDelegate, userState);
        }
        
        public void SetRecLineChars(int RecLineChars) {
            base.Channel.SetRecLineChars(RecLineChars);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetRecLineChars(int RecLineChars, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetRecLineChars(RecLineChars, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetRecLineChars(System.IAsyncResult result) {
            base.Channel.EndSetRecLineChars(result);
        }
        
        private System.IAsyncResult OnBeginSetRecLineChars(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int RecLineChars = ((int)(inValues[0]));
            return this.BeginSetRecLineChars(RecLineChars, callback, asyncState);
        }
        
        private object[] OnEndSetRecLineChars(System.IAsyncResult result) {
            this.EndSetRecLineChars(result);
            return null;
        }
        
        private void OnSetRecLineCharsCompleted(object state) {
            if ((this.SetRecLineCharsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetRecLineCharsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetRecLineCharsAsync(int RecLineChars) {
            this.SetRecLineCharsAsync(RecLineChars, null);
        }
        
        public void SetRecLineCharsAsync(int RecLineChars, object userState) {
            if ((this.onBeginSetRecLineCharsDelegate == null)) {
                this.onBeginSetRecLineCharsDelegate = new BeginOperationDelegate(this.OnBeginSetRecLineChars);
            }
            if ((this.onEndSetRecLineCharsDelegate == null)) {
                this.onEndSetRecLineCharsDelegate = new EndOperationDelegate(this.OnEndSetRecLineChars);
            }
            if ((this.onSetRecLineCharsCompletedDelegate == null)) {
                this.onSetRecLineCharsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetRecLineCharsCompleted);
            }
            base.InvokeAsync(this.onBeginSetRecLineCharsDelegate, new object[] {
                        RecLineChars}, this.onEndSetRecLineCharsDelegate, this.onSetRecLineCharsCompletedDelegate, userState);
        }
        
        public WSPoS.POSPrinterServiceReference.LineCharsList GetRecLineCharsList() {
            return base.Channel.GetRecLineCharsList();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRecLineCharsList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRecLineCharsList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WSPoS.POSPrinterServiceReference.LineCharsList EndGetRecLineCharsList(System.IAsyncResult result) {
            return base.Channel.EndGetRecLineCharsList(result);
        }
        
        private System.IAsyncResult OnBeginGetRecLineCharsList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetRecLineCharsList(callback, asyncState);
        }
        
        private object[] OnEndGetRecLineCharsList(System.IAsyncResult result) {
            WSPoS.POSPrinterServiceReference.LineCharsList retVal = this.EndGetRecLineCharsList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRecLineCharsListCompleted(object state) {
            if ((this.GetRecLineCharsListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRecLineCharsListCompleted(this, new GetRecLineCharsListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRecLineCharsListAsync() {
            this.GetRecLineCharsListAsync(null);
        }
        
        public void GetRecLineCharsListAsync(object userState) {
            if ((this.onBeginGetRecLineCharsListDelegate == null)) {
                this.onBeginGetRecLineCharsListDelegate = new BeginOperationDelegate(this.OnBeginGetRecLineCharsList);
            }
            if ((this.onEndGetRecLineCharsListDelegate == null)) {
                this.onEndGetRecLineCharsListDelegate = new EndOperationDelegate(this.OnEndGetRecLineCharsList);
            }
            if ((this.onGetRecLineCharsListCompletedDelegate == null)) {
                this.onGetRecLineCharsListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRecLineCharsListCompleted);
            }
            base.InvokeAsync(this.onBeginGetRecLineCharsListDelegate, null, this.onEndGetRecLineCharsListDelegate, this.onGetRecLineCharsListCompletedDelegate, userState);
        }
        
        public int GetRecLineHeight() {
            return base.Channel.GetRecLineHeight();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRecLineHeight(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRecLineHeight(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetRecLineHeight(System.IAsyncResult result) {
            return base.Channel.EndGetRecLineHeight(result);
        }
        
        private System.IAsyncResult OnBeginGetRecLineHeight(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetRecLineHeight(callback, asyncState);
        }
        
        private object[] OnEndGetRecLineHeight(System.IAsyncResult result) {
            int retVal = this.EndGetRecLineHeight(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRecLineHeightCompleted(object state) {
            if ((this.GetRecLineHeightCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRecLineHeightCompleted(this, new GetRecLineHeightCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRecLineHeightAsync() {
            this.GetRecLineHeightAsync(null);
        }
        
        public void GetRecLineHeightAsync(object userState) {
            if ((this.onBeginGetRecLineHeightDelegate == null)) {
                this.onBeginGetRecLineHeightDelegate = new BeginOperationDelegate(this.OnBeginGetRecLineHeight);
            }
            if ((this.onEndGetRecLineHeightDelegate == null)) {
                this.onEndGetRecLineHeightDelegate = new EndOperationDelegate(this.OnEndGetRecLineHeight);
            }
            if ((this.onGetRecLineHeightCompletedDelegate == null)) {
                this.onGetRecLineHeightCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRecLineHeightCompleted);
            }
            base.InvokeAsync(this.onBeginGetRecLineHeightDelegate, null, this.onEndGetRecLineHeightDelegate, this.onGetRecLineHeightCompletedDelegate, userState);
        }
        
        public void SetRecLineHeight(int RecLineHeight) {
            base.Channel.SetRecLineHeight(RecLineHeight);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetRecLineHeight(int RecLineHeight, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetRecLineHeight(RecLineHeight, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetRecLineHeight(System.IAsyncResult result) {
            base.Channel.EndSetRecLineHeight(result);
        }
        
        private System.IAsyncResult OnBeginSetRecLineHeight(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int RecLineHeight = ((int)(inValues[0]));
            return this.BeginSetRecLineHeight(RecLineHeight, callback, asyncState);
        }
        
        private object[] OnEndSetRecLineHeight(System.IAsyncResult result) {
            this.EndSetRecLineHeight(result);
            return null;
        }
        
        private void OnSetRecLineHeightCompleted(object state) {
            if ((this.SetRecLineHeightCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetRecLineHeightCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetRecLineHeightAsync(int RecLineHeight) {
            this.SetRecLineHeightAsync(RecLineHeight, null);
        }
        
        public void SetRecLineHeightAsync(int RecLineHeight, object userState) {
            if ((this.onBeginSetRecLineHeightDelegate == null)) {
                this.onBeginSetRecLineHeightDelegate = new BeginOperationDelegate(this.OnBeginSetRecLineHeight);
            }
            if ((this.onEndSetRecLineHeightDelegate == null)) {
                this.onEndSetRecLineHeightDelegate = new EndOperationDelegate(this.OnEndSetRecLineHeight);
            }
            if ((this.onSetRecLineHeightCompletedDelegate == null)) {
                this.onSetRecLineHeightCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetRecLineHeightCompleted);
            }
            base.InvokeAsync(this.onBeginSetRecLineHeightDelegate, new object[] {
                        RecLineHeight}, this.onEndSetRecLineHeightDelegate, this.onSetRecLineHeightCompletedDelegate, userState);
        }
        
        public int GetRecLineSpacing() {
            return base.Channel.GetRecLineSpacing();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRecLineSpacing(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRecLineSpacing(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetRecLineSpacing(System.IAsyncResult result) {
            return base.Channel.EndGetRecLineSpacing(result);
        }
        
        private System.IAsyncResult OnBeginGetRecLineSpacing(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetRecLineSpacing(callback, asyncState);
        }
        
        private object[] OnEndGetRecLineSpacing(System.IAsyncResult result) {
            int retVal = this.EndGetRecLineSpacing(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRecLineSpacingCompleted(object state) {
            if ((this.GetRecLineSpacingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRecLineSpacingCompleted(this, new GetRecLineSpacingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRecLineSpacingAsync() {
            this.GetRecLineSpacingAsync(null);
        }
        
        public void GetRecLineSpacingAsync(object userState) {
            if ((this.onBeginGetRecLineSpacingDelegate == null)) {
                this.onBeginGetRecLineSpacingDelegate = new BeginOperationDelegate(this.OnBeginGetRecLineSpacing);
            }
            if ((this.onEndGetRecLineSpacingDelegate == null)) {
                this.onEndGetRecLineSpacingDelegate = new EndOperationDelegate(this.OnEndGetRecLineSpacing);
            }
            if ((this.onGetRecLineSpacingCompletedDelegate == null)) {
                this.onGetRecLineSpacingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRecLineSpacingCompleted);
            }
            base.InvokeAsync(this.onBeginGetRecLineSpacingDelegate, null, this.onEndGetRecLineSpacingDelegate, this.onGetRecLineSpacingCompletedDelegate, userState);
        }
        
        public void SetRecLineSpacing(int RecLineSpacing) {
            base.Channel.SetRecLineSpacing(RecLineSpacing);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetRecLineSpacing(int RecLineSpacing, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetRecLineSpacing(RecLineSpacing, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetRecLineSpacing(System.IAsyncResult result) {
            base.Channel.EndSetRecLineSpacing(result);
        }
        
        private System.IAsyncResult OnBeginSetRecLineSpacing(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int RecLineSpacing = ((int)(inValues[0]));
            return this.BeginSetRecLineSpacing(RecLineSpacing, callback, asyncState);
        }
        
        private object[] OnEndSetRecLineSpacing(System.IAsyncResult result) {
            this.EndSetRecLineSpacing(result);
            return null;
        }
        
        private void OnSetRecLineSpacingCompleted(object state) {
            if ((this.SetRecLineSpacingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetRecLineSpacingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetRecLineSpacingAsync(int RecLineSpacing) {
            this.SetRecLineSpacingAsync(RecLineSpacing, null);
        }
        
        public void SetRecLineSpacingAsync(int RecLineSpacing, object userState) {
            if ((this.onBeginSetRecLineSpacingDelegate == null)) {
                this.onBeginSetRecLineSpacingDelegate = new BeginOperationDelegate(this.OnBeginSetRecLineSpacing);
            }
            if ((this.onEndSetRecLineSpacingDelegate == null)) {
                this.onEndSetRecLineSpacingDelegate = new EndOperationDelegate(this.OnEndSetRecLineSpacing);
            }
            if ((this.onSetRecLineSpacingCompletedDelegate == null)) {
                this.onSetRecLineSpacingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetRecLineSpacingCompleted);
            }
            base.InvokeAsync(this.onBeginSetRecLineSpacingDelegate, new object[] {
                        RecLineSpacing}, this.onEndSetRecLineSpacingDelegate, this.onSetRecLineSpacingCompletedDelegate, userState);
        }
        
        public int GetRecLineWidth() {
            return base.Channel.GetRecLineWidth();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRecLineWidth(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRecLineWidth(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetRecLineWidth(System.IAsyncResult result) {
            return base.Channel.EndGetRecLineWidth(result);
        }
        
        private System.IAsyncResult OnBeginGetRecLineWidth(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetRecLineWidth(callback, asyncState);
        }
        
        private object[] OnEndGetRecLineWidth(System.IAsyncResult result) {
            int retVal = this.EndGetRecLineWidth(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRecLineWidthCompleted(object state) {
            if ((this.GetRecLineWidthCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRecLineWidthCompleted(this, new GetRecLineWidthCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRecLineWidthAsync() {
            this.GetRecLineWidthAsync(null);
        }
        
        public void GetRecLineWidthAsync(object userState) {
            if ((this.onBeginGetRecLineWidthDelegate == null)) {
                this.onBeginGetRecLineWidthDelegate = new BeginOperationDelegate(this.OnBeginGetRecLineWidth);
            }
            if ((this.onEndGetRecLineWidthDelegate == null)) {
                this.onEndGetRecLineWidthDelegate = new EndOperationDelegate(this.OnEndGetRecLineWidth);
            }
            if ((this.onGetRecLineWidthCompletedDelegate == null)) {
                this.onGetRecLineWidthCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRecLineWidthCompleted);
            }
            base.InvokeAsync(this.onBeginGetRecLineWidthDelegate, null, this.onEndGetRecLineWidthDelegate, this.onGetRecLineWidthCompletedDelegate, userState);
        }
        
        public bool GetRecLetterQuality() {
            return base.Channel.GetRecLetterQuality();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRecLetterQuality(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRecLetterQuality(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetRecLetterQuality(System.IAsyncResult result) {
            return base.Channel.EndGetRecLetterQuality(result);
        }
        
        private System.IAsyncResult OnBeginGetRecLetterQuality(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetRecLetterQuality(callback, asyncState);
        }
        
        private object[] OnEndGetRecLetterQuality(System.IAsyncResult result) {
            bool retVal = this.EndGetRecLetterQuality(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRecLetterQualityCompleted(object state) {
            if ((this.GetRecLetterQualityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRecLetterQualityCompleted(this, new GetRecLetterQualityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRecLetterQualityAsync() {
            this.GetRecLetterQualityAsync(null);
        }
        
        public void GetRecLetterQualityAsync(object userState) {
            if ((this.onBeginGetRecLetterQualityDelegate == null)) {
                this.onBeginGetRecLetterQualityDelegate = new BeginOperationDelegate(this.OnBeginGetRecLetterQuality);
            }
            if ((this.onEndGetRecLetterQualityDelegate == null)) {
                this.onEndGetRecLetterQualityDelegate = new EndOperationDelegate(this.OnEndGetRecLetterQuality);
            }
            if ((this.onGetRecLetterQualityCompletedDelegate == null)) {
                this.onGetRecLetterQualityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRecLetterQualityCompleted);
            }
            base.InvokeAsync(this.onBeginGetRecLetterQualityDelegate, null, this.onEndGetRecLetterQualityDelegate, this.onGetRecLetterQualityCompletedDelegate, userState);
        }
        
        public void SetRecLetterQuality(bool RecLetterQuality) {
            base.Channel.SetRecLetterQuality(RecLetterQuality);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetRecLetterQuality(bool RecLetterQuality, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetRecLetterQuality(RecLetterQuality, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetRecLetterQuality(System.IAsyncResult result) {
            base.Channel.EndSetRecLetterQuality(result);
        }
        
        private System.IAsyncResult OnBeginSetRecLetterQuality(object[] inValues, System.AsyncCallback callback, object asyncState) {
            bool RecLetterQuality = ((bool)(inValues[0]));
            return this.BeginSetRecLetterQuality(RecLetterQuality, callback, asyncState);
        }
        
        private object[] OnEndSetRecLetterQuality(System.IAsyncResult result) {
            this.EndSetRecLetterQuality(result);
            return null;
        }
        
        private void OnSetRecLetterQualityCompleted(object state) {
            if ((this.SetRecLetterQualityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetRecLetterQualityCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetRecLetterQualityAsync(bool RecLetterQuality) {
            this.SetRecLetterQualityAsync(RecLetterQuality, null);
        }
        
        public void SetRecLetterQualityAsync(bool RecLetterQuality, object userState) {
            if ((this.onBeginSetRecLetterQualityDelegate == null)) {
                this.onBeginSetRecLetterQualityDelegate = new BeginOperationDelegate(this.OnBeginSetRecLetterQuality);
            }
            if ((this.onEndSetRecLetterQualityDelegate == null)) {
                this.onEndSetRecLetterQualityDelegate = new EndOperationDelegate(this.OnEndSetRecLetterQuality);
            }
            if ((this.onSetRecLetterQualityCompletedDelegate == null)) {
                this.onSetRecLetterQualityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetRecLetterQualityCompleted);
            }
            base.InvokeAsync(this.onBeginSetRecLetterQualityDelegate, new object[] {
                        RecLetterQuality}, this.onEndSetRecLetterQualityDelegate, this.onSetRecLetterQualityCompletedDelegate, userState);
        }
        
        public bool GetRecEmpty() {
            return base.Channel.GetRecEmpty();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRecEmpty(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRecEmpty(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetRecEmpty(System.IAsyncResult result) {
            return base.Channel.EndGetRecEmpty(result);
        }
        
        private System.IAsyncResult OnBeginGetRecEmpty(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetRecEmpty(callback, asyncState);
        }
        
        private object[] OnEndGetRecEmpty(System.IAsyncResult result) {
            bool retVal = this.EndGetRecEmpty(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRecEmptyCompleted(object state) {
            if ((this.GetRecEmptyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRecEmptyCompleted(this, new GetRecEmptyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRecEmptyAsync() {
            this.GetRecEmptyAsync(null);
        }
        
        public void GetRecEmptyAsync(object userState) {
            if ((this.onBeginGetRecEmptyDelegate == null)) {
                this.onBeginGetRecEmptyDelegate = new BeginOperationDelegate(this.OnBeginGetRecEmpty);
            }
            if ((this.onEndGetRecEmptyDelegate == null)) {
                this.onEndGetRecEmptyDelegate = new EndOperationDelegate(this.OnEndGetRecEmpty);
            }
            if ((this.onGetRecEmptyCompletedDelegate == null)) {
                this.onGetRecEmptyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRecEmptyCompleted);
            }
            base.InvokeAsync(this.onBeginGetRecEmptyDelegate, null, this.onEndGetRecEmptyDelegate, this.onGetRecEmptyCompletedDelegate, userState);
        }
        
        public bool GetRecNearEnd() {
            return base.Channel.GetRecNearEnd();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRecNearEnd(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRecNearEnd(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetRecNearEnd(System.IAsyncResult result) {
            return base.Channel.EndGetRecNearEnd(result);
        }
        
        private System.IAsyncResult OnBeginGetRecNearEnd(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetRecNearEnd(callback, asyncState);
        }
        
        private object[] OnEndGetRecNearEnd(System.IAsyncResult result) {
            bool retVal = this.EndGetRecNearEnd(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRecNearEndCompleted(object state) {
            if ((this.GetRecNearEndCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRecNearEndCompleted(this, new GetRecNearEndCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRecNearEndAsync() {
            this.GetRecNearEndAsync(null);
        }
        
        public void GetRecNearEndAsync(object userState) {
            if ((this.onBeginGetRecNearEndDelegate == null)) {
                this.onBeginGetRecNearEndDelegate = new BeginOperationDelegate(this.OnBeginGetRecNearEnd);
            }
            if ((this.onEndGetRecNearEndDelegate == null)) {
                this.onEndGetRecNearEndDelegate = new EndOperationDelegate(this.OnEndGetRecNearEnd);
            }
            if ((this.onGetRecNearEndCompletedDelegate == null)) {
                this.onGetRecNearEndCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRecNearEndCompleted);
            }
            base.InvokeAsync(this.onBeginGetRecNearEndDelegate, null, this.onEndGetRecNearEndDelegate, this.onGetRecNearEndCompletedDelegate, userState);
        }
        
        public int GetRecSidewaysMaxChars() {
            return base.Channel.GetRecSidewaysMaxChars();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRecSidewaysMaxChars(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRecSidewaysMaxChars(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetRecSidewaysMaxChars(System.IAsyncResult result) {
            return base.Channel.EndGetRecSidewaysMaxChars(result);
        }
        
        private System.IAsyncResult OnBeginGetRecSidewaysMaxChars(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetRecSidewaysMaxChars(callback, asyncState);
        }
        
        private object[] OnEndGetRecSidewaysMaxChars(System.IAsyncResult result) {
            int retVal = this.EndGetRecSidewaysMaxChars(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRecSidewaysMaxCharsCompleted(object state) {
            if ((this.GetRecSidewaysMaxCharsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRecSidewaysMaxCharsCompleted(this, new GetRecSidewaysMaxCharsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRecSidewaysMaxCharsAsync() {
            this.GetRecSidewaysMaxCharsAsync(null);
        }
        
        public void GetRecSidewaysMaxCharsAsync(object userState) {
            if ((this.onBeginGetRecSidewaysMaxCharsDelegate == null)) {
                this.onBeginGetRecSidewaysMaxCharsDelegate = new BeginOperationDelegate(this.OnBeginGetRecSidewaysMaxChars);
            }
            if ((this.onEndGetRecSidewaysMaxCharsDelegate == null)) {
                this.onEndGetRecSidewaysMaxCharsDelegate = new EndOperationDelegate(this.OnEndGetRecSidewaysMaxChars);
            }
            if ((this.onGetRecSidewaysMaxCharsCompletedDelegate == null)) {
                this.onGetRecSidewaysMaxCharsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRecSidewaysMaxCharsCompleted);
            }
            base.InvokeAsync(this.onBeginGetRecSidewaysMaxCharsDelegate, null, this.onEndGetRecSidewaysMaxCharsDelegate, this.onGetRecSidewaysMaxCharsCompletedDelegate, userState);
        }
        
        public int GetRecSidewaysMaxLines() {
            return base.Channel.GetRecSidewaysMaxLines();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRecSidewaysMaxLines(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRecSidewaysMaxLines(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetRecSidewaysMaxLines(System.IAsyncResult result) {
            return base.Channel.EndGetRecSidewaysMaxLines(result);
        }
        
        private System.IAsyncResult OnBeginGetRecSidewaysMaxLines(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetRecSidewaysMaxLines(callback, asyncState);
        }
        
        private object[] OnEndGetRecSidewaysMaxLines(System.IAsyncResult result) {
            int retVal = this.EndGetRecSidewaysMaxLines(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRecSidewaysMaxLinesCompleted(object state) {
            if ((this.GetRecSidewaysMaxLinesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRecSidewaysMaxLinesCompleted(this, new GetRecSidewaysMaxLinesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRecSidewaysMaxLinesAsync() {
            this.GetRecSidewaysMaxLinesAsync(null);
        }
        
        public void GetRecSidewaysMaxLinesAsync(object userState) {
            if ((this.onBeginGetRecSidewaysMaxLinesDelegate == null)) {
                this.onBeginGetRecSidewaysMaxLinesDelegate = new BeginOperationDelegate(this.OnBeginGetRecSidewaysMaxLines);
            }
            if ((this.onEndGetRecSidewaysMaxLinesDelegate == null)) {
                this.onEndGetRecSidewaysMaxLinesDelegate = new EndOperationDelegate(this.OnEndGetRecSidewaysMaxLines);
            }
            if ((this.onGetRecSidewaysMaxLinesCompletedDelegate == null)) {
                this.onGetRecSidewaysMaxLinesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRecSidewaysMaxLinesCompleted);
            }
            base.InvokeAsync(this.onBeginGetRecSidewaysMaxLinesDelegate, null, this.onEndGetRecSidewaysMaxLinesDelegate, this.onGetRecSidewaysMaxLinesCompletedDelegate, userState);
        }
        
        public int GetRecLinesToPaperCut() {
            return base.Channel.GetRecLinesToPaperCut();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRecLinesToPaperCut(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRecLinesToPaperCut(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetRecLinesToPaperCut(System.IAsyncResult result) {
            return base.Channel.EndGetRecLinesToPaperCut(result);
        }
        
        private System.IAsyncResult OnBeginGetRecLinesToPaperCut(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetRecLinesToPaperCut(callback, asyncState);
        }
        
        private object[] OnEndGetRecLinesToPaperCut(System.IAsyncResult result) {
            int retVal = this.EndGetRecLinesToPaperCut(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRecLinesToPaperCutCompleted(object state) {
            if ((this.GetRecLinesToPaperCutCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRecLinesToPaperCutCompleted(this, new GetRecLinesToPaperCutCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRecLinesToPaperCutAsync() {
            this.GetRecLinesToPaperCutAsync(null);
        }
        
        public void GetRecLinesToPaperCutAsync(object userState) {
            if ((this.onBeginGetRecLinesToPaperCutDelegate == null)) {
                this.onBeginGetRecLinesToPaperCutDelegate = new BeginOperationDelegate(this.OnBeginGetRecLinesToPaperCut);
            }
            if ((this.onEndGetRecLinesToPaperCutDelegate == null)) {
                this.onEndGetRecLinesToPaperCutDelegate = new EndOperationDelegate(this.OnEndGetRecLinesToPaperCut);
            }
            if ((this.onGetRecLinesToPaperCutCompletedDelegate == null)) {
                this.onGetRecLinesToPaperCutCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRecLinesToPaperCutCompleted);
            }
            base.InvokeAsync(this.onBeginGetRecLinesToPaperCutDelegate, null, this.onEndGetRecLinesToPaperCutDelegate, this.onGetRecLinesToPaperCutCompletedDelegate, userState);
        }
        
        public WSPoS.POSPrinterServiceReference.RotationList GetRecBarCodeRotationList() {
            return base.Channel.GetRecBarCodeRotationList();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRecBarCodeRotationList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRecBarCodeRotationList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WSPoS.POSPrinterServiceReference.RotationList EndGetRecBarCodeRotationList(System.IAsyncResult result) {
            return base.Channel.EndGetRecBarCodeRotationList(result);
        }
        
        private System.IAsyncResult OnBeginGetRecBarCodeRotationList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetRecBarCodeRotationList(callback, asyncState);
        }
        
        private object[] OnEndGetRecBarCodeRotationList(System.IAsyncResult result) {
            WSPoS.POSPrinterServiceReference.RotationList retVal = this.EndGetRecBarCodeRotationList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRecBarCodeRotationListCompleted(object state) {
            if ((this.GetRecBarCodeRotationListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRecBarCodeRotationListCompleted(this, new GetRecBarCodeRotationListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRecBarCodeRotationListAsync() {
            this.GetRecBarCodeRotationListAsync(null);
        }
        
        public void GetRecBarCodeRotationListAsync(object userState) {
            if ((this.onBeginGetRecBarCodeRotationListDelegate == null)) {
                this.onBeginGetRecBarCodeRotationListDelegate = new BeginOperationDelegate(this.OnBeginGetRecBarCodeRotationList);
            }
            if ((this.onEndGetRecBarCodeRotationListDelegate == null)) {
                this.onEndGetRecBarCodeRotationListDelegate = new EndOperationDelegate(this.OnEndGetRecBarCodeRotationList);
            }
            if ((this.onGetRecBarCodeRotationListCompletedDelegate == null)) {
                this.onGetRecBarCodeRotationListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRecBarCodeRotationListCompleted);
            }
            base.InvokeAsync(this.onBeginGetRecBarCodeRotationListDelegate, null, this.onEndGetRecBarCodeRotationListDelegate, this.onGetRecBarCodeRotationListCompletedDelegate, userState);
        }
        
        public WSPoS.POSPrinterServiceReference.RotationList GetRecBitmapRotationList() {
            return base.Channel.GetRecBitmapRotationList();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRecBitmapRotationList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRecBitmapRotationList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WSPoS.POSPrinterServiceReference.RotationList EndGetRecBitmapRotationList(System.IAsyncResult result) {
            return base.Channel.EndGetRecBitmapRotationList(result);
        }
        
        private System.IAsyncResult OnBeginGetRecBitmapRotationList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetRecBitmapRotationList(callback, asyncState);
        }
        
        private object[] OnEndGetRecBitmapRotationList(System.IAsyncResult result) {
            WSPoS.POSPrinterServiceReference.RotationList retVal = this.EndGetRecBitmapRotationList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRecBitmapRotationListCompleted(object state) {
            if ((this.GetRecBitmapRotationListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRecBitmapRotationListCompleted(this, new GetRecBitmapRotationListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRecBitmapRotationListAsync() {
            this.GetRecBitmapRotationListAsync(null);
        }
        
        public void GetRecBitmapRotationListAsync(object userState) {
            if ((this.onBeginGetRecBitmapRotationListDelegate == null)) {
                this.onBeginGetRecBitmapRotationListDelegate = new BeginOperationDelegate(this.OnBeginGetRecBitmapRotationList);
            }
            if ((this.onEndGetRecBitmapRotationListDelegate == null)) {
                this.onEndGetRecBitmapRotationListDelegate = new EndOperationDelegate(this.OnEndGetRecBitmapRotationList);
            }
            if ((this.onGetRecBitmapRotationListCompletedDelegate == null)) {
                this.onGetRecBitmapRotationListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRecBitmapRotationListCompleted);
            }
            base.InvokeAsync(this.onBeginGetRecBitmapRotationListDelegate, null, this.onEndGetRecBitmapRotationListDelegate, this.onGetRecBitmapRotationListCompletedDelegate, userState);
        }
        
        public WSPoS.POSPrinterServiceReference.PrinterCartridgeStates GetRecCartridgeState() {
            return base.Channel.GetRecCartridgeState();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRecCartridgeState(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRecCartridgeState(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WSPoS.POSPrinterServiceReference.PrinterCartridgeStates EndGetRecCartridgeState(System.IAsyncResult result) {
            return base.Channel.EndGetRecCartridgeState(result);
        }
        
        private System.IAsyncResult OnBeginGetRecCartridgeState(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetRecCartridgeState(callback, asyncState);
        }
        
        private object[] OnEndGetRecCartridgeState(System.IAsyncResult result) {
            WSPoS.POSPrinterServiceReference.PrinterCartridgeStates retVal = this.EndGetRecCartridgeState(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRecCartridgeStateCompleted(object state) {
            if ((this.GetRecCartridgeStateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRecCartridgeStateCompleted(this, new GetRecCartridgeStateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRecCartridgeStateAsync() {
            this.GetRecCartridgeStateAsync(null);
        }
        
        public void GetRecCartridgeStateAsync(object userState) {
            if ((this.onBeginGetRecCartridgeStateDelegate == null)) {
                this.onBeginGetRecCartridgeStateDelegate = new BeginOperationDelegate(this.OnBeginGetRecCartridgeState);
            }
            if ((this.onEndGetRecCartridgeStateDelegate == null)) {
                this.onEndGetRecCartridgeStateDelegate = new EndOperationDelegate(this.OnEndGetRecCartridgeState);
            }
            if ((this.onGetRecCartridgeStateCompletedDelegate == null)) {
                this.onGetRecCartridgeStateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRecCartridgeStateCompleted);
            }
            base.InvokeAsync(this.onBeginGetRecCartridgeStateDelegate, null, this.onEndGetRecCartridgeStateDelegate, this.onGetRecCartridgeStateCompletedDelegate, userState);
        }
        
        public int GetRecCurrentCartridge() {
            return base.Channel.GetRecCurrentCartridge();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRecCurrentCartridge(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRecCurrentCartridge(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetRecCurrentCartridge(System.IAsyncResult result) {
            return base.Channel.EndGetRecCurrentCartridge(result);
        }
        
        private System.IAsyncResult OnBeginGetRecCurrentCartridge(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetRecCurrentCartridge(callback, asyncState);
        }
        
        private object[] OnEndGetRecCurrentCartridge(System.IAsyncResult result) {
            int retVal = this.EndGetRecCurrentCartridge(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRecCurrentCartridgeCompleted(object state) {
            if ((this.GetRecCurrentCartridgeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRecCurrentCartridgeCompleted(this, new GetRecCurrentCartridgeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRecCurrentCartridgeAsync() {
            this.GetRecCurrentCartridgeAsync(null);
        }
        
        public void GetRecCurrentCartridgeAsync(object userState) {
            if ((this.onBeginGetRecCurrentCartridgeDelegate == null)) {
                this.onBeginGetRecCurrentCartridgeDelegate = new BeginOperationDelegate(this.OnBeginGetRecCurrentCartridge);
            }
            if ((this.onEndGetRecCurrentCartridgeDelegate == null)) {
                this.onEndGetRecCurrentCartridgeDelegate = new EndOperationDelegate(this.OnEndGetRecCurrentCartridge);
            }
            if ((this.onGetRecCurrentCartridgeCompletedDelegate == null)) {
                this.onGetRecCurrentCartridgeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRecCurrentCartridgeCompleted);
            }
            base.InvokeAsync(this.onBeginGetRecCurrentCartridgeDelegate, null, this.onEndGetRecCurrentCartridgeDelegate, this.onGetRecCurrentCartridgeCompletedDelegate, userState);
        }
        
        public void SetRecCurrentCartridge(int RecCurrentCartridge) {
            base.Channel.SetRecCurrentCartridge(RecCurrentCartridge);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetRecCurrentCartridge(int RecCurrentCartridge, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetRecCurrentCartridge(RecCurrentCartridge, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetRecCurrentCartridge(System.IAsyncResult result) {
            base.Channel.EndSetRecCurrentCartridge(result);
        }
        
        private System.IAsyncResult OnBeginSetRecCurrentCartridge(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int RecCurrentCartridge = ((int)(inValues[0]));
            return this.BeginSetRecCurrentCartridge(RecCurrentCartridge, callback, asyncState);
        }
        
        private object[] OnEndSetRecCurrentCartridge(System.IAsyncResult result) {
            this.EndSetRecCurrentCartridge(result);
            return null;
        }
        
        private void OnSetRecCurrentCartridgeCompleted(object state) {
            if ((this.SetRecCurrentCartridgeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetRecCurrentCartridgeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetRecCurrentCartridgeAsync(int RecCurrentCartridge) {
            this.SetRecCurrentCartridgeAsync(RecCurrentCartridge, null);
        }
        
        public void SetRecCurrentCartridgeAsync(int RecCurrentCartridge, object userState) {
            if ((this.onBeginSetRecCurrentCartridgeDelegate == null)) {
                this.onBeginSetRecCurrentCartridgeDelegate = new BeginOperationDelegate(this.OnBeginSetRecCurrentCartridge);
            }
            if ((this.onEndSetRecCurrentCartridgeDelegate == null)) {
                this.onEndSetRecCurrentCartridgeDelegate = new EndOperationDelegate(this.OnEndSetRecCurrentCartridge);
            }
            if ((this.onSetRecCurrentCartridgeCompletedDelegate == null)) {
                this.onSetRecCurrentCartridgeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetRecCurrentCartridgeCompleted);
            }
            base.InvokeAsync(this.onBeginSetRecCurrentCartridgeDelegate, new object[] {
                        RecCurrentCartridge}, this.onEndSetRecCurrentCartridgeDelegate, this.onSetRecCurrentCartridgeCompletedDelegate, userState);
        }
        
        public int GetSlpLineChars() {
            return base.Channel.GetSlpLineChars();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSlpLineChars(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSlpLineChars(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetSlpLineChars(System.IAsyncResult result) {
            return base.Channel.EndGetSlpLineChars(result);
        }
        
        private System.IAsyncResult OnBeginGetSlpLineChars(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetSlpLineChars(callback, asyncState);
        }
        
        private object[] OnEndGetSlpLineChars(System.IAsyncResult result) {
            int retVal = this.EndGetSlpLineChars(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSlpLineCharsCompleted(object state) {
            if ((this.GetSlpLineCharsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSlpLineCharsCompleted(this, new GetSlpLineCharsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSlpLineCharsAsync() {
            this.GetSlpLineCharsAsync(null);
        }
        
        public void GetSlpLineCharsAsync(object userState) {
            if ((this.onBeginGetSlpLineCharsDelegate == null)) {
                this.onBeginGetSlpLineCharsDelegate = new BeginOperationDelegate(this.OnBeginGetSlpLineChars);
            }
            if ((this.onEndGetSlpLineCharsDelegate == null)) {
                this.onEndGetSlpLineCharsDelegate = new EndOperationDelegate(this.OnEndGetSlpLineChars);
            }
            if ((this.onGetSlpLineCharsCompletedDelegate == null)) {
                this.onGetSlpLineCharsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSlpLineCharsCompleted);
            }
            base.InvokeAsync(this.onBeginGetSlpLineCharsDelegate, null, this.onEndGetSlpLineCharsDelegate, this.onGetSlpLineCharsCompletedDelegate, userState);
        }
        
        public void SetSlpLineChars(int SlpLineChars) {
            base.Channel.SetSlpLineChars(SlpLineChars);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetSlpLineChars(int SlpLineChars, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetSlpLineChars(SlpLineChars, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetSlpLineChars(System.IAsyncResult result) {
            base.Channel.EndSetSlpLineChars(result);
        }
        
        private System.IAsyncResult OnBeginSetSlpLineChars(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int SlpLineChars = ((int)(inValues[0]));
            return this.BeginSetSlpLineChars(SlpLineChars, callback, asyncState);
        }
        
        private object[] OnEndSetSlpLineChars(System.IAsyncResult result) {
            this.EndSetSlpLineChars(result);
            return null;
        }
        
        private void OnSetSlpLineCharsCompleted(object state) {
            if ((this.SetSlpLineCharsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetSlpLineCharsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetSlpLineCharsAsync(int SlpLineChars) {
            this.SetSlpLineCharsAsync(SlpLineChars, null);
        }
        
        public void SetSlpLineCharsAsync(int SlpLineChars, object userState) {
            if ((this.onBeginSetSlpLineCharsDelegate == null)) {
                this.onBeginSetSlpLineCharsDelegate = new BeginOperationDelegate(this.OnBeginSetSlpLineChars);
            }
            if ((this.onEndSetSlpLineCharsDelegate == null)) {
                this.onEndSetSlpLineCharsDelegate = new EndOperationDelegate(this.OnEndSetSlpLineChars);
            }
            if ((this.onSetSlpLineCharsCompletedDelegate == null)) {
                this.onSetSlpLineCharsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetSlpLineCharsCompleted);
            }
            base.InvokeAsync(this.onBeginSetSlpLineCharsDelegate, new object[] {
                        SlpLineChars}, this.onEndSetSlpLineCharsDelegate, this.onSetSlpLineCharsCompletedDelegate, userState);
        }
        
        public WSPoS.POSPrinterServiceReference.LineCharsList GetSlpLineCharsList() {
            return base.Channel.GetSlpLineCharsList();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSlpLineCharsList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSlpLineCharsList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WSPoS.POSPrinterServiceReference.LineCharsList EndGetSlpLineCharsList(System.IAsyncResult result) {
            return base.Channel.EndGetSlpLineCharsList(result);
        }
        
        private System.IAsyncResult OnBeginGetSlpLineCharsList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetSlpLineCharsList(callback, asyncState);
        }
        
        private object[] OnEndGetSlpLineCharsList(System.IAsyncResult result) {
            WSPoS.POSPrinterServiceReference.LineCharsList retVal = this.EndGetSlpLineCharsList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSlpLineCharsListCompleted(object state) {
            if ((this.GetSlpLineCharsListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSlpLineCharsListCompleted(this, new GetSlpLineCharsListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSlpLineCharsListAsync() {
            this.GetSlpLineCharsListAsync(null);
        }
        
        public void GetSlpLineCharsListAsync(object userState) {
            if ((this.onBeginGetSlpLineCharsListDelegate == null)) {
                this.onBeginGetSlpLineCharsListDelegate = new BeginOperationDelegate(this.OnBeginGetSlpLineCharsList);
            }
            if ((this.onEndGetSlpLineCharsListDelegate == null)) {
                this.onEndGetSlpLineCharsListDelegate = new EndOperationDelegate(this.OnEndGetSlpLineCharsList);
            }
            if ((this.onGetSlpLineCharsListCompletedDelegate == null)) {
                this.onGetSlpLineCharsListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSlpLineCharsListCompleted);
            }
            base.InvokeAsync(this.onBeginGetSlpLineCharsListDelegate, null, this.onEndGetSlpLineCharsListDelegate, this.onGetSlpLineCharsListCompletedDelegate, userState);
        }
        
        public int GetSlpLineHeight() {
            return base.Channel.GetSlpLineHeight();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSlpLineHeight(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSlpLineHeight(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetSlpLineHeight(System.IAsyncResult result) {
            return base.Channel.EndGetSlpLineHeight(result);
        }
        
        private System.IAsyncResult OnBeginGetSlpLineHeight(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetSlpLineHeight(callback, asyncState);
        }
        
        private object[] OnEndGetSlpLineHeight(System.IAsyncResult result) {
            int retVal = this.EndGetSlpLineHeight(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSlpLineHeightCompleted(object state) {
            if ((this.GetSlpLineHeightCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSlpLineHeightCompleted(this, new GetSlpLineHeightCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSlpLineHeightAsync() {
            this.GetSlpLineHeightAsync(null);
        }
        
        public void GetSlpLineHeightAsync(object userState) {
            if ((this.onBeginGetSlpLineHeightDelegate == null)) {
                this.onBeginGetSlpLineHeightDelegate = new BeginOperationDelegate(this.OnBeginGetSlpLineHeight);
            }
            if ((this.onEndGetSlpLineHeightDelegate == null)) {
                this.onEndGetSlpLineHeightDelegate = new EndOperationDelegate(this.OnEndGetSlpLineHeight);
            }
            if ((this.onGetSlpLineHeightCompletedDelegate == null)) {
                this.onGetSlpLineHeightCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSlpLineHeightCompleted);
            }
            base.InvokeAsync(this.onBeginGetSlpLineHeightDelegate, null, this.onEndGetSlpLineHeightDelegate, this.onGetSlpLineHeightCompletedDelegate, userState);
        }
        
        public void SetSlpLineHeight(int SlpLineHeight) {
            base.Channel.SetSlpLineHeight(SlpLineHeight);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetSlpLineHeight(int SlpLineHeight, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetSlpLineHeight(SlpLineHeight, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetSlpLineHeight(System.IAsyncResult result) {
            base.Channel.EndSetSlpLineHeight(result);
        }
        
        private System.IAsyncResult OnBeginSetSlpLineHeight(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int SlpLineHeight = ((int)(inValues[0]));
            return this.BeginSetSlpLineHeight(SlpLineHeight, callback, asyncState);
        }
        
        private object[] OnEndSetSlpLineHeight(System.IAsyncResult result) {
            this.EndSetSlpLineHeight(result);
            return null;
        }
        
        private void OnSetSlpLineHeightCompleted(object state) {
            if ((this.SetSlpLineHeightCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetSlpLineHeightCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetSlpLineHeightAsync(int SlpLineHeight) {
            this.SetSlpLineHeightAsync(SlpLineHeight, null);
        }
        
        public void SetSlpLineHeightAsync(int SlpLineHeight, object userState) {
            if ((this.onBeginSetSlpLineHeightDelegate == null)) {
                this.onBeginSetSlpLineHeightDelegate = new BeginOperationDelegate(this.OnBeginSetSlpLineHeight);
            }
            if ((this.onEndSetSlpLineHeightDelegate == null)) {
                this.onEndSetSlpLineHeightDelegate = new EndOperationDelegate(this.OnEndSetSlpLineHeight);
            }
            if ((this.onSetSlpLineHeightCompletedDelegate == null)) {
                this.onSetSlpLineHeightCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetSlpLineHeightCompleted);
            }
            base.InvokeAsync(this.onBeginSetSlpLineHeightDelegate, new object[] {
                        SlpLineHeight}, this.onEndSetSlpLineHeightDelegate, this.onSetSlpLineHeightCompletedDelegate, userState);
        }
        
        public int GetSlpLineSpacing() {
            return base.Channel.GetSlpLineSpacing();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSlpLineSpacing(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSlpLineSpacing(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetSlpLineSpacing(System.IAsyncResult result) {
            return base.Channel.EndGetSlpLineSpacing(result);
        }
        
        private System.IAsyncResult OnBeginGetSlpLineSpacing(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetSlpLineSpacing(callback, asyncState);
        }
        
        private object[] OnEndGetSlpLineSpacing(System.IAsyncResult result) {
            int retVal = this.EndGetSlpLineSpacing(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSlpLineSpacingCompleted(object state) {
            if ((this.GetSlpLineSpacingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSlpLineSpacingCompleted(this, new GetSlpLineSpacingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSlpLineSpacingAsync() {
            this.GetSlpLineSpacingAsync(null);
        }
        
        public void GetSlpLineSpacingAsync(object userState) {
            if ((this.onBeginGetSlpLineSpacingDelegate == null)) {
                this.onBeginGetSlpLineSpacingDelegate = new BeginOperationDelegate(this.OnBeginGetSlpLineSpacing);
            }
            if ((this.onEndGetSlpLineSpacingDelegate == null)) {
                this.onEndGetSlpLineSpacingDelegate = new EndOperationDelegate(this.OnEndGetSlpLineSpacing);
            }
            if ((this.onGetSlpLineSpacingCompletedDelegate == null)) {
                this.onGetSlpLineSpacingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSlpLineSpacingCompleted);
            }
            base.InvokeAsync(this.onBeginGetSlpLineSpacingDelegate, null, this.onEndGetSlpLineSpacingDelegate, this.onGetSlpLineSpacingCompletedDelegate, userState);
        }
        
        public void SetSlpLineSpacing(int SlpLineSpacing) {
            base.Channel.SetSlpLineSpacing(SlpLineSpacing);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetSlpLineSpacing(int SlpLineSpacing, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetSlpLineSpacing(SlpLineSpacing, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetSlpLineSpacing(System.IAsyncResult result) {
            base.Channel.EndSetSlpLineSpacing(result);
        }
        
        private System.IAsyncResult OnBeginSetSlpLineSpacing(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int SlpLineSpacing = ((int)(inValues[0]));
            return this.BeginSetSlpLineSpacing(SlpLineSpacing, callback, asyncState);
        }
        
        private object[] OnEndSetSlpLineSpacing(System.IAsyncResult result) {
            this.EndSetSlpLineSpacing(result);
            return null;
        }
        
        private void OnSetSlpLineSpacingCompleted(object state) {
            if ((this.SetSlpLineSpacingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetSlpLineSpacingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetSlpLineSpacingAsync(int SlpLineSpacing) {
            this.SetSlpLineSpacingAsync(SlpLineSpacing, null);
        }
        
        public void SetSlpLineSpacingAsync(int SlpLineSpacing, object userState) {
            if ((this.onBeginSetSlpLineSpacingDelegate == null)) {
                this.onBeginSetSlpLineSpacingDelegate = new BeginOperationDelegate(this.OnBeginSetSlpLineSpacing);
            }
            if ((this.onEndSetSlpLineSpacingDelegate == null)) {
                this.onEndSetSlpLineSpacingDelegate = new EndOperationDelegate(this.OnEndSetSlpLineSpacing);
            }
            if ((this.onSetSlpLineSpacingCompletedDelegate == null)) {
                this.onSetSlpLineSpacingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetSlpLineSpacingCompleted);
            }
            base.InvokeAsync(this.onBeginSetSlpLineSpacingDelegate, new object[] {
                        SlpLineSpacing}, this.onEndSetSlpLineSpacingDelegate, this.onSetSlpLineSpacingCompletedDelegate, userState);
        }
        
        public int GetSlpLineWidth() {
            return base.Channel.GetSlpLineWidth();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSlpLineWidth(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSlpLineWidth(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetSlpLineWidth(System.IAsyncResult result) {
            return base.Channel.EndGetSlpLineWidth(result);
        }
        
        private System.IAsyncResult OnBeginGetSlpLineWidth(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetSlpLineWidth(callback, asyncState);
        }
        
        private object[] OnEndGetSlpLineWidth(System.IAsyncResult result) {
            int retVal = this.EndGetSlpLineWidth(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSlpLineWidthCompleted(object state) {
            if ((this.GetSlpLineWidthCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSlpLineWidthCompleted(this, new GetSlpLineWidthCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSlpLineWidthAsync() {
            this.GetSlpLineWidthAsync(null);
        }
        
        public void GetSlpLineWidthAsync(object userState) {
            if ((this.onBeginGetSlpLineWidthDelegate == null)) {
                this.onBeginGetSlpLineWidthDelegate = new BeginOperationDelegate(this.OnBeginGetSlpLineWidth);
            }
            if ((this.onEndGetSlpLineWidthDelegate == null)) {
                this.onEndGetSlpLineWidthDelegate = new EndOperationDelegate(this.OnEndGetSlpLineWidth);
            }
            if ((this.onGetSlpLineWidthCompletedDelegate == null)) {
                this.onGetSlpLineWidthCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSlpLineWidthCompleted);
            }
            base.InvokeAsync(this.onBeginGetSlpLineWidthDelegate, null, this.onEndGetSlpLineWidthDelegate, this.onGetSlpLineWidthCompletedDelegate, userState);
        }
        
        public WSPoS.POSPrinterServiceReference.FontTypefaceList GetFontTypefaceList() {
            return base.Channel.GetFontTypefaceList();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetFontTypefaceList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFontTypefaceList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WSPoS.POSPrinterServiceReference.FontTypefaceList EndGetFontTypefaceList(System.IAsyncResult result) {
            return base.Channel.EndGetFontTypefaceList(result);
        }
        
        private System.IAsyncResult OnBeginGetFontTypefaceList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetFontTypefaceList(callback, asyncState);
        }
        
        private object[] OnEndGetFontTypefaceList(System.IAsyncResult result) {
            WSPoS.POSPrinterServiceReference.FontTypefaceList retVal = this.EndGetFontTypefaceList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFontTypefaceListCompleted(object state) {
            if ((this.GetFontTypefaceListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFontTypefaceListCompleted(this, new GetFontTypefaceListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFontTypefaceListAsync() {
            this.GetFontTypefaceListAsync(null);
        }
        
        public void GetFontTypefaceListAsync(object userState) {
            if ((this.onBeginGetFontTypefaceListDelegate == null)) {
                this.onBeginGetFontTypefaceListDelegate = new BeginOperationDelegate(this.OnBeginGetFontTypefaceList);
            }
            if ((this.onEndGetFontTypefaceListDelegate == null)) {
                this.onEndGetFontTypefaceListDelegate = new EndOperationDelegate(this.OnEndGetFontTypefaceList);
            }
            if ((this.onGetFontTypefaceListCompletedDelegate == null)) {
                this.onGetFontTypefaceListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFontTypefaceListCompleted);
            }
            base.InvokeAsync(this.onBeginGetFontTypefaceListDelegate, null, this.onEndGetFontTypefaceListDelegate, this.onGetFontTypefaceListCompletedDelegate, userState);
        }
        
        public bool GetFlagWhenIdle() {
            return base.Channel.GetFlagWhenIdle();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetFlagWhenIdle(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFlagWhenIdle(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetFlagWhenIdle(System.IAsyncResult result) {
            return base.Channel.EndGetFlagWhenIdle(result);
        }
        
        private System.IAsyncResult OnBeginGetFlagWhenIdle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetFlagWhenIdle(callback, asyncState);
        }
        
        private object[] OnEndGetFlagWhenIdle(System.IAsyncResult result) {
            bool retVal = this.EndGetFlagWhenIdle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFlagWhenIdleCompleted(object state) {
            if ((this.GetFlagWhenIdleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFlagWhenIdleCompleted(this, new GetFlagWhenIdleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFlagWhenIdleAsync() {
            this.GetFlagWhenIdleAsync(null);
        }
        
        public void GetFlagWhenIdleAsync(object userState) {
            if ((this.onBeginGetFlagWhenIdleDelegate == null)) {
                this.onBeginGetFlagWhenIdleDelegate = new BeginOperationDelegate(this.OnBeginGetFlagWhenIdle);
            }
            if ((this.onEndGetFlagWhenIdleDelegate == null)) {
                this.onEndGetFlagWhenIdleDelegate = new EndOperationDelegate(this.OnEndGetFlagWhenIdle);
            }
            if ((this.onGetFlagWhenIdleCompletedDelegate == null)) {
                this.onGetFlagWhenIdleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFlagWhenIdleCompleted);
            }
            base.InvokeAsync(this.onBeginGetFlagWhenIdleDelegate, null, this.onEndGetFlagWhenIdleDelegate, this.onGetFlagWhenIdleCompletedDelegate, userState);
        }
        
        public void SetFlagWhenIdle(bool FlagWhenIdle) {
            base.Channel.SetFlagWhenIdle(FlagWhenIdle);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetFlagWhenIdle(bool FlagWhenIdle, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetFlagWhenIdle(FlagWhenIdle, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetFlagWhenIdle(System.IAsyncResult result) {
            base.Channel.EndSetFlagWhenIdle(result);
        }
        
        private System.IAsyncResult OnBeginSetFlagWhenIdle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            bool FlagWhenIdle = ((bool)(inValues[0]));
            return this.BeginSetFlagWhenIdle(FlagWhenIdle, callback, asyncState);
        }
        
        private object[] OnEndSetFlagWhenIdle(System.IAsyncResult result) {
            this.EndSetFlagWhenIdle(result);
            return null;
        }
        
        private void OnSetFlagWhenIdleCompleted(object state) {
            if ((this.SetFlagWhenIdleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetFlagWhenIdleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetFlagWhenIdleAsync(bool FlagWhenIdle) {
            this.SetFlagWhenIdleAsync(FlagWhenIdle, null);
        }
        
        public void SetFlagWhenIdleAsync(bool FlagWhenIdle, object userState) {
            if ((this.onBeginSetFlagWhenIdleDelegate == null)) {
                this.onBeginSetFlagWhenIdleDelegate = new BeginOperationDelegate(this.OnBeginSetFlagWhenIdle);
            }
            if ((this.onEndSetFlagWhenIdleDelegate == null)) {
                this.onEndSetFlagWhenIdleDelegate = new EndOperationDelegate(this.OnEndSetFlagWhenIdle);
            }
            if ((this.onSetFlagWhenIdleCompletedDelegate == null)) {
                this.onSetFlagWhenIdleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetFlagWhenIdleCompleted);
            }
            base.InvokeAsync(this.onBeginSetFlagWhenIdleDelegate, new object[] {
                        FlagWhenIdle}, this.onEndSetFlagWhenIdleDelegate, this.onSetFlagWhenIdleCompletedDelegate, userState);
        }
        
        public bool GetMapCharacterSet() {
            return base.Channel.GetMapCharacterSet();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetMapCharacterSet(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMapCharacterSet(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetMapCharacterSet(System.IAsyncResult result) {
            return base.Channel.EndGetMapCharacterSet(result);
        }
        
        private System.IAsyncResult OnBeginGetMapCharacterSet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetMapCharacterSet(callback, asyncState);
        }
        
        private object[] OnEndGetMapCharacterSet(System.IAsyncResult result) {
            bool retVal = this.EndGetMapCharacterSet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMapCharacterSetCompleted(object state) {
            if ((this.GetMapCharacterSetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMapCharacterSetCompleted(this, new GetMapCharacterSetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMapCharacterSetAsync() {
            this.GetMapCharacterSetAsync(null);
        }
        
        public void GetMapCharacterSetAsync(object userState) {
            if ((this.onBeginGetMapCharacterSetDelegate == null)) {
                this.onBeginGetMapCharacterSetDelegate = new BeginOperationDelegate(this.OnBeginGetMapCharacterSet);
            }
            if ((this.onEndGetMapCharacterSetDelegate == null)) {
                this.onEndGetMapCharacterSetDelegate = new EndOperationDelegate(this.OnEndGetMapCharacterSet);
            }
            if ((this.onGetMapCharacterSetCompletedDelegate == null)) {
                this.onGetMapCharacterSetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMapCharacterSetCompleted);
            }
            base.InvokeAsync(this.onBeginGetMapCharacterSetDelegate, null, this.onEndGetMapCharacterSetDelegate, this.onGetMapCharacterSetCompletedDelegate, userState);
        }
        
        public void SetMapCharacterSet(bool MapCharacterSet) {
            base.Channel.SetMapCharacterSet(MapCharacterSet);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetMapCharacterSet(bool MapCharacterSet, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetMapCharacterSet(MapCharacterSet, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetMapCharacterSet(System.IAsyncResult result) {
            base.Channel.EndSetMapCharacterSet(result);
        }
        
        private System.IAsyncResult OnBeginSetMapCharacterSet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            bool MapCharacterSet = ((bool)(inValues[0]));
            return this.BeginSetMapCharacterSet(MapCharacterSet, callback, asyncState);
        }
        
        private object[] OnEndSetMapCharacterSet(System.IAsyncResult result) {
            this.EndSetMapCharacterSet(result);
            return null;
        }
        
        private void OnSetMapCharacterSetCompleted(object state) {
            if ((this.SetMapCharacterSetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetMapCharacterSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetMapCharacterSetAsync(bool MapCharacterSet) {
            this.SetMapCharacterSetAsync(MapCharacterSet, null);
        }
        
        public void SetMapCharacterSetAsync(bool MapCharacterSet, object userState) {
            if ((this.onBeginSetMapCharacterSetDelegate == null)) {
                this.onBeginSetMapCharacterSetDelegate = new BeginOperationDelegate(this.OnBeginSetMapCharacterSet);
            }
            if ((this.onEndSetMapCharacterSetDelegate == null)) {
                this.onEndSetMapCharacterSetDelegate = new EndOperationDelegate(this.OnEndSetMapCharacterSet);
            }
            if ((this.onSetMapCharacterSetCompletedDelegate == null)) {
                this.onSetMapCharacterSetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetMapCharacterSetCompleted);
            }
            base.InvokeAsync(this.onBeginSetMapCharacterSetDelegate, new object[] {
                        MapCharacterSet}, this.onEndSetMapCharacterSetDelegate, this.onSetMapCharacterSetCompletedDelegate, userState);
        }
        
        public WSPoS.POSPrinterServiceReference.MapMode GetMapMode() {
            return base.Channel.GetMapMode();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetMapMode(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMapMode(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WSPoS.POSPrinterServiceReference.MapMode EndGetMapMode(System.IAsyncResult result) {
            return base.Channel.EndGetMapMode(result);
        }
        
        private System.IAsyncResult OnBeginGetMapMode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetMapMode(callback, asyncState);
        }
        
        private object[] OnEndGetMapMode(System.IAsyncResult result) {
            WSPoS.POSPrinterServiceReference.MapMode retVal = this.EndGetMapMode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMapModeCompleted(object state) {
            if ((this.GetMapModeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMapModeCompleted(this, new GetMapModeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMapModeAsync() {
            this.GetMapModeAsync(null);
        }
        
        public void GetMapModeAsync(object userState) {
            if ((this.onBeginGetMapModeDelegate == null)) {
                this.onBeginGetMapModeDelegate = new BeginOperationDelegate(this.OnBeginGetMapMode);
            }
            if ((this.onEndGetMapModeDelegate == null)) {
                this.onEndGetMapModeDelegate = new EndOperationDelegate(this.OnEndGetMapMode);
            }
            if ((this.onGetMapModeCompletedDelegate == null)) {
                this.onGetMapModeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMapModeCompleted);
            }
            base.InvokeAsync(this.onBeginGetMapModeDelegate, null, this.onEndGetMapModeDelegate, this.onGetMapModeCompletedDelegate, userState);
        }
        
        public void SetMapMode(WSPoS.POSPrinterServiceReference.MapMode MapMode) {
            base.Channel.SetMapMode(MapMode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetMapMode(WSPoS.POSPrinterServiceReference.MapMode MapMode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetMapMode(MapMode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetMapMode(System.IAsyncResult result) {
            base.Channel.EndSetMapMode(result);
        }
        
        private System.IAsyncResult OnBeginSetMapMode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WSPoS.POSPrinterServiceReference.MapMode MapMode = ((WSPoS.POSPrinterServiceReference.MapMode)(inValues[0]));
            return this.BeginSetMapMode(MapMode, callback, asyncState);
        }
        
        private object[] OnEndSetMapMode(System.IAsyncResult result) {
            this.EndSetMapMode(result);
            return null;
        }
        
        private void OnSetMapModeCompleted(object state) {
            if ((this.SetMapModeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetMapModeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetMapModeAsync(WSPoS.POSPrinterServiceReference.MapMode MapMode) {
            this.SetMapModeAsync(MapMode, null);
        }
        
        public void SetMapModeAsync(WSPoS.POSPrinterServiceReference.MapMode MapMode, object userState) {
            if ((this.onBeginSetMapModeDelegate == null)) {
                this.onBeginSetMapModeDelegate = new BeginOperationDelegate(this.OnBeginSetMapMode);
            }
            if ((this.onEndSetMapModeDelegate == null)) {
                this.onEndSetMapModeDelegate = new EndOperationDelegate(this.OnEndSetMapMode);
            }
            if ((this.onSetMapModeCompletedDelegate == null)) {
                this.onSetMapModeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetMapModeCompleted);
            }
            base.InvokeAsync(this.onBeginSetMapModeDelegate, new object[] {
                        MapMode}, this.onEndSetMapModeDelegate, this.onSetMapModeCompletedDelegate, userState);
        }
        
        public WSPoS.POSPrinterServiceReference.Point GetPageModeArea() {
            return base.Channel.GetPageModeArea();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPageModeArea(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPageModeArea(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WSPoS.POSPrinterServiceReference.Point EndGetPageModeArea(System.IAsyncResult result) {
            return base.Channel.EndGetPageModeArea(result);
        }
        
        private System.IAsyncResult OnBeginGetPageModeArea(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetPageModeArea(callback, asyncState);
        }
        
        private object[] OnEndGetPageModeArea(System.IAsyncResult result) {
            WSPoS.POSPrinterServiceReference.Point retVal = this.EndGetPageModeArea(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPageModeAreaCompleted(object state) {
            if ((this.GetPageModeAreaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPageModeAreaCompleted(this, new GetPageModeAreaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPageModeAreaAsync() {
            this.GetPageModeAreaAsync(null);
        }
        
        public void GetPageModeAreaAsync(object userState) {
            if ((this.onBeginGetPageModeAreaDelegate == null)) {
                this.onBeginGetPageModeAreaDelegate = new BeginOperationDelegate(this.OnBeginGetPageModeArea);
            }
            if ((this.onEndGetPageModeAreaDelegate == null)) {
                this.onEndGetPageModeAreaDelegate = new EndOperationDelegate(this.OnEndGetPageModeArea);
            }
            if ((this.onGetPageModeAreaCompletedDelegate == null)) {
                this.onGetPageModeAreaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPageModeAreaCompleted);
            }
            base.InvokeAsync(this.onBeginGetPageModeAreaDelegate, null, this.onEndGetPageModeAreaDelegate, this.onGetPageModeAreaCompletedDelegate, userState);
        }
        
        public int GetPageModeDescriptor() {
            return base.Channel.GetPageModeDescriptor();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPageModeDescriptor(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPageModeDescriptor(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetPageModeDescriptor(System.IAsyncResult result) {
            return base.Channel.EndGetPageModeDescriptor(result);
        }
        
        private System.IAsyncResult OnBeginGetPageModeDescriptor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetPageModeDescriptor(callback, asyncState);
        }
        
        private object[] OnEndGetPageModeDescriptor(System.IAsyncResult result) {
            int retVal = this.EndGetPageModeDescriptor(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPageModeDescriptorCompleted(object state) {
            if ((this.GetPageModeDescriptorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPageModeDescriptorCompleted(this, new GetPageModeDescriptorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPageModeDescriptorAsync() {
            this.GetPageModeDescriptorAsync(null);
        }
        
        public void GetPageModeDescriptorAsync(object userState) {
            if ((this.onBeginGetPageModeDescriptorDelegate == null)) {
                this.onBeginGetPageModeDescriptorDelegate = new BeginOperationDelegate(this.OnBeginGetPageModeDescriptor);
            }
            if ((this.onEndGetPageModeDescriptorDelegate == null)) {
                this.onEndGetPageModeDescriptorDelegate = new EndOperationDelegate(this.OnEndGetPageModeDescriptor);
            }
            if ((this.onGetPageModeDescriptorCompletedDelegate == null)) {
                this.onGetPageModeDescriptorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPageModeDescriptorCompleted);
            }
            base.InvokeAsync(this.onBeginGetPageModeDescriptorDelegate, null, this.onEndGetPageModeDescriptorDelegate, this.onGetPageModeDescriptorCompletedDelegate, userState);
        }
        
        public int GetPageModeHorizontalPosition() {
            return base.Channel.GetPageModeHorizontalPosition();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPageModeHorizontalPosition(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPageModeHorizontalPosition(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetPageModeHorizontalPosition(System.IAsyncResult result) {
            return base.Channel.EndGetPageModeHorizontalPosition(result);
        }
        
        private System.IAsyncResult OnBeginGetPageModeHorizontalPosition(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetPageModeHorizontalPosition(callback, asyncState);
        }
        
        private object[] OnEndGetPageModeHorizontalPosition(System.IAsyncResult result) {
            int retVal = this.EndGetPageModeHorizontalPosition(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPageModeHorizontalPositionCompleted(object state) {
            if ((this.GetPageModeHorizontalPositionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPageModeHorizontalPositionCompleted(this, new GetPageModeHorizontalPositionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPageModeHorizontalPositionAsync() {
            this.GetPageModeHorizontalPositionAsync(null);
        }
        
        public void GetPageModeHorizontalPositionAsync(object userState) {
            if ((this.onBeginGetPageModeHorizontalPositionDelegate == null)) {
                this.onBeginGetPageModeHorizontalPositionDelegate = new BeginOperationDelegate(this.OnBeginGetPageModeHorizontalPosition);
            }
            if ((this.onEndGetPageModeHorizontalPositionDelegate == null)) {
                this.onEndGetPageModeHorizontalPositionDelegate = new EndOperationDelegate(this.OnEndGetPageModeHorizontalPosition);
            }
            if ((this.onGetPageModeHorizontalPositionCompletedDelegate == null)) {
                this.onGetPageModeHorizontalPositionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPageModeHorizontalPositionCompleted);
            }
            base.InvokeAsync(this.onBeginGetPageModeHorizontalPositionDelegate, null, this.onEndGetPageModeHorizontalPositionDelegate, this.onGetPageModeHorizontalPositionCompletedDelegate, userState);
        }
        
        public void SetPageModeHorizontalPosition(int PageModeHorizontalPosition) {
            base.Channel.SetPageModeHorizontalPosition(PageModeHorizontalPosition);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetPageModeHorizontalPosition(int PageModeHorizontalPosition, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetPageModeHorizontalPosition(PageModeHorizontalPosition, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetPageModeHorizontalPosition(System.IAsyncResult result) {
            base.Channel.EndSetPageModeHorizontalPosition(result);
        }
        
        private System.IAsyncResult OnBeginSetPageModeHorizontalPosition(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int PageModeHorizontalPosition = ((int)(inValues[0]));
            return this.BeginSetPageModeHorizontalPosition(PageModeHorizontalPosition, callback, asyncState);
        }
        
        private object[] OnEndSetPageModeHorizontalPosition(System.IAsyncResult result) {
            this.EndSetPageModeHorizontalPosition(result);
            return null;
        }
        
        private void OnSetPageModeHorizontalPositionCompleted(object state) {
            if ((this.SetPageModeHorizontalPositionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetPageModeHorizontalPositionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetPageModeHorizontalPositionAsync(int PageModeHorizontalPosition) {
            this.SetPageModeHorizontalPositionAsync(PageModeHorizontalPosition, null);
        }
        
        public void SetPageModeHorizontalPositionAsync(int PageModeHorizontalPosition, object userState) {
            if ((this.onBeginSetPageModeHorizontalPositionDelegate == null)) {
                this.onBeginSetPageModeHorizontalPositionDelegate = new BeginOperationDelegate(this.OnBeginSetPageModeHorizontalPosition);
            }
            if ((this.onEndSetPageModeHorizontalPositionDelegate == null)) {
                this.onEndSetPageModeHorizontalPositionDelegate = new EndOperationDelegate(this.OnEndSetPageModeHorizontalPosition);
            }
            if ((this.onSetPageModeHorizontalPositionCompletedDelegate == null)) {
                this.onSetPageModeHorizontalPositionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetPageModeHorizontalPositionCompleted);
            }
            base.InvokeAsync(this.onBeginSetPageModeHorizontalPositionDelegate, new object[] {
                        PageModeHorizontalPosition}, this.onEndSetPageModeHorizontalPositionDelegate, this.onSetPageModeHorizontalPositionCompletedDelegate, userState);
        }
        
        public WSPoS.POSPrinterServiceReference.Rectangle GetPageModePrintArea() {
            return base.Channel.GetPageModePrintArea();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPageModePrintArea(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPageModePrintArea(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WSPoS.POSPrinterServiceReference.Rectangle EndGetPageModePrintArea(System.IAsyncResult result) {
            return base.Channel.EndGetPageModePrintArea(result);
        }
        
        private System.IAsyncResult OnBeginGetPageModePrintArea(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetPageModePrintArea(callback, asyncState);
        }
        
        private object[] OnEndGetPageModePrintArea(System.IAsyncResult result) {
            WSPoS.POSPrinterServiceReference.Rectangle retVal = this.EndGetPageModePrintArea(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPageModePrintAreaCompleted(object state) {
            if ((this.GetPageModePrintAreaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPageModePrintAreaCompleted(this, new GetPageModePrintAreaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPageModePrintAreaAsync() {
            this.GetPageModePrintAreaAsync(null);
        }
        
        public void GetPageModePrintAreaAsync(object userState) {
            if ((this.onBeginGetPageModePrintAreaDelegate == null)) {
                this.onBeginGetPageModePrintAreaDelegate = new BeginOperationDelegate(this.OnBeginGetPageModePrintArea);
            }
            if ((this.onEndGetPageModePrintAreaDelegate == null)) {
                this.onEndGetPageModePrintAreaDelegate = new EndOperationDelegate(this.OnEndGetPageModePrintArea);
            }
            if ((this.onGetPageModePrintAreaCompletedDelegate == null)) {
                this.onGetPageModePrintAreaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPageModePrintAreaCompleted);
            }
            base.InvokeAsync(this.onBeginGetPageModePrintAreaDelegate, null, this.onEndGetPageModePrintAreaDelegate, this.onGetPageModePrintAreaCompletedDelegate, userState);
        }
        
        public void SetPageModePrintArea(WSPoS.POSPrinterServiceReference.Rectangle PageModePrintArea) {
            base.Channel.SetPageModePrintArea(PageModePrintArea);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetPageModePrintArea(WSPoS.POSPrinterServiceReference.Rectangle PageModePrintArea, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetPageModePrintArea(PageModePrintArea, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetPageModePrintArea(System.IAsyncResult result) {
            base.Channel.EndSetPageModePrintArea(result);
        }
        
        private System.IAsyncResult OnBeginSetPageModePrintArea(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WSPoS.POSPrinterServiceReference.Rectangle PageModePrintArea = ((WSPoS.POSPrinterServiceReference.Rectangle)(inValues[0]));
            return this.BeginSetPageModePrintArea(PageModePrintArea, callback, asyncState);
        }
        
        private object[] OnEndSetPageModePrintArea(System.IAsyncResult result) {
            this.EndSetPageModePrintArea(result);
            return null;
        }
        
        private void OnSetPageModePrintAreaCompleted(object state) {
            if ((this.SetPageModePrintAreaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetPageModePrintAreaCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetPageModePrintAreaAsync(WSPoS.POSPrinterServiceReference.Rectangle PageModePrintArea) {
            this.SetPageModePrintAreaAsync(PageModePrintArea, null);
        }
        
        public void SetPageModePrintAreaAsync(WSPoS.POSPrinterServiceReference.Rectangle PageModePrintArea, object userState) {
            if ((this.onBeginSetPageModePrintAreaDelegate == null)) {
                this.onBeginSetPageModePrintAreaDelegate = new BeginOperationDelegate(this.OnBeginSetPageModePrintArea);
            }
            if ((this.onEndSetPageModePrintAreaDelegate == null)) {
                this.onEndSetPageModePrintAreaDelegate = new EndOperationDelegate(this.OnEndSetPageModePrintArea);
            }
            if ((this.onSetPageModePrintAreaCompletedDelegate == null)) {
                this.onSetPageModePrintAreaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetPageModePrintAreaCompleted);
            }
            base.InvokeAsync(this.onBeginSetPageModePrintAreaDelegate, new object[] {
                        PageModePrintArea}, this.onEndSetPageModePrintAreaDelegate, this.onSetPageModePrintAreaCompletedDelegate, userState);
        }
        
        public WSPoS.POSPrinterServiceReference.PageModePrintDirection GetPageModePrintDirection() {
            return base.Channel.GetPageModePrintDirection();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPageModePrintDirection(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPageModePrintDirection(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WSPoS.POSPrinterServiceReference.PageModePrintDirection EndGetPageModePrintDirection(System.IAsyncResult result) {
            return base.Channel.EndGetPageModePrintDirection(result);
        }
        
        private System.IAsyncResult OnBeginGetPageModePrintDirection(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetPageModePrintDirection(callback, asyncState);
        }
        
        private object[] OnEndGetPageModePrintDirection(System.IAsyncResult result) {
            WSPoS.POSPrinterServiceReference.PageModePrintDirection retVal = this.EndGetPageModePrintDirection(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPageModePrintDirectionCompleted(object state) {
            if ((this.GetPageModePrintDirectionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPageModePrintDirectionCompleted(this, new GetPageModePrintDirectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPageModePrintDirectionAsync() {
            this.GetPageModePrintDirectionAsync(null);
        }
        
        public void GetPageModePrintDirectionAsync(object userState) {
            if ((this.onBeginGetPageModePrintDirectionDelegate == null)) {
                this.onBeginGetPageModePrintDirectionDelegate = new BeginOperationDelegate(this.OnBeginGetPageModePrintDirection);
            }
            if ((this.onEndGetPageModePrintDirectionDelegate == null)) {
                this.onEndGetPageModePrintDirectionDelegate = new EndOperationDelegate(this.OnEndGetPageModePrintDirection);
            }
            if ((this.onGetPageModePrintDirectionCompletedDelegate == null)) {
                this.onGetPageModePrintDirectionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPageModePrintDirectionCompleted);
            }
            base.InvokeAsync(this.onBeginGetPageModePrintDirectionDelegate, null, this.onEndGetPageModePrintDirectionDelegate, this.onGetPageModePrintDirectionCompletedDelegate, userState);
        }
        
        public void SetPageModePrintDirection(WSPoS.POSPrinterServiceReference.PageModePrintDirection PageModePrintDirection) {
            base.Channel.SetPageModePrintDirection(PageModePrintDirection);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetPageModePrintDirection(WSPoS.POSPrinterServiceReference.PageModePrintDirection PageModePrintDirection, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetPageModePrintDirection(PageModePrintDirection, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetPageModePrintDirection(System.IAsyncResult result) {
            base.Channel.EndSetPageModePrintDirection(result);
        }
        
        private System.IAsyncResult OnBeginSetPageModePrintDirection(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WSPoS.POSPrinterServiceReference.PageModePrintDirection PageModePrintDirection = ((WSPoS.POSPrinterServiceReference.PageModePrintDirection)(inValues[0]));
            return this.BeginSetPageModePrintDirection(PageModePrintDirection, callback, asyncState);
        }
        
        private object[] OnEndSetPageModePrintDirection(System.IAsyncResult result) {
            this.EndSetPageModePrintDirection(result);
            return null;
        }
        
        private void OnSetPageModePrintDirectionCompleted(object state) {
            if ((this.SetPageModePrintDirectionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetPageModePrintDirectionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetPageModePrintDirectionAsync(WSPoS.POSPrinterServiceReference.PageModePrintDirection PageModePrintDirection) {
            this.SetPageModePrintDirectionAsync(PageModePrintDirection, null);
        }
        
        public void SetPageModePrintDirectionAsync(WSPoS.POSPrinterServiceReference.PageModePrintDirection PageModePrintDirection, object userState) {
            if ((this.onBeginSetPageModePrintDirectionDelegate == null)) {
                this.onBeginSetPageModePrintDirectionDelegate = new BeginOperationDelegate(this.OnBeginSetPageModePrintDirection);
            }
            if ((this.onEndSetPageModePrintDirectionDelegate == null)) {
                this.onEndSetPageModePrintDirectionDelegate = new EndOperationDelegate(this.OnEndSetPageModePrintDirection);
            }
            if ((this.onSetPageModePrintDirectionCompletedDelegate == null)) {
                this.onSetPageModePrintDirectionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetPageModePrintDirectionCompleted);
            }
            base.InvokeAsync(this.onBeginSetPageModePrintDirectionDelegate, new object[] {
                        PageModePrintDirection}, this.onEndSetPageModePrintDirectionDelegate, this.onSetPageModePrintDirectionCompletedDelegate, userState);
        }
        
        public WSPoS.POSPrinterServiceReference.PrinterStation GetPageModeStation() {
            return base.Channel.GetPageModeStation();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPageModeStation(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPageModeStation(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WSPoS.POSPrinterServiceReference.PrinterStation EndGetPageModeStation(System.IAsyncResult result) {
            return base.Channel.EndGetPageModeStation(result);
        }
        
        private System.IAsyncResult OnBeginGetPageModeStation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetPageModeStation(callback, asyncState);
        }
        
        private object[] OnEndGetPageModeStation(System.IAsyncResult result) {
            WSPoS.POSPrinterServiceReference.PrinterStation retVal = this.EndGetPageModeStation(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPageModeStationCompleted(object state) {
            if ((this.GetPageModeStationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPageModeStationCompleted(this, new GetPageModeStationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPageModeStationAsync() {
            this.GetPageModeStationAsync(null);
        }
        
        public void GetPageModeStationAsync(object userState) {
            if ((this.onBeginGetPageModeStationDelegate == null)) {
                this.onBeginGetPageModeStationDelegate = new BeginOperationDelegate(this.OnBeginGetPageModeStation);
            }
            if ((this.onEndGetPageModeStationDelegate == null)) {
                this.onEndGetPageModeStationDelegate = new EndOperationDelegate(this.OnEndGetPageModeStation);
            }
            if ((this.onGetPageModeStationCompletedDelegate == null)) {
                this.onGetPageModeStationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPageModeStationCompleted);
            }
            base.InvokeAsync(this.onBeginGetPageModeStationDelegate, null, this.onEndGetPageModeStationDelegate, this.onGetPageModeStationCompletedDelegate, userState);
        }
        
        public void SetPageModeStation(WSPoS.POSPrinterServiceReference.PrinterStation PageModeStation) {
            base.Channel.SetPageModeStation(PageModeStation);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetPageModeStation(WSPoS.POSPrinterServiceReference.PrinterStation PageModeStation, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetPageModeStation(PageModeStation, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetPageModeStation(System.IAsyncResult result) {
            base.Channel.EndSetPageModeStation(result);
        }
        
        private System.IAsyncResult OnBeginSetPageModeStation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WSPoS.POSPrinterServiceReference.PrinterStation PageModeStation = ((WSPoS.POSPrinterServiceReference.PrinterStation)(inValues[0]));
            return this.BeginSetPageModeStation(PageModeStation, callback, asyncState);
        }
        
        private object[] OnEndSetPageModeStation(System.IAsyncResult result) {
            this.EndSetPageModeStation(result);
            return null;
        }
        
        private void OnSetPageModeStationCompleted(object state) {
            if ((this.SetPageModeStationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetPageModeStationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetPageModeStationAsync(WSPoS.POSPrinterServiceReference.PrinterStation PageModeStation) {
            this.SetPageModeStationAsync(PageModeStation, null);
        }
        
        public void SetPageModeStationAsync(WSPoS.POSPrinterServiceReference.PrinterStation PageModeStation, object userState) {
            if ((this.onBeginSetPageModeStationDelegate == null)) {
                this.onBeginSetPageModeStationDelegate = new BeginOperationDelegate(this.OnBeginSetPageModeStation);
            }
            if ((this.onEndSetPageModeStationDelegate == null)) {
                this.onEndSetPageModeStationDelegate = new EndOperationDelegate(this.OnEndSetPageModeStation);
            }
            if ((this.onSetPageModeStationCompletedDelegate == null)) {
                this.onSetPageModeStationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetPageModeStationCompleted);
            }
            base.InvokeAsync(this.onBeginSetPageModeStationDelegate, new object[] {
                        PageModeStation}, this.onEndSetPageModeStationDelegate, this.onSetPageModeStationCompletedDelegate, userState);
        }
        
        public int GetPageModeVerticalPosition() {
            return base.Channel.GetPageModeVerticalPosition();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPageModeVerticalPosition(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPageModeVerticalPosition(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetPageModeVerticalPosition(System.IAsyncResult result) {
            return base.Channel.EndGetPageModeVerticalPosition(result);
        }
        
        private System.IAsyncResult OnBeginGetPageModeVerticalPosition(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetPageModeVerticalPosition(callback, asyncState);
        }
        
        private object[] OnEndGetPageModeVerticalPosition(System.IAsyncResult result) {
            int retVal = this.EndGetPageModeVerticalPosition(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPageModeVerticalPositionCompleted(object state) {
            if ((this.GetPageModeVerticalPositionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPageModeVerticalPositionCompleted(this, new GetPageModeVerticalPositionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPageModeVerticalPositionAsync() {
            this.GetPageModeVerticalPositionAsync(null);
        }
        
        public void GetPageModeVerticalPositionAsync(object userState) {
            if ((this.onBeginGetPageModeVerticalPositionDelegate == null)) {
                this.onBeginGetPageModeVerticalPositionDelegate = new BeginOperationDelegate(this.OnBeginGetPageModeVerticalPosition);
            }
            if ((this.onEndGetPageModeVerticalPositionDelegate == null)) {
                this.onEndGetPageModeVerticalPositionDelegate = new EndOperationDelegate(this.OnEndGetPageModeVerticalPosition);
            }
            if ((this.onGetPageModeVerticalPositionCompletedDelegate == null)) {
                this.onGetPageModeVerticalPositionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPageModeVerticalPositionCompleted);
            }
            base.InvokeAsync(this.onBeginGetPageModeVerticalPositionDelegate, null, this.onEndGetPageModeVerticalPositionDelegate, this.onGetPageModeVerticalPositionCompletedDelegate, userState);
        }
        
        public void SetPageModeVerticalPosition(int PageModeVerticalPosition) {
            base.Channel.SetPageModeVerticalPosition(PageModeVerticalPosition);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetPageModeVerticalPosition(int PageModeVerticalPosition, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetPageModeVerticalPosition(PageModeVerticalPosition, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetPageModeVerticalPosition(System.IAsyncResult result) {
            base.Channel.EndSetPageModeVerticalPosition(result);
        }
        
        private System.IAsyncResult OnBeginSetPageModeVerticalPosition(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int PageModeVerticalPosition = ((int)(inValues[0]));
            return this.BeginSetPageModeVerticalPosition(PageModeVerticalPosition, callback, asyncState);
        }
        
        private object[] OnEndSetPageModeVerticalPosition(System.IAsyncResult result) {
            this.EndSetPageModeVerticalPosition(result);
            return null;
        }
        
        private void OnSetPageModeVerticalPositionCompleted(object state) {
            if ((this.SetPageModeVerticalPositionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetPageModeVerticalPositionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetPageModeVerticalPositionAsync(int PageModeVerticalPosition) {
            this.SetPageModeVerticalPositionAsync(PageModeVerticalPosition, null);
        }
        
        public void SetPageModeVerticalPositionAsync(int PageModeVerticalPosition, object userState) {
            if ((this.onBeginSetPageModeVerticalPositionDelegate == null)) {
                this.onBeginSetPageModeVerticalPositionDelegate = new BeginOperationDelegate(this.OnBeginSetPageModeVerticalPosition);
            }
            if ((this.onEndSetPageModeVerticalPositionDelegate == null)) {
                this.onEndSetPageModeVerticalPositionDelegate = new EndOperationDelegate(this.OnEndSetPageModeVerticalPosition);
            }
            if ((this.onSetPageModeVerticalPositionCompletedDelegate == null)) {
                this.onSetPageModeVerticalPositionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetPageModeVerticalPositionCompleted);
            }
            base.InvokeAsync(this.onBeginSetPageModeVerticalPositionDelegate, new object[] {
                        PageModeVerticalPosition}, this.onEndSetPageModeVerticalPositionDelegate, this.onSetPageModeVerticalPositionCompletedDelegate, userState);
        }
        
        public WSPoS.POSPrinterServiceReference.Rotation GetRotateSpecial() {
            return base.Channel.GetRotateSpecial();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRotateSpecial(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRotateSpecial(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WSPoS.POSPrinterServiceReference.Rotation EndGetRotateSpecial(System.IAsyncResult result) {
            return base.Channel.EndGetRotateSpecial(result);
        }
        
        private System.IAsyncResult OnBeginGetRotateSpecial(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetRotateSpecial(callback, asyncState);
        }
        
        private object[] OnEndGetRotateSpecial(System.IAsyncResult result) {
            WSPoS.POSPrinterServiceReference.Rotation retVal = this.EndGetRotateSpecial(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRotateSpecialCompleted(object state) {
            if ((this.GetRotateSpecialCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRotateSpecialCompleted(this, new GetRotateSpecialCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRotateSpecialAsync() {
            this.GetRotateSpecialAsync(null);
        }
        
        public void GetRotateSpecialAsync(object userState) {
            if ((this.onBeginGetRotateSpecialDelegate == null)) {
                this.onBeginGetRotateSpecialDelegate = new BeginOperationDelegate(this.OnBeginGetRotateSpecial);
            }
            if ((this.onEndGetRotateSpecialDelegate == null)) {
                this.onEndGetRotateSpecialDelegate = new EndOperationDelegate(this.OnEndGetRotateSpecial);
            }
            if ((this.onGetRotateSpecialCompletedDelegate == null)) {
                this.onGetRotateSpecialCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRotateSpecialCompleted);
            }
            base.InvokeAsync(this.onBeginGetRotateSpecialDelegate, null, this.onEndGetRotateSpecialDelegate, this.onGetRotateSpecialCompletedDelegate, userState);
        }
        
        public void SetRotateSpecial(WSPoS.POSPrinterServiceReference.Rotation RotateSpecial) {
            base.Channel.SetRotateSpecial(RotateSpecial);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetRotateSpecial(WSPoS.POSPrinterServiceReference.Rotation RotateSpecial, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetRotateSpecial(RotateSpecial, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetRotateSpecial(System.IAsyncResult result) {
            base.Channel.EndSetRotateSpecial(result);
        }
        
        private System.IAsyncResult OnBeginSetRotateSpecial(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WSPoS.POSPrinterServiceReference.Rotation RotateSpecial = ((WSPoS.POSPrinterServiceReference.Rotation)(inValues[0]));
            return this.BeginSetRotateSpecial(RotateSpecial, callback, asyncState);
        }
        
        private object[] OnEndSetRotateSpecial(System.IAsyncResult result) {
            this.EndSetRotateSpecial(result);
            return null;
        }
        
        private void OnSetRotateSpecialCompleted(object state) {
            if ((this.SetRotateSpecialCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetRotateSpecialCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetRotateSpecialAsync(WSPoS.POSPrinterServiceReference.Rotation RotateSpecial) {
            this.SetRotateSpecialAsync(RotateSpecial, null);
        }
        
        public void SetRotateSpecialAsync(WSPoS.POSPrinterServiceReference.Rotation RotateSpecial, object userState) {
            if ((this.onBeginSetRotateSpecialDelegate == null)) {
                this.onBeginSetRotateSpecialDelegate = new BeginOperationDelegate(this.OnBeginSetRotateSpecial);
            }
            if ((this.onEndSetRotateSpecialDelegate == null)) {
                this.onEndSetRotateSpecialDelegate = new EndOperationDelegate(this.OnEndSetRotateSpecial);
            }
            if ((this.onSetRotateSpecialCompletedDelegate == null)) {
                this.onSetRotateSpecialCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetRotateSpecialCompleted);
            }
            base.InvokeAsync(this.onBeginSetRotateSpecialDelegate, new object[] {
                        RotateSpecial}, this.onEndSetRotateSpecialDelegate, this.onSetRotateSpecialCompletedDelegate, userState);
        }
        
        public int GetJrnLineChars() {
            return base.Channel.GetJrnLineChars();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetJrnLineChars(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetJrnLineChars(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetJrnLineChars(System.IAsyncResult result) {
            return base.Channel.EndGetJrnLineChars(result);
        }
        
        private System.IAsyncResult OnBeginGetJrnLineChars(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetJrnLineChars(callback, asyncState);
        }
        
        private object[] OnEndGetJrnLineChars(System.IAsyncResult result) {
            int retVal = this.EndGetJrnLineChars(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetJrnLineCharsCompleted(object state) {
            if ((this.GetJrnLineCharsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetJrnLineCharsCompleted(this, new GetJrnLineCharsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetJrnLineCharsAsync() {
            this.GetJrnLineCharsAsync(null);
        }
        
        public void GetJrnLineCharsAsync(object userState) {
            if ((this.onBeginGetJrnLineCharsDelegate == null)) {
                this.onBeginGetJrnLineCharsDelegate = new BeginOperationDelegate(this.OnBeginGetJrnLineChars);
            }
            if ((this.onEndGetJrnLineCharsDelegate == null)) {
                this.onEndGetJrnLineCharsDelegate = new EndOperationDelegate(this.OnEndGetJrnLineChars);
            }
            if ((this.onGetJrnLineCharsCompletedDelegate == null)) {
                this.onGetJrnLineCharsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetJrnLineCharsCompleted);
            }
            base.InvokeAsync(this.onBeginGetJrnLineCharsDelegate, null, this.onEndGetJrnLineCharsDelegate, this.onGetJrnLineCharsCompletedDelegate, userState);
        }
        
        public void SetJrnLineChars(int JrnLineChars) {
            base.Channel.SetJrnLineChars(JrnLineChars);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetJrnLineChars(int JrnLineChars, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetJrnLineChars(JrnLineChars, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetJrnLineChars(System.IAsyncResult result) {
            base.Channel.EndSetJrnLineChars(result);
        }
        
        private System.IAsyncResult OnBeginSetJrnLineChars(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int JrnLineChars = ((int)(inValues[0]));
            return this.BeginSetJrnLineChars(JrnLineChars, callback, asyncState);
        }
        
        private object[] OnEndSetJrnLineChars(System.IAsyncResult result) {
            this.EndSetJrnLineChars(result);
            return null;
        }
        
        private void OnSetJrnLineCharsCompleted(object state) {
            if ((this.SetJrnLineCharsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetJrnLineCharsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetJrnLineCharsAsync(int JrnLineChars) {
            this.SetJrnLineCharsAsync(JrnLineChars, null);
        }
        
        public void SetJrnLineCharsAsync(int JrnLineChars, object userState) {
            if ((this.onBeginSetJrnLineCharsDelegate == null)) {
                this.onBeginSetJrnLineCharsDelegate = new BeginOperationDelegate(this.OnBeginSetJrnLineChars);
            }
            if ((this.onEndSetJrnLineCharsDelegate == null)) {
                this.onEndSetJrnLineCharsDelegate = new EndOperationDelegate(this.OnEndSetJrnLineChars);
            }
            if ((this.onSetJrnLineCharsCompletedDelegate == null)) {
                this.onSetJrnLineCharsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetJrnLineCharsCompleted);
            }
            base.InvokeAsync(this.onBeginSetJrnLineCharsDelegate, new object[] {
                        JrnLineChars}, this.onEndSetJrnLineCharsDelegate, this.onSetJrnLineCharsCompletedDelegate, userState);
        }
        
        public WSPoS.POSPrinterServiceReference.LineCharsList GetJrnLineCharsList() {
            return base.Channel.GetJrnLineCharsList();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetJrnLineCharsList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetJrnLineCharsList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WSPoS.POSPrinterServiceReference.LineCharsList EndGetJrnLineCharsList(System.IAsyncResult result) {
            return base.Channel.EndGetJrnLineCharsList(result);
        }
        
        private System.IAsyncResult OnBeginGetJrnLineCharsList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetJrnLineCharsList(callback, asyncState);
        }
        
        private object[] OnEndGetJrnLineCharsList(System.IAsyncResult result) {
            WSPoS.POSPrinterServiceReference.LineCharsList retVal = this.EndGetJrnLineCharsList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetJrnLineCharsListCompleted(object state) {
            if ((this.GetJrnLineCharsListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetJrnLineCharsListCompleted(this, new GetJrnLineCharsListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetJrnLineCharsListAsync() {
            this.GetJrnLineCharsListAsync(null);
        }
        
        public void GetJrnLineCharsListAsync(object userState) {
            if ((this.onBeginGetJrnLineCharsListDelegate == null)) {
                this.onBeginGetJrnLineCharsListDelegate = new BeginOperationDelegate(this.OnBeginGetJrnLineCharsList);
            }
            if ((this.onEndGetJrnLineCharsListDelegate == null)) {
                this.onEndGetJrnLineCharsListDelegate = new EndOperationDelegate(this.OnEndGetJrnLineCharsList);
            }
            if ((this.onGetJrnLineCharsListCompletedDelegate == null)) {
                this.onGetJrnLineCharsListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetJrnLineCharsListCompleted);
            }
            base.InvokeAsync(this.onBeginGetJrnLineCharsListDelegate, null, this.onEndGetJrnLineCharsListDelegate, this.onGetJrnLineCharsListCompletedDelegate, userState);
        }
        
        public int GetJrnLineHeight() {
            return base.Channel.GetJrnLineHeight();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetJrnLineHeight(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetJrnLineHeight(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetJrnLineHeight(System.IAsyncResult result) {
            return base.Channel.EndGetJrnLineHeight(result);
        }
        
        private System.IAsyncResult OnBeginGetJrnLineHeight(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetJrnLineHeight(callback, asyncState);
        }
        
        private object[] OnEndGetJrnLineHeight(System.IAsyncResult result) {
            int retVal = this.EndGetJrnLineHeight(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetJrnLineHeightCompleted(object state) {
            if ((this.GetJrnLineHeightCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetJrnLineHeightCompleted(this, new GetJrnLineHeightCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetJrnLineHeightAsync() {
            this.GetJrnLineHeightAsync(null);
        }
        
        public void GetJrnLineHeightAsync(object userState) {
            if ((this.onBeginGetJrnLineHeightDelegate == null)) {
                this.onBeginGetJrnLineHeightDelegate = new BeginOperationDelegate(this.OnBeginGetJrnLineHeight);
            }
            if ((this.onEndGetJrnLineHeightDelegate == null)) {
                this.onEndGetJrnLineHeightDelegate = new EndOperationDelegate(this.OnEndGetJrnLineHeight);
            }
            if ((this.onGetJrnLineHeightCompletedDelegate == null)) {
                this.onGetJrnLineHeightCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetJrnLineHeightCompleted);
            }
            base.InvokeAsync(this.onBeginGetJrnLineHeightDelegate, null, this.onEndGetJrnLineHeightDelegate, this.onGetJrnLineHeightCompletedDelegate, userState);
        }
        
        public void SetJrnLineHeight(int JrnLineHeight) {
            base.Channel.SetJrnLineHeight(JrnLineHeight);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetJrnLineHeight(int JrnLineHeight, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetJrnLineHeight(JrnLineHeight, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetJrnLineHeight(System.IAsyncResult result) {
            base.Channel.EndSetJrnLineHeight(result);
        }
        
        private System.IAsyncResult OnBeginSetJrnLineHeight(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int JrnLineHeight = ((int)(inValues[0]));
            return this.BeginSetJrnLineHeight(JrnLineHeight, callback, asyncState);
        }
        
        private object[] OnEndSetJrnLineHeight(System.IAsyncResult result) {
            this.EndSetJrnLineHeight(result);
            return null;
        }
        
        private void OnSetJrnLineHeightCompleted(object state) {
            if ((this.SetJrnLineHeightCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetJrnLineHeightCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetJrnLineHeightAsync(int JrnLineHeight) {
            this.SetJrnLineHeightAsync(JrnLineHeight, null);
        }
        
        public void SetJrnLineHeightAsync(int JrnLineHeight, object userState) {
            if ((this.onBeginSetJrnLineHeightDelegate == null)) {
                this.onBeginSetJrnLineHeightDelegate = new BeginOperationDelegate(this.OnBeginSetJrnLineHeight);
            }
            if ((this.onEndSetJrnLineHeightDelegate == null)) {
                this.onEndSetJrnLineHeightDelegate = new EndOperationDelegate(this.OnEndSetJrnLineHeight);
            }
            if ((this.onSetJrnLineHeightCompletedDelegate == null)) {
                this.onSetJrnLineHeightCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetJrnLineHeightCompleted);
            }
            base.InvokeAsync(this.onBeginSetJrnLineHeightDelegate, new object[] {
                        JrnLineHeight}, this.onEndSetJrnLineHeightDelegate, this.onSetJrnLineHeightCompletedDelegate, userState);
        }
        
        public int GetJrnLineSpacing() {
            return base.Channel.GetJrnLineSpacing();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetJrnLineSpacing(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetJrnLineSpacing(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetJrnLineSpacing(System.IAsyncResult result) {
            return base.Channel.EndGetJrnLineSpacing(result);
        }
        
        private System.IAsyncResult OnBeginGetJrnLineSpacing(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetJrnLineSpacing(callback, asyncState);
        }
        
        private object[] OnEndGetJrnLineSpacing(System.IAsyncResult result) {
            int retVal = this.EndGetJrnLineSpacing(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetJrnLineSpacingCompleted(object state) {
            if ((this.GetJrnLineSpacingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetJrnLineSpacingCompleted(this, new GetJrnLineSpacingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetJrnLineSpacingAsync() {
            this.GetJrnLineSpacingAsync(null);
        }
        
        public void GetJrnLineSpacingAsync(object userState) {
            if ((this.onBeginGetJrnLineSpacingDelegate == null)) {
                this.onBeginGetJrnLineSpacingDelegate = new BeginOperationDelegate(this.OnBeginGetJrnLineSpacing);
            }
            if ((this.onEndGetJrnLineSpacingDelegate == null)) {
                this.onEndGetJrnLineSpacingDelegate = new EndOperationDelegate(this.OnEndGetJrnLineSpacing);
            }
            if ((this.onGetJrnLineSpacingCompletedDelegate == null)) {
                this.onGetJrnLineSpacingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetJrnLineSpacingCompleted);
            }
            base.InvokeAsync(this.onBeginGetJrnLineSpacingDelegate, null, this.onEndGetJrnLineSpacingDelegate, this.onGetJrnLineSpacingCompletedDelegate, userState);
        }
        
        public void SetJrnLineSpacing(int JrnLineSpacing) {
            base.Channel.SetJrnLineSpacing(JrnLineSpacing);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetJrnLineSpacing(int JrnLineSpacing, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetJrnLineSpacing(JrnLineSpacing, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetJrnLineSpacing(System.IAsyncResult result) {
            base.Channel.EndSetJrnLineSpacing(result);
        }
        
        private System.IAsyncResult OnBeginSetJrnLineSpacing(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int JrnLineSpacing = ((int)(inValues[0]));
            return this.BeginSetJrnLineSpacing(JrnLineSpacing, callback, asyncState);
        }
        
        private object[] OnEndSetJrnLineSpacing(System.IAsyncResult result) {
            this.EndSetJrnLineSpacing(result);
            return null;
        }
        
        private void OnSetJrnLineSpacingCompleted(object state) {
            if ((this.SetJrnLineSpacingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetJrnLineSpacingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetJrnLineSpacingAsync(int JrnLineSpacing) {
            this.SetJrnLineSpacingAsync(JrnLineSpacing, null);
        }
        
        public void SetJrnLineSpacingAsync(int JrnLineSpacing, object userState) {
            if ((this.onBeginSetJrnLineSpacingDelegate == null)) {
                this.onBeginSetJrnLineSpacingDelegate = new BeginOperationDelegate(this.OnBeginSetJrnLineSpacing);
            }
            if ((this.onEndSetJrnLineSpacingDelegate == null)) {
                this.onEndSetJrnLineSpacingDelegate = new EndOperationDelegate(this.OnEndSetJrnLineSpacing);
            }
            if ((this.onSetJrnLineSpacingCompletedDelegate == null)) {
                this.onSetJrnLineSpacingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetJrnLineSpacingCompleted);
            }
            base.InvokeAsync(this.onBeginSetJrnLineSpacingDelegate, new object[] {
                        JrnLineSpacing}, this.onEndSetJrnLineSpacingDelegate, this.onSetJrnLineSpacingCompletedDelegate, userState);
        }
        
        public int GetJrnLineWidth() {
            return base.Channel.GetJrnLineWidth();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetJrnLineWidth(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetJrnLineWidth(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetJrnLineWidth(System.IAsyncResult result) {
            return base.Channel.EndGetJrnLineWidth(result);
        }
        
        private System.IAsyncResult OnBeginGetJrnLineWidth(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetJrnLineWidth(callback, asyncState);
        }
        
        private object[] OnEndGetJrnLineWidth(System.IAsyncResult result) {
            int retVal = this.EndGetJrnLineWidth(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetJrnLineWidthCompleted(object state) {
            if ((this.GetJrnLineWidthCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetJrnLineWidthCompleted(this, new GetJrnLineWidthCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetJrnLineWidthAsync() {
            this.GetJrnLineWidthAsync(null);
        }
        
        public void GetJrnLineWidthAsync(object userState) {
            if ((this.onBeginGetJrnLineWidthDelegate == null)) {
                this.onBeginGetJrnLineWidthDelegate = new BeginOperationDelegate(this.OnBeginGetJrnLineWidth);
            }
            if ((this.onEndGetJrnLineWidthDelegate == null)) {
                this.onEndGetJrnLineWidthDelegate = new EndOperationDelegate(this.OnEndGetJrnLineWidth);
            }
            if ((this.onGetJrnLineWidthCompletedDelegate == null)) {
                this.onGetJrnLineWidthCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetJrnLineWidthCompleted);
            }
            base.InvokeAsync(this.onBeginGetJrnLineWidthDelegate, null, this.onEndGetJrnLineWidthDelegate, this.onGetJrnLineWidthCompletedDelegate, userState);
        }
        
        public bool GetJrnLetterQuality() {
            return base.Channel.GetJrnLetterQuality();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetJrnLetterQuality(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetJrnLetterQuality(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetJrnLetterQuality(System.IAsyncResult result) {
            return base.Channel.EndGetJrnLetterQuality(result);
        }
        
        private System.IAsyncResult OnBeginGetJrnLetterQuality(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetJrnLetterQuality(callback, asyncState);
        }
        
        private object[] OnEndGetJrnLetterQuality(System.IAsyncResult result) {
            bool retVal = this.EndGetJrnLetterQuality(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetJrnLetterQualityCompleted(object state) {
            if ((this.GetJrnLetterQualityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetJrnLetterQualityCompleted(this, new GetJrnLetterQualityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetJrnLetterQualityAsync() {
            this.GetJrnLetterQualityAsync(null);
        }
        
        public void GetJrnLetterQualityAsync(object userState) {
            if ((this.onBeginGetJrnLetterQualityDelegate == null)) {
                this.onBeginGetJrnLetterQualityDelegate = new BeginOperationDelegate(this.OnBeginGetJrnLetterQuality);
            }
            if ((this.onEndGetJrnLetterQualityDelegate == null)) {
                this.onEndGetJrnLetterQualityDelegate = new EndOperationDelegate(this.OnEndGetJrnLetterQuality);
            }
            if ((this.onGetJrnLetterQualityCompletedDelegate == null)) {
                this.onGetJrnLetterQualityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetJrnLetterQualityCompleted);
            }
            base.InvokeAsync(this.onBeginGetJrnLetterQualityDelegate, null, this.onEndGetJrnLetterQualityDelegate, this.onGetJrnLetterQualityCompletedDelegate, userState);
        }
        
        public void SetJrnLetterQuality(bool JrnLetterQuality) {
            base.Channel.SetJrnLetterQuality(JrnLetterQuality);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetJrnLetterQuality(bool JrnLetterQuality, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetJrnLetterQuality(JrnLetterQuality, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetJrnLetterQuality(System.IAsyncResult result) {
            base.Channel.EndSetJrnLetterQuality(result);
        }
        
        private System.IAsyncResult OnBeginSetJrnLetterQuality(object[] inValues, System.AsyncCallback callback, object asyncState) {
            bool JrnLetterQuality = ((bool)(inValues[0]));
            return this.BeginSetJrnLetterQuality(JrnLetterQuality, callback, asyncState);
        }
        
        private object[] OnEndSetJrnLetterQuality(System.IAsyncResult result) {
            this.EndSetJrnLetterQuality(result);
            return null;
        }
        
        private void OnSetJrnLetterQualityCompleted(object state) {
            if ((this.SetJrnLetterQualityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetJrnLetterQualityCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetJrnLetterQualityAsync(bool JrnLetterQuality) {
            this.SetJrnLetterQualityAsync(JrnLetterQuality, null);
        }
        
        public void SetJrnLetterQualityAsync(bool JrnLetterQuality, object userState) {
            if ((this.onBeginSetJrnLetterQualityDelegate == null)) {
                this.onBeginSetJrnLetterQualityDelegate = new BeginOperationDelegate(this.OnBeginSetJrnLetterQuality);
            }
            if ((this.onEndSetJrnLetterQualityDelegate == null)) {
                this.onEndSetJrnLetterQualityDelegate = new EndOperationDelegate(this.OnEndSetJrnLetterQuality);
            }
            if ((this.onSetJrnLetterQualityCompletedDelegate == null)) {
                this.onSetJrnLetterQualityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetJrnLetterQualityCompleted);
            }
            base.InvokeAsync(this.onBeginSetJrnLetterQualityDelegate, new object[] {
                        JrnLetterQuality}, this.onEndSetJrnLetterQualityDelegate, this.onSetJrnLetterQualityCompletedDelegate, userState);
        }
        
        public bool GetJrnEmpty() {
            return base.Channel.GetJrnEmpty();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetJrnEmpty(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetJrnEmpty(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetJrnEmpty(System.IAsyncResult result) {
            return base.Channel.EndGetJrnEmpty(result);
        }
        
        private System.IAsyncResult OnBeginGetJrnEmpty(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetJrnEmpty(callback, asyncState);
        }
        
        private object[] OnEndGetJrnEmpty(System.IAsyncResult result) {
            bool retVal = this.EndGetJrnEmpty(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetJrnEmptyCompleted(object state) {
            if ((this.GetJrnEmptyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetJrnEmptyCompleted(this, new GetJrnEmptyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetJrnEmptyAsync() {
            this.GetJrnEmptyAsync(null);
        }
        
        public void GetJrnEmptyAsync(object userState) {
            if ((this.onBeginGetJrnEmptyDelegate == null)) {
                this.onBeginGetJrnEmptyDelegate = new BeginOperationDelegate(this.OnBeginGetJrnEmpty);
            }
            if ((this.onEndGetJrnEmptyDelegate == null)) {
                this.onEndGetJrnEmptyDelegate = new EndOperationDelegate(this.OnEndGetJrnEmpty);
            }
            if ((this.onGetJrnEmptyCompletedDelegate == null)) {
                this.onGetJrnEmptyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetJrnEmptyCompleted);
            }
            base.InvokeAsync(this.onBeginGetJrnEmptyDelegate, null, this.onEndGetJrnEmptyDelegate, this.onGetJrnEmptyCompletedDelegate, userState);
        }
        
        public bool GetCapSlpPresent() {
            return base.Channel.GetCapSlpPresent();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapSlpPresent(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapSlpPresent(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapSlpPresent(System.IAsyncResult result) {
            return base.Channel.EndGetCapSlpPresent(result);
        }
        
        private System.IAsyncResult OnBeginGetCapSlpPresent(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapSlpPresent(callback, asyncState);
        }
        
        private object[] OnEndGetCapSlpPresent(System.IAsyncResult result) {
            bool retVal = this.EndGetCapSlpPresent(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapSlpPresentCompleted(object state) {
            if ((this.GetCapSlpPresentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapSlpPresentCompleted(this, new GetCapSlpPresentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapSlpPresentAsync() {
            this.GetCapSlpPresentAsync(null);
        }
        
        public void GetCapSlpPresentAsync(object userState) {
            if ((this.onBeginGetCapSlpPresentDelegate == null)) {
                this.onBeginGetCapSlpPresentDelegate = new BeginOperationDelegate(this.OnBeginGetCapSlpPresent);
            }
            if ((this.onEndGetCapSlpPresentDelegate == null)) {
                this.onEndGetCapSlpPresentDelegate = new EndOperationDelegate(this.OnEndGetCapSlpPresent);
            }
            if ((this.onGetCapSlpPresentCompletedDelegate == null)) {
                this.onGetCapSlpPresentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapSlpPresentCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapSlpPresentDelegate, null, this.onEndGetCapSlpPresentDelegate, this.onGetCapSlpPresentCompletedDelegate, userState);
        }
        
        public bool GetCapSlpFullslip() {
            return base.Channel.GetCapSlpFullslip();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapSlpFullslip(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapSlpFullslip(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapSlpFullslip(System.IAsyncResult result) {
            return base.Channel.EndGetCapSlpFullslip(result);
        }
        
        private System.IAsyncResult OnBeginGetCapSlpFullslip(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapSlpFullslip(callback, asyncState);
        }
        
        private object[] OnEndGetCapSlpFullslip(System.IAsyncResult result) {
            bool retVal = this.EndGetCapSlpFullslip(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapSlpFullslipCompleted(object state) {
            if ((this.GetCapSlpFullslipCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapSlpFullslipCompleted(this, new GetCapSlpFullslipCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapSlpFullslipAsync() {
            this.GetCapSlpFullslipAsync(null);
        }
        
        public void GetCapSlpFullslipAsync(object userState) {
            if ((this.onBeginGetCapSlpFullslipDelegate == null)) {
                this.onBeginGetCapSlpFullslipDelegate = new BeginOperationDelegate(this.OnBeginGetCapSlpFullslip);
            }
            if ((this.onEndGetCapSlpFullslipDelegate == null)) {
                this.onEndGetCapSlpFullslipDelegate = new EndOperationDelegate(this.OnEndGetCapSlpFullslip);
            }
            if ((this.onGetCapSlpFullslipCompletedDelegate == null)) {
                this.onGetCapSlpFullslipCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapSlpFullslipCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapSlpFullslipDelegate, null, this.onEndGetCapSlpFullslipDelegate, this.onGetCapSlpFullslipCompletedDelegate, userState);
        }
        
        public bool GetCapSlp2Color() {
            return base.Channel.GetCapSlp2Color();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapSlp2Color(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapSlp2Color(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapSlp2Color(System.IAsyncResult result) {
            return base.Channel.EndGetCapSlp2Color(result);
        }
        
        private System.IAsyncResult OnBeginGetCapSlp2Color(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapSlp2Color(callback, asyncState);
        }
        
        private object[] OnEndGetCapSlp2Color(System.IAsyncResult result) {
            bool retVal = this.EndGetCapSlp2Color(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapSlp2ColorCompleted(object state) {
            if ((this.GetCapSlp2ColorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapSlp2ColorCompleted(this, new GetCapSlp2ColorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapSlp2ColorAsync() {
            this.GetCapSlp2ColorAsync(null);
        }
        
        public void GetCapSlp2ColorAsync(object userState) {
            if ((this.onBeginGetCapSlp2ColorDelegate == null)) {
                this.onBeginGetCapSlp2ColorDelegate = new BeginOperationDelegate(this.OnBeginGetCapSlp2Color);
            }
            if ((this.onEndGetCapSlp2ColorDelegate == null)) {
                this.onEndGetCapSlp2ColorDelegate = new EndOperationDelegate(this.OnEndGetCapSlp2Color);
            }
            if ((this.onGetCapSlp2ColorCompletedDelegate == null)) {
                this.onGetCapSlp2ColorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapSlp2ColorCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapSlp2ColorDelegate, null, this.onEndGetCapSlp2ColorDelegate, this.onGetCapSlp2ColorCompletedDelegate, userState);
        }
        
        public bool GetCapSlpBarCode() {
            return base.Channel.GetCapSlpBarCode();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapSlpBarCode(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapSlpBarCode(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapSlpBarCode(System.IAsyncResult result) {
            return base.Channel.EndGetCapSlpBarCode(result);
        }
        
        private System.IAsyncResult OnBeginGetCapSlpBarCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapSlpBarCode(callback, asyncState);
        }
        
        private object[] OnEndGetCapSlpBarCode(System.IAsyncResult result) {
            bool retVal = this.EndGetCapSlpBarCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapSlpBarCodeCompleted(object state) {
            if ((this.GetCapSlpBarCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapSlpBarCodeCompleted(this, new GetCapSlpBarCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapSlpBarCodeAsync() {
            this.GetCapSlpBarCodeAsync(null);
        }
        
        public void GetCapSlpBarCodeAsync(object userState) {
            if ((this.onBeginGetCapSlpBarCodeDelegate == null)) {
                this.onBeginGetCapSlpBarCodeDelegate = new BeginOperationDelegate(this.OnBeginGetCapSlpBarCode);
            }
            if ((this.onEndGetCapSlpBarCodeDelegate == null)) {
                this.onEndGetCapSlpBarCodeDelegate = new EndOperationDelegate(this.OnEndGetCapSlpBarCode);
            }
            if ((this.onGetCapSlpBarCodeCompletedDelegate == null)) {
                this.onGetCapSlpBarCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapSlpBarCodeCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapSlpBarCodeDelegate, null, this.onEndGetCapSlpBarCodeDelegate, this.onGetCapSlpBarCodeCompletedDelegate, userState);
        }
        
        public bool GetCapSlpBitmap() {
            return base.Channel.GetCapSlpBitmap();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapSlpBitmap(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapSlpBitmap(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapSlpBitmap(System.IAsyncResult result) {
            return base.Channel.EndGetCapSlpBitmap(result);
        }
        
        private System.IAsyncResult OnBeginGetCapSlpBitmap(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapSlpBitmap(callback, asyncState);
        }
        
        private object[] OnEndGetCapSlpBitmap(System.IAsyncResult result) {
            bool retVal = this.EndGetCapSlpBitmap(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapSlpBitmapCompleted(object state) {
            if ((this.GetCapSlpBitmapCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapSlpBitmapCompleted(this, new GetCapSlpBitmapCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapSlpBitmapAsync() {
            this.GetCapSlpBitmapAsync(null);
        }
        
        public void GetCapSlpBitmapAsync(object userState) {
            if ((this.onBeginGetCapSlpBitmapDelegate == null)) {
                this.onBeginGetCapSlpBitmapDelegate = new BeginOperationDelegate(this.OnBeginGetCapSlpBitmap);
            }
            if ((this.onEndGetCapSlpBitmapDelegate == null)) {
                this.onEndGetCapSlpBitmapDelegate = new EndOperationDelegate(this.OnEndGetCapSlpBitmap);
            }
            if ((this.onGetCapSlpBitmapCompletedDelegate == null)) {
                this.onGetCapSlpBitmapCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapSlpBitmapCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapSlpBitmapDelegate, null, this.onEndGetCapSlpBitmapDelegate, this.onGetCapSlpBitmapCompletedDelegate, userState);
        }
        
        public bool GetCapSlpBold() {
            return base.Channel.GetCapSlpBold();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapSlpBold(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapSlpBold(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapSlpBold(System.IAsyncResult result) {
            return base.Channel.EndGetCapSlpBold(result);
        }
        
        private System.IAsyncResult OnBeginGetCapSlpBold(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapSlpBold(callback, asyncState);
        }
        
        private object[] OnEndGetCapSlpBold(System.IAsyncResult result) {
            bool retVal = this.EndGetCapSlpBold(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapSlpBoldCompleted(object state) {
            if ((this.GetCapSlpBoldCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapSlpBoldCompleted(this, new GetCapSlpBoldCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapSlpBoldAsync() {
            this.GetCapSlpBoldAsync(null);
        }
        
        public void GetCapSlpBoldAsync(object userState) {
            if ((this.onBeginGetCapSlpBoldDelegate == null)) {
                this.onBeginGetCapSlpBoldDelegate = new BeginOperationDelegate(this.OnBeginGetCapSlpBold);
            }
            if ((this.onEndGetCapSlpBoldDelegate == null)) {
                this.onEndGetCapSlpBoldDelegate = new EndOperationDelegate(this.OnEndGetCapSlpBold);
            }
            if ((this.onGetCapSlpBoldCompletedDelegate == null)) {
                this.onGetCapSlpBoldCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapSlpBoldCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapSlpBoldDelegate, null, this.onEndGetCapSlpBoldDelegate, this.onGetCapSlpBoldCompletedDelegate, userState);
        }
        
        public bool GetCapSlpDhigh() {
            return base.Channel.GetCapSlpDhigh();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapSlpDhigh(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapSlpDhigh(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapSlpDhigh(System.IAsyncResult result) {
            return base.Channel.EndGetCapSlpDhigh(result);
        }
        
        private System.IAsyncResult OnBeginGetCapSlpDhigh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapSlpDhigh(callback, asyncState);
        }
        
        private object[] OnEndGetCapSlpDhigh(System.IAsyncResult result) {
            bool retVal = this.EndGetCapSlpDhigh(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapSlpDhighCompleted(object state) {
            if ((this.GetCapSlpDhighCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapSlpDhighCompleted(this, new GetCapSlpDhighCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapSlpDhighAsync() {
            this.GetCapSlpDhighAsync(null);
        }
        
        public void GetCapSlpDhighAsync(object userState) {
            if ((this.onBeginGetCapSlpDhighDelegate == null)) {
                this.onBeginGetCapSlpDhighDelegate = new BeginOperationDelegate(this.OnBeginGetCapSlpDhigh);
            }
            if ((this.onEndGetCapSlpDhighDelegate == null)) {
                this.onEndGetCapSlpDhighDelegate = new EndOperationDelegate(this.OnEndGetCapSlpDhigh);
            }
            if ((this.onGetCapSlpDhighCompletedDelegate == null)) {
                this.onGetCapSlpDhighCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapSlpDhighCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapSlpDhighDelegate, null, this.onEndGetCapSlpDhighDelegate, this.onGetCapSlpDhighCompletedDelegate, userState);
        }
        
        public bool GetCapSlpDwide() {
            return base.Channel.GetCapSlpDwide();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapSlpDwide(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapSlpDwide(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapSlpDwide(System.IAsyncResult result) {
            return base.Channel.EndGetCapSlpDwide(result);
        }
        
        private System.IAsyncResult OnBeginGetCapSlpDwide(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapSlpDwide(callback, asyncState);
        }
        
        private object[] OnEndGetCapSlpDwide(System.IAsyncResult result) {
            bool retVal = this.EndGetCapSlpDwide(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapSlpDwideCompleted(object state) {
            if ((this.GetCapSlpDwideCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapSlpDwideCompleted(this, new GetCapSlpDwideCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapSlpDwideAsync() {
            this.GetCapSlpDwideAsync(null);
        }
        
        public void GetCapSlpDwideAsync(object userState) {
            if ((this.onBeginGetCapSlpDwideDelegate == null)) {
                this.onBeginGetCapSlpDwideDelegate = new BeginOperationDelegate(this.OnBeginGetCapSlpDwide);
            }
            if ((this.onEndGetCapSlpDwideDelegate == null)) {
                this.onEndGetCapSlpDwideDelegate = new EndOperationDelegate(this.OnEndGetCapSlpDwide);
            }
            if ((this.onGetCapSlpDwideCompletedDelegate == null)) {
                this.onGetCapSlpDwideCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapSlpDwideCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapSlpDwideDelegate, null, this.onEndGetCapSlpDwideDelegate, this.onGetCapSlpDwideCompletedDelegate, userState);
        }
        
        public bool GetCapSlpDwideDhigh() {
            return base.Channel.GetCapSlpDwideDhigh();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapSlpDwideDhigh(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapSlpDwideDhigh(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapSlpDwideDhigh(System.IAsyncResult result) {
            return base.Channel.EndGetCapSlpDwideDhigh(result);
        }
        
        private System.IAsyncResult OnBeginGetCapSlpDwideDhigh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapSlpDwideDhigh(callback, asyncState);
        }
        
        private object[] OnEndGetCapSlpDwideDhigh(System.IAsyncResult result) {
            bool retVal = this.EndGetCapSlpDwideDhigh(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapSlpDwideDhighCompleted(object state) {
            if ((this.GetCapSlpDwideDhighCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapSlpDwideDhighCompleted(this, new GetCapSlpDwideDhighCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapSlpDwideDhighAsync() {
            this.GetCapSlpDwideDhighAsync(null);
        }
        
        public void GetCapSlpDwideDhighAsync(object userState) {
            if ((this.onBeginGetCapSlpDwideDhighDelegate == null)) {
                this.onBeginGetCapSlpDwideDhighDelegate = new BeginOperationDelegate(this.OnBeginGetCapSlpDwideDhigh);
            }
            if ((this.onEndGetCapSlpDwideDhighDelegate == null)) {
                this.onEndGetCapSlpDwideDhighDelegate = new EndOperationDelegate(this.OnEndGetCapSlpDwideDhigh);
            }
            if ((this.onGetCapSlpDwideDhighCompletedDelegate == null)) {
                this.onGetCapSlpDwideDhighCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapSlpDwideDhighCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapSlpDwideDhighDelegate, null, this.onEndGetCapSlpDwideDhighDelegate, this.onGetCapSlpDwideDhighCompletedDelegate, userState);
        }
        
        public bool GetCapSlpEmptySensor() {
            return base.Channel.GetCapSlpEmptySensor();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapSlpEmptySensor(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapSlpEmptySensor(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapSlpEmptySensor(System.IAsyncResult result) {
            return base.Channel.EndGetCapSlpEmptySensor(result);
        }
        
        private System.IAsyncResult OnBeginGetCapSlpEmptySensor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapSlpEmptySensor(callback, asyncState);
        }
        
        private object[] OnEndGetCapSlpEmptySensor(System.IAsyncResult result) {
            bool retVal = this.EndGetCapSlpEmptySensor(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapSlpEmptySensorCompleted(object state) {
            if ((this.GetCapSlpEmptySensorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapSlpEmptySensorCompleted(this, new GetCapSlpEmptySensorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapSlpEmptySensorAsync() {
            this.GetCapSlpEmptySensorAsync(null);
        }
        
        public void GetCapSlpEmptySensorAsync(object userState) {
            if ((this.onBeginGetCapSlpEmptySensorDelegate == null)) {
                this.onBeginGetCapSlpEmptySensorDelegate = new BeginOperationDelegate(this.OnBeginGetCapSlpEmptySensor);
            }
            if ((this.onEndGetCapSlpEmptySensorDelegate == null)) {
                this.onEndGetCapSlpEmptySensorDelegate = new EndOperationDelegate(this.OnEndGetCapSlpEmptySensor);
            }
            if ((this.onGetCapSlpEmptySensorCompletedDelegate == null)) {
                this.onGetCapSlpEmptySensorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapSlpEmptySensorCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapSlpEmptySensorDelegate, null, this.onEndGetCapSlpEmptySensorDelegate, this.onGetCapSlpEmptySensorCompletedDelegate, userState);
        }
        
        public bool GetCapSlpItalic() {
            return base.Channel.GetCapSlpItalic();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapSlpItalic(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapSlpItalic(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapSlpItalic(System.IAsyncResult result) {
            return base.Channel.EndGetCapSlpItalic(result);
        }
        
        private System.IAsyncResult OnBeginGetCapSlpItalic(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapSlpItalic(callback, asyncState);
        }
        
        private object[] OnEndGetCapSlpItalic(System.IAsyncResult result) {
            bool retVal = this.EndGetCapSlpItalic(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapSlpItalicCompleted(object state) {
            if ((this.GetCapSlpItalicCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapSlpItalicCompleted(this, new GetCapSlpItalicCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapSlpItalicAsync() {
            this.GetCapSlpItalicAsync(null);
        }
        
        public void GetCapSlpItalicAsync(object userState) {
            if ((this.onBeginGetCapSlpItalicDelegate == null)) {
                this.onBeginGetCapSlpItalicDelegate = new BeginOperationDelegate(this.OnBeginGetCapSlpItalic);
            }
            if ((this.onEndGetCapSlpItalicDelegate == null)) {
                this.onEndGetCapSlpItalicDelegate = new EndOperationDelegate(this.OnEndGetCapSlpItalic);
            }
            if ((this.onGetCapSlpItalicCompletedDelegate == null)) {
                this.onGetCapSlpItalicCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapSlpItalicCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapSlpItalicDelegate, null, this.onEndGetCapSlpItalicDelegate, this.onGetCapSlpItalicCompletedDelegate, userState);
        }
        
        public bool GetCapSlpLeft90() {
            return base.Channel.GetCapSlpLeft90();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapSlpLeft90(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapSlpLeft90(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapSlpLeft90(System.IAsyncResult result) {
            return base.Channel.EndGetCapSlpLeft90(result);
        }
        
        private System.IAsyncResult OnBeginGetCapSlpLeft90(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapSlpLeft90(callback, asyncState);
        }
        
        private object[] OnEndGetCapSlpLeft90(System.IAsyncResult result) {
            bool retVal = this.EndGetCapSlpLeft90(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapSlpLeft90Completed(object state) {
            if ((this.GetCapSlpLeft90Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapSlpLeft90Completed(this, new GetCapSlpLeft90CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapSlpLeft90Async() {
            this.GetCapSlpLeft90Async(null);
        }
        
        public void GetCapSlpLeft90Async(object userState) {
            if ((this.onBeginGetCapSlpLeft90Delegate == null)) {
                this.onBeginGetCapSlpLeft90Delegate = new BeginOperationDelegate(this.OnBeginGetCapSlpLeft90);
            }
            if ((this.onEndGetCapSlpLeft90Delegate == null)) {
                this.onEndGetCapSlpLeft90Delegate = new EndOperationDelegate(this.OnEndGetCapSlpLeft90);
            }
            if ((this.onGetCapSlpLeft90CompletedDelegate == null)) {
                this.onGetCapSlpLeft90CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapSlpLeft90Completed);
            }
            base.InvokeAsync(this.onBeginGetCapSlpLeft90Delegate, null, this.onEndGetCapSlpLeft90Delegate, this.onGetCapSlpLeft90CompletedDelegate, userState);
        }
        
        public bool GetCapSlpNearEndSensor() {
            return base.Channel.GetCapSlpNearEndSensor();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapSlpNearEndSensor(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapSlpNearEndSensor(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapSlpNearEndSensor(System.IAsyncResult result) {
            return base.Channel.EndGetCapSlpNearEndSensor(result);
        }
        
        private System.IAsyncResult OnBeginGetCapSlpNearEndSensor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapSlpNearEndSensor(callback, asyncState);
        }
        
        private object[] OnEndGetCapSlpNearEndSensor(System.IAsyncResult result) {
            bool retVal = this.EndGetCapSlpNearEndSensor(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapSlpNearEndSensorCompleted(object state) {
            if ((this.GetCapSlpNearEndSensorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapSlpNearEndSensorCompleted(this, new GetCapSlpNearEndSensorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapSlpNearEndSensorAsync() {
            this.GetCapSlpNearEndSensorAsync(null);
        }
        
        public void GetCapSlpNearEndSensorAsync(object userState) {
            if ((this.onBeginGetCapSlpNearEndSensorDelegate == null)) {
                this.onBeginGetCapSlpNearEndSensorDelegate = new BeginOperationDelegate(this.OnBeginGetCapSlpNearEndSensor);
            }
            if ((this.onEndGetCapSlpNearEndSensorDelegate == null)) {
                this.onEndGetCapSlpNearEndSensorDelegate = new EndOperationDelegate(this.OnEndGetCapSlpNearEndSensor);
            }
            if ((this.onGetCapSlpNearEndSensorCompletedDelegate == null)) {
                this.onGetCapSlpNearEndSensorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapSlpNearEndSensorCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapSlpNearEndSensorDelegate, null, this.onEndGetCapSlpNearEndSensorDelegate, this.onGetCapSlpNearEndSensorCompletedDelegate, userState);
        }
        
        public bool GetCapSlpRight90() {
            return base.Channel.GetCapSlpRight90();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapSlpRight90(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapSlpRight90(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapSlpRight90(System.IAsyncResult result) {
            return base.Channel.EndGetCapSlpRight90(result);
        }
        
        private System.IAsyncResult OnBeginGetCapSlpRight90(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapSlpRight90(callback, asyncState);
        }
        
        private object[] OnEndGetCapSlpRight90(System.IAsyncResult result) {
            bool retVal = this.EndGetCapSlpRight90(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapSlpRight90Completed(object state) {
            if ((this.GetCapSlpRight90Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapSlpRight90Completed(this, new GetCapSlpRight90CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapSlpRight90Async() {
            this.GetCapSlpRight90Async(null);
        }
        
        public void GetCapSlpRight90Async(object userState) {
            if ((this.onBeginGetCapSlpRight90Delegate == null)) {
                this.onBeginGetCapSlpRight90Delegate = new BeginOperationDelegate(this.OnBeginGetCapSlpRight90);
            }
            if ((this.onEndGetCapSlpRight90Delegate == null)) {
                this.onEndGetCapSlpRight90Delegate = new EndOperationDelegate(this.OnEndGetCapSlpRight90);
            }
            if ((this.onGetCapSlpRight90CompletedDelegate == null)) {
                this.onGetCapSlpRight90CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapSlpRight90Completed);
            }
            base.InvokeAsync(this.onBeginGetCapSlpRight90Delegate, null, this.onEndGetCapSlpRight90Delegate, this.onGetCapSlpRight90CompletedDelegate, userState);
        }
        
        public bool GetCapSlpRotate180() {
            return base.Channel.GetCapSlpRotate180();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapSlpRotate180(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapSlpRotate180(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapSlpRotate180(System.IAsyncResult result) {
            return base.Channel.EndGetCapSlpRotate180(result);
        }
        
        private System.IAsyncResult OnBeginGetCapSlpRotate180(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapSlpRotate180(callback, asyncState);
        }
        
        private object[] OnEndGetCapSlpRotate180(System.IAsyncResult result) {
            bool retVal = this.EndGetCapSlpRotate180(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapSlpRotate180Completed(object state) {
            if ((this.GetCapSlpRotate180Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapSlpRotate180Completed(this, new GetCapSlpRotate180CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapSlpRotate180Async() {
            this.GetCapSlpRotate180Async(null);
        }
        
        public void GetCapSlpRotate180Async(object userState) {
            if ((this.onBeginGetCapSlpRotate180Delegate == null)) {
                this.onBeginGetCapSlpRotate180Delegate = new BeginOperationDelegate(this.OnBeginGetCapSlpRotate180);
            }
            if ((this.onEndGetCapSlpRotate180Delegate == null)) {
                this.onEndGetCapSlpRotate180Delegate = new EndOperationDelegate(this.OnEndGetCapSlpRotate180);
            }
            if ((this.onGetCapSlpRotate180CompletedDelegate == null)) {
                this.onGetCapSlpRotate180CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapSlpRotate180Completed);
            }
            base.InvokeAsync(this.onBeginGetCapSlpRotate180Delegate, null, this.onEndGetCapSlpRotate180Delegate, this.onGetCapSlpRotate180CompletedDelegate, userState);
        }
        
        public bool GetCapSlpUnderline() {
            return base.Channel.GetCapSlpUnderline();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapSlpUnderline(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapSlpUnderline(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapSlpUnderline(System.IAsyncResult result) {
            return base.Channel.EndGetCapSlpUnderline(result);
        }
        
        private System.IAsyncResult OnBeginGetCapSlpUnderline(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapSlpUnderline(callback, asyncState);
        }
        
        private object[] OnEndGetCapSlpUnderline(System.IAsyncResult result) {
            bool retVal = this.EndGetCapSlpUnderline(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapSlpUnderlineCompleted(object state) {
            if ((this.GetCapSlpUnderlineCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapSlpUnderlineCompleted(this, new GetCapSlpUnderlineCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapSlpUnderlineAsync() {
            this.GetCapSlpUnderlineAsync(null);
        }
        
        public void GetCapSlpUnderlineAsync(object userState) {
            if ((this.onBeginGetCapSlpUnderlineDelegate == null)) {
                this.onBeginGetCapSlpUnderlineDelegate = new BeginOperationDelegate(this.OnBeginGetCapSlpUnderline);
            }
            if ((this.onEndGetCapSlpUnderlineDelegate == null)) {
                this.onEndGetCapSlpUnderlineDelegate = new EndOperationDelegate(this.OnEndGetCapSlpUnderline);
            }
            if ((this.onGetCapSlpUnderlineCompletedDelegate == null)) {
                this.onGetCapSlpUnderlineCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapSlpUnderlineCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapSlpUnderlineDelegate, null, this.onEndGetCapSlpUnderlineDelegate, this.onGetCapSlpUnderlineCompletedDelegate, userState);
        }
        
        public bool GetCapSlpBothSidesPrint() {
            return base.Channel.GetCapSlpBothSidesPrint();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapSlpBothSidesPrint(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapSlpBothSidesPrint(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapSlpBothSidesPrint(System.IAsyncResult result) {
            return base.Channel.EndGetCapSlpBothSidesPrint(result);
        }
        
        private System.IAsyncResult OnBeginGetCapSlpBothSidesPrint(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapSlpBothSidesPrint(callback, asyncState);
        }
        
        private object[] OnEndGetCapSlpBothSidesPrint(System.IAsyncResult result) {
            bool retVal = this.EndGetCapSlpBothSidesPrint(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapSlpBothSidesPrintCompleted(object state) {
            if ((this.GetCapSlpBothSidesPrintCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapSlpBothSidesPrintCompleted(this, new GetCapSlpBothSidesPrintCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapSlpBothSidesPrintAsync() {
            this.GetCapSlpBothSidesPrintAsync(null);
        }
        
        public void GetCapSlpBothSidesPrintAsync(object userState) {
            if ((this.onBeginGetCapSlpBothSidesPrintDelegate == null)) {
                this.onBeginGetCapSlpBothSidesPrintDelegate = new BeginOperationDelegate(this.OnBeginGetCapSlpBothSidesPrint);
            }
            if ((this.onEndGetCapSlpBothSidesPrintDelegate == null)) {
                this.onEndGetCapSlpBothSidesPrintDelegate = new EndOperationDelegate(this.OnEndGetCapSlpBothSidesPrint);
            }
            if ((this.onGetCapSlpBothSidesPrintCompletedDelegate == null)) {
                this.onGetCapSlpBothSidesPrintCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapSlpBothSidesPrintCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapSlpBothSidesPrintDelegate, null, this.onEndGetCapSlpBothSidesPrintDelegate, this.onGetCapSlpBothSidesPrintCompletedDelegate, userState);
        }
        
        public int GetCapSlpCartridgeSensor() {
            return base.Channel.GetCapSlpCartridgeSensor();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapSlpCartridgeSensor(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapSlpCartridgeSensor(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetCapSlpCartridgeSensor(System.IAsyncResult result) {
            return base.Channel.EndGetCapSlpCartridgeSensor(result);
        }
        
        private System.IAsyncResult OnBeginGetCapSlpCartridgeSensor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapSlpCartridgeSensor(callback, asyncState);
        }
        
        private object[] OnEndGetCapSlpCartridgeSensor(System.IAsyncResult result) {
            int retVal = this.EndGetCapSlpCartridgeSensor(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapSlpCartridgeSensorCompleted(object state) {
            if ((this.GetCapSlpCartridgeSensorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapSlpCartridgeSensorCompleted(this, new GetCapSlpCartridgeSensorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapSlpCartridgeSensorAsync() {
            this.GetCapSlpCartridgeSensorAsync(null);
        }
        
        public void GetCapSlpCartridgeSensorAsync(object userState) {
            if ((this.onBeginGetCapSlpCartridgeSensorDelegate == null)) {
                this.onBeginGetCapSlpCartridgeSensorDelegate = new BeginOperationDelegate(this.OnBeginGetCapSlpCartridgeSensor);
            }
            if ((this.onEndGetCapSlpCartridgeSensorDelegate == null)) {
                this.onEndGetCapSlpCartridgeSensorDelegate = new EndOperationDelegate(this.OnEndGetCapSlpCartridgeSensor);
            }
            if ((this.onGetCapSlpCartridgeSensorCompletedDelegate == null)) {
                this.onGetCapSlpCartridgeSensorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapSlpCartridgeSensorCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapSlpCartridgeSensorDelegate, null, this.onEndGetCapSlpCartridgeSensorDelegate, this.onGetCapSlpCartridgeSensorCompletedDelegate, userState);
        }
        
        public int GetCapSlpColor() {
            return base.Channel.GetCapSlpColor();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapSlpColor(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapSlpColor(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetCapSlpColor(System.IAsyncResult result) {
            return base.Channel.EndGetCapSlpColor(result);
        }
        
        private System.IAsyncResult OnBeginGetCapSlpColor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapSlpColor(callback, asyncState);
        }
        
        private object[] OnEndGetCapSlpColor(System.IAsyncResult result) {
            int retVal = this.EndGetCapSlpColor(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapSlpColorCompleted(object state) {
            if ((this.GetCapSlpColorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapSlpColorCompleted(this, new GetCapSlpColorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapSlpColorAsync() {
            this.GetCapSlpColorAsync(null);
        }
        
        public void GetCapSlpColorAsync(object userState) {
            if ((this.onBeginGetCapSlpColorDelegate == null)) {
                this.onBeginGetCapSlpColorDelegate = new BeginOperationDelegate(this.OnBeginGetCapSlpColor);
            }
            if ((this.onEndGetCapSlpColorDelegate == null)) {
                this.onEndGetCapSlpColorDelegate = new EndOperationDelegate(this.OnEndGetCapSlpColor);
            }
            if ((this.onGetCapSlpColorCompletedDelegate == null)) {
                this.onGetCapSlpColorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapSlpColorCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapSlpColorDelegate, null, this.onEndGetCapSlpColorDelegate, this.onGetCapSlpColorCompletedDelegate, userState);
        }
        
        public bool GetCapSlpPageMode() {
            return base.Channel.GetCapSlpPageMode();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapSlpPageMode(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapSlpPageMode(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapSlpPageMode(System.IAsyncResult result) {
            return base.Channel.EndGetCapSlpPageMode(result);
        }
        
        private System.IAsyncResult OnBeginGetCapSlpPageMode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapSlpPageMode(callback, asyncState);
        }
        
        private object[] OnEndGetCapSlpPageMode(System.IAsyncResult result) {
            bool retVal = this.EndGetCapSlpPageMode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapSlpPageModeCompleted(object state) {
            if ((this.GetCapSlpPageModeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapSlpPageModeCompleted(this, new GetCapSlpPageModeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapSlpPageModeAsync() {
            this.GetCapSlpPageModeAsync(null);
        }
        
        public void GetCapSlpPageModeAsync(object userState) {
            if ((this.onBeginGetCapSlpPageModeDelegate == null)) {
                this.onBeginGetCapSlpPageModeDelegate = new BeginOperationDelegate(this.OnBeginGetCapSlpPageMode);
            }
            if ((this.onEndGetCapSlpPageModeDelegate == null)) {
                this.onEndGetCapSlpPageModeDelegate = new EndOperationDelegate(this.OnEndGetCapSlpPageMode);
            }
            if ((this.onGetCapSlpPageModeCompletedDelegate == null)) {
                this.onGetCapSlpPageModeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapSlpPageModeCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapSlpPageModeDelegate, null, this.onEndGetCapSlpPageModeDelegate, this.onGetCapSlpPageModeCompletedDelegate, userState);
        }
        
        public int GetCapSlpRuledLine() {
            return base.Channel.GetCapSlpRuledLine();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapSlpRuledLine(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapSlpRuledLine(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetCapSlpRuledLine(System.IAsyncResult result) {
            return base.Channel.EndGetCapSlpRuledLine(result);
        }
        
        private System.IAsyncResult OnBeginGetCapSlpRuledLine(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapSlpRuledLine(callback, asyncState);
        }
        
        private object[] OnEndGetCapSlpRuledLine(System.IAsyncResult result) {
            int retVal = this.EndGetCapSlpRuledLine(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapSlpRuledLineCompleted(object state) {
            if ((this.GetCapSlpRuledLineCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapSlpRuledLineCompleted(this, new GetCapSlpRuledLineCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapSlpRuledLineAsync() {
            this.GetCapSlpRuledLineAsync(null);
        }
        
        public void GetCapSlpRuledLineAsync(object userState) {
            if ((this.onBeginGetCapSlpRuledLineDelegate == null)) {
                this.onBeginGetCapSlpRuledLineDelegate = new BeginOperationDelegate(this.OnBeginGetCapSlpRuledLine);
            }
            if ((this.onEndGetCapSlpRuledLineDelegate == null)) {
                this.onEndGetCapSlpRuledLineDelegate = new EndOperationDelegate(this.OnEndGetCapSlpRuledLine);
            }
            if ((this.onGetCapSlpRuledLineCompletedDelegate == null)) {
                this.onGetCapSlpRuledLineCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapSlpRuledLineCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapSlpRuledLineDelegate, null, this.onEndGetCapSlpRuledLineDelegate, this.onGetCapSlpRuledLineCompletedDelegate, userState);
        }
        
        public bool GetAsyncMode() {
            return base.Channel.GetAsyncMode();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAsyncMode(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAsyncMode(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetAsyncMode(System.IAsyncResult result) {
            return base.Channel.EndGetAsyncMode(result);
        }
        
        private System.IAsyncResult OnBeginGetAsyncMode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAsyncMode(callback, asyncState);
        }
        
        private object[] OnEndGetAsyncMode(System.IAsyncResult result) {
            bool retVal = this.EndGetAsyncMode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAsyncModeCompleted(object state) {
            if ((this.GetAsyncModeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAsyncModeCompleted(this, new GetAsyncModeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAsyncModeAsync() {
            this.GetAsyncModeAsync(null);
        }
        
        public void GetAsyncModeAsync(object userState) {
            if ((this.onBeginGetAsyncModeDelegate == null)) {
                this.onBeginGetAsyncModeDelegate = new BeginOperationDelegate(this.OnBeginGetAsyncMode);
            }
            if ((this.onEndGetAsyncModeDelegate == null)) {
                this.onEndGetAsyncModeDelegate = new EndOperationDelegate(this.OnEndGetAsyncMode);
            }
            if ((this.onGetAsyncModeCompletedDelegate == null)) {
                this.onGetAsyncModeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAsyncModeCompleted);
            }
            base.InvokeAsync(this.onBeginGetAsyncModeDelegate, null, this.onEndGetAsyncModeDelegate, this.onGetAsyncModeCompletedDelegate, userState);
        }
        
        public void SetAsyncMode(bool AsyncMode) {
            base.Channel.SetAsyncMode(AsyncMode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetAsyncMode(bool AsyncMode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetAsyncMode(AsyncMode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetAsyncMode(System.IAsyncResult result) {
            base.Channel.EndSetAsyncMode(result);
        }
        
        private System.IAsyncResult OnBeginSetAsyncMode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            bool AsyncMode = ((bool)(inValues[0]));
            return this.BeginSetAsyncMode(AsyncMode, callback, asyncState);
        }
        
        private object[] OnEndSetAsyncMode(System.IAsyncResult result) {
            this.EndSetAsyncMode(result);
            return null;
        }
        
        private void OnSetAsyncModeCompleted(object state) {
            if ((this.SetAsyncModeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetAsyncModeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetAsyncModeAsync(bool AsyncMode) {
            this.SetAsyncModeAsync(AsyncMode, null);
        }
        
        public void SetAsyncModeAsync(bool AsyncMode, object userState) {
            if ((this.onBeginSetAsyncModeDelegate == null)) {
                this.onBeginSetAsyncModeDelegate = new BeginOperationDelegate(this.OnBeginSetAsyncMode);
            }
            if ((this.onEndSetAsyncModeDelegate == null)) {
                this.onEndSetAsyncModeDelegate = new EndOperationDelegate(this.OnEndSetAsyncMode);
            }
            if ((this.onSetAsyncModeCompletedDelegate == null)) {
                this.onSetAsyncModeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetAsyncModeCompleted);
            }
            base.InvokeAsync(this.onBeginSetAsyncModeDelegate, new object[] {
                        AsyncMode}, this.onEndSetAsyncModeDelegate, this.onSetAsyncModeCompletedDelegate, userState);
        }
        
        public WSPoS.POSPrinterServiceReference.PrinterCartridgeNotify GetCartridgeNotify() {
            return base.Channel.GetCartridgeNotify();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCartridgeNotify(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCartridgeNotify(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WSPoS.POSPrinterServiceReference.PrinterCartridgeNotify EndGetCartridgeNotify(System.IAsyncResult result) {
            return base.Channel.EndGetCartridgeNotify(result);
        }
        
        private System.IAsyncResult OnBeginGetCartridgeNotify(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCartridgeNotify(callback, asyncState);
        }
        
        private object[] OnEndGetCartridgeNotify(System.IAsyncResult result) {
            WSPoS.POSPrinterServiceReference.PrinterCartridgeNotify retVal = this.EndGetCartridgeNotify(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCartridgeNotifyCompleted(object state) {
            if ((this.GetCartridgeNotifyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCartridgeNotifyCompleted(this, new GetCartridgeNotifyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCartridgeNotifyAsync() {
            this.GetCartridgeNotifyAsync(null);
        }
        
        public void GetCartridgeNotifyAsync(object userState) {
            if ((this.onBeginGetCartridgeNotifyDelegate == null)) {
                this.onBeginGetCartridgeNotifyDelegate = new BeginOperationDelegate(this.OnBeginGetCartridgeNotify);
            }
            if ((this.onEndGetCartridgeNotifyDelegate == null)) {
                this.onEndGetCartridgeNotifyDelegate = new EndOperationDelegate(this.OnEndGetCartridgeNotify);
            }
            if ((this.onGetCartridgeNotifyCompletedDelegate == null)) {
                this.onGetCartridgeNotifyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCartridgeNotifyCompleted);
            }
            base.InvokeAsync(this.onBeginGetCartridgeNotifyDelegate, null, this.onEndGetCartridgeNotifyDelegate, this.onGetCartridgeNotifyCompletedDelegate, userState);
        }
        
        public void SetCartridgeNotify(WSPoS.POSPrinterServiceReference.PrinterCartridgeNotify CartridgeNotify) {
            base.Channel.SetCartridgeNotify(CartridgeNotify);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetCartridgeNotify(WSPoS.POSPrinterServiceReference.PrinterCartridgeNotify CartridgeNotify, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetCartridgeNotify(CartridgeNotify, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetCartridgeNotify(System.IAsyncResult result) {
            base.Channel.EndSetCartridgeNotify(result);
        }
        
        private System.IAsyncResult OnBeginSetCartridgeNotify(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WSPoS.POSPrinterServiceReference.PrinterCartridgeNotify CartridgeNotify = ((WSPoS.POSPrinterServiceReference.PrinterCartridgeNotify)(inValues[0]));
            return this.BeginSetCartridgeNotify(CartridgeNotify, callback, asyncState);
        }
        
        private object[] OnEndSetCartridgeNotify(System.IAsyncResult result) {
            this.EndSetCartridgeNotify(result);
            return null;
        }
        
        private void OnSetCartridgeNotifyCompleted(object state) {
            if ((this.SetCartridgeNotifyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetCartridgeNotifyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetCartridgeNotifyAsync(WSPoS.POSPrinterServiceReference.PrinterCartridgeNotify CartridgeNotify) {
            this.SetCartridgeNotifyAsync(CartridgeNotify, null);
        }
        
        public void SetCartridgeNotifyAsync(WSPoS.POSPrinterServiceReference.PrinterCartridgeNotify CartridgeNotify, object userState) {
            if ((this.onBeginSetCartridgeNotifyDelegate == null)) {
                this.onBeginSetCartridgeNotifyDelegate = new BeginOperationDelegate(this.OnBeginSetCartridgeNotify);
            }
            if ((this.onEndSetCartridgeNotifyDelegate == null)) {
                this.onEndSetCartridgeNotifyDelegate = new EndOperationDelegate(this.OnEndSetCartridgeNotify);
            }
            if ((this.onSetCartridgeNotifyCompletedDelegate == null)) {
                this.onSetCartridgeNotifyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetCartridgeNotifyCompleted);
            }
            base.InvokeAsync(this.onBeginSetCartridgeNotifyDelegate, new object[] {
                        CartridgeNotify}, this.onEndSetCartridgeNotifyDelegate, this.onSetCartridgeNotifyCompletedDelegate, userState);
        }
        
        public int GetCharacterSet() {
            return base.Channel.GetCharacterSet();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCharacterSet(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCharacterSet(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetCharacterSet(System.IAsyncResult result) {
            return base.Channel.EndGetCharacterSet(result);
        }
        
        private System.IAsyncResult OnBeginGetCharacterSet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCharacterSet(callback, asyncState);
        }
        
        private object[] OnEndGetCharacterSet(System.IAsyncResult result) {
            int retVal = this.EndGetCharacterSet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCharacterSetCompleted(object state) {
            if ((this.GetCharacterSetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCharacterSetCompleted(this, new GetCharacterSetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCharacterSetAsync() {
            this.GetCharacterSetAsync(null);
        }
        
        public void GetCharacterSetAsync(object userState) {
            if ((this.onBeginGetCharacterSetDelegate == null)) {
                this.onBeginGetCharacterSetDelegate = new BeginOperationDelegate(this.OnBeginGetCharacterSet);
            }
            if ((this.onEndGetCharacterSetDelegate == null)) {
                this.onEndGetCharacterSetDelegate = new EndOperationDelegate(this.OnEndGetCharacterSet);
            }
            if ((this.onGetCharacterSetCompletedDelegate == null)) {
                this.onGetCharacterSetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCharacterSetCompleted);
            }
            base.InvokeAsync(this.onBeginGetCharacterSetDelegate, null, this.onEndGetCharacterSetDelegate, this.onGetCharacterSetCompletedDelegate, userState);
        }
        
        public void SetCharacterSet(int CharacterSet) {
            base.Channel.SetCharacterSet(CharacterSet);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetCharacterSet(int CharacterSet, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetCharacterSet(CharacterSet, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetCharacterSet(System.IAsyncResult result) {
            base.Channel.EndSetCharacterSet(result);
        }
        
        private System.IAsyncResult OnBeginSetCharacterSet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int CharacterSet = ((int)(inValues[0]));
            return this.BeginSetCharacterSet(CharacterSet, callback, asyncState);
        }
        
        private object[] OnEndSetCharacterSet(System.IAsyncResult result) {
            this.EndSetCharacterSet(result);
            return null;
        }
        
        private void OnSetCharacterSetCompleted(object state) {
            if ((this.SetCharacterSetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetCharacterSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetCharacterSetAsync(int CharacterSet) {
            this.SetCharacterSetAsync(CharacterSet, null);
        }
        
        public void SetCharacterSetAsync(int CharacterSet, object userState) {
            if ((this.onBeginSetCharacterSetDelegate == null)) {
                this.onBeginSetCharacterSetDelegate = new BeginOperationDelegate(this.OnBeginSetCharacterSet);
            }
            if ((this.onEndSetCharacterSetDelegate == null)) {
                this.onEndSetCharacterSetDelegate = new EndOperationDelegate(this.OnEndSetCharacterSet);
            }
            if ((this.onSetCharacterSetCompletedDelegate == null)) {
                this.onSetCharacterSetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetCharacterSetCompleted);
            }
            base.InvokeAsync(this.onBeginSetCharacterSetDelegate, new object[] {
                        CharacterSet}, this.onEndSetCharacterSetDelegate, this.onSetCharacterSetCompletedDelegate, userState);
        }
        
        public WSPoS.POSPrinterServiceReference.CharacterSetList GetCharacterSetList() {
            return base.Channel.GetCharacterSetList();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCharacterSetList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCharacterSetList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WSPoS.POSPrinterServiceReference.CharacterSetList EndGetCharacterSetList(System.IAsyncResult result) {
            return base.Channel.EndGetCharacterSetList(result);
        }
        
        private System.IAsyncResult OnBeginGetCharacterSetList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCharacterSetList(callback, asyncState);
        }
        
        private object[] OnEndGetCharacterSetList(System.IAsyncResult result) {
            WSPoS.POSPrinterServiceReference.CharacterSetList retVal = this.EndGetCharacterSetList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCharacterSetListCompleted(object state) {
            if ((this.GetCharacterSetListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCharacterSetListCompleted(this, new GetCharacterSetListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCharacterSetListAsync() {
            this.GetCharacterSetListAsync(null);
        }
        
        public void GetCharacterSetListAsync(object userState) {
            if ((this.onBeginGetCharacterSetListDelegate == null)) {
                this.onBeginGetCharacterSetListDelegate = new BeginOperationDelegate(this.OnBeginGetCharacterSetList);
            }
            if ((this.onEndGetCharacterSetListDelegate == null)) {
                this.onEndGetCharacterSetListDelegate = new EndOperationDelegate(this.OnEndGetCharacterSetList);
            }
            if ((this.onGetCharacterSetListCompletedDelegate == null)) {
                this.onGetCharacterSetListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCharacterSetListCompleted);
            }
            base.InvokeAsync(this.onBeginGetCharacterSetListDelegate, null, this.onEndGetCharacterSetListDelegate, this.onGetCharacterSetListCompletedDelegate, userState);
        }
        
        public bool GetCoverOpen() {
            return base.Channel.GetCoverOpen();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCoverOpen(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCoverOpen(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCoverOpen(System.IAsyncResult result) {
            return base.Channel.EndGetCoverOpen(result);
        }
        
        private System.IAsyncResult OnBeginGetCoverOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCoverOpen(callback, asyncState);
        }
        
        private object[] OnEndGetCoverOpen(System.IAsyncResult result) {
            bool retVal = this.EndGetCoverOpen(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCoverOpenCompleted(object state) {
            if ((this.GetCoverOpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCoverOpenCompleted(this, new GetCoverOpenCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCoverOpenAsync() {
            this.GetCoverOpenAsync(null);
        }
        
        public void GetCoverOpenAsync(object userState) {
            if ((this.onBeginGetCoverOpenDelegate == null)) {
                this.onBeginGetCoverOpenDelegate = new BeginOperationDelegate(this.OnBeginGetCoverOpen);
            }
            if ((this.onEndGetCoverOpenDelegate == null)) {
                this.onEndGetCoverOpenDelegate = new EndOperationDelegate(this.OnEndGetCoverOpen);
            }
            if ((this.onGetCoverOpenCompletedDelegate == null)) {
                this.onGetCoverOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCoverOpenCompleted);
            }
            base.InvokeAsync(this.onBeginGetCoverOpenDelegate, null, this.onEndGetCoverOpenDelegate, this.onGetCoverOpenCompletedDelegate, userState);
        }
        
        public WSPoS.POSPrinterServiceReference.PrinterErrorLevel GetErrorLevel() {
            return base.Channel.GetErrorLevel();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetErrorLevel(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetErrorLevel(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WSPoS.POSPrinterServiceReference.PrinterErrorLevel EndGetErrorLevel(System.IAsyncResult result) {
            return base.Channel.EndGetErrorLevel(result);
        }
        
        private System.IAsyncResult OnBeginGetErrorLevel(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetErrorLevel(callback, asyncState);
        }
        
        private object[] OnEndGetErrorLevel(System.IAsyncResult result) {
            WSPoS.POSPrinterServiceReference.PrinterErrorLevel retVal = this.EndGetErrorLevel(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetErrorLevelCompleted(object state) {
            if ((this.GetErrorLevelCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetErrorLevelCompleted(this, new GetErrorLevelCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetErrorLevelAsync() {
            this.GetErrorLevelAsync(null);
        }
        
        public void GetErrorLevelAsync(object userState) {
            if ((this.onBeginGetErrorLevelDelegate == null)) {
                this.onBeginGetErrorLevelDelegate = new BeginOperationDelegate(this.OnBeginGetErrorLevel);
            }
            if ((this.onEndGetErrorLevelDelegate == null)) {
                this.onEndGetErrorLevelDelegate = new EndOperationDelegate(this.OnEndGetErrorLevel);
            }
            if ((this.onGetErrorLevelCompletedDelegate == null)) {
                this.onGetErrorLevelCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetErrorLevelCompleted);
            }
            base.InvokeAsync(this.onBeginGetErrorLevelDelegate, null, this.onEndGetErrorLevelDelegate, this.onGetErrorLevelCompletedDelegate, userState);
        }
        
        public WSPoS.POSPrinterServiceReference.PrinterStation GetErrorStation() {
            return base.Channel.GetErrorStation();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetErrorStation(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetErrorStation(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WSPoS.POSPrinterServiceReference.PrinterStation EndGetErrorStation(System.IAsyncResult result) {
            return base.Channel.EndGetErrorStation(result);
        }
        
        private System.IAsyncResult OnBeginGetErrorStation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetErrorStation(callback, asyncState);
        }
        
        private object[] OnEndGetErrorStation(System.IAsyncResult result) {
            WSPoS.POSPrinterServiceReference.PrinterStation retVal = this.EndGetErrorStation(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetErrorStationCompleted(object state) {
            if ((this.GetErrorStationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetErrorStationCompleted(this, new GetErrorStationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetErrorStationAsync() {
            this.GetErrorStationAsync(null);
        }
        
        public void GetErrorStationAsync(object userState) {
            if ((this.onBeginGetErrorStationDelegate == null)) {
                this.onBeginGetErrorStationDelegate = new BeginOperationDelegate(this.OnBeginGetErrorStation);
            }
            if ((this.onEndGetErrorStationDelegate == null)) {
                this.onEndGetErrorStationDelegate = new EndOperationDelegate(this.OnEndGetErrorStation);
            }
            if ((this.onGetErrorStationCompletedDelegate == null)) {
                this.onGetErrorStationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetErrorStationCompleted);
            }
            base.InvokeAsync(this.onBeginGetErrorStationDelegate, null, this.onEndGetErrorStationDelegate, this.onGetErrorStationCompletedDelegate, userState);
        }
        
        public string GetErrorString() {
            return base.Channel.GetErrorString();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetErrorString(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetErrorString(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetErrorString(System.IAsyncResult result) {
            return base.Channel.EndGetErrorString(result);
        }
        
        private System.IAsyncResult OnBeginGetErrorString(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetErrorString(callback, asyncState);
        }
        
        private object[] OnEndGetErrorString(System.IAsyncResult result) {
            string retVal = this.EndGetErrorString(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetErrorStringCompleted(object state) {
            if ((this.GetErrorStringCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetErrorStringCompleted(this, new GetErrorStringCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetErrorStringAsync() {
            this.GetErrorStringAsync(null);
        }
        
        public void GetErrorStringAsync(object userState) {
            if ((this.onBeginGetErrorStringDelegate == null)) {
                this.onBeginGetErrorStringDelegate = new BeginOperationDelegate(this.OnBeginGetErrorString);
            }
            if ((this.onEndGetErrorStringDelegate == null)) {
                this.onEndGetErrorStringDelegate = new EndOperationDelegate(this.OnEndGetErrorString);
            }
            if ((this.onGetErrorStringCompletedDelegate == null)) {
                this.onGetErrorStringCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetErrorStringCompleted);
            }
            base.InvokeAsync(this.onBeginGetErrorStringDelegate, null, this.onEndGetErrorStringDelegate, this.onGetErrorStringCompletedDelegate, userState);
        }
        
        public bool GetCapJrnBold() {
            return base.Channel.GetCapJrnBold();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapJrnBold(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapJrnBold(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapJrnBold(System.IAsyncResult result) {
            return base.Channel.EndGetCapJrnBold(result);
        }
        
        private System.IAsyncResult OnBeginGetCapJrnBold(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapJrnBold(callback, asyncState);
        }
        
        private object[] OnEndGetCapJrnBold(System.IAsyncResult result) {
            bool retVal = this.EndGetCapJrnBold(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapJrnBoldCompleted(object state) {
            if ((this.GetCapJrnBoldCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapJrnBoldCompleted(this, new GetCapJrnBoldCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapJrnBoldAsync() {
            this.GetCapJrnBoldAsync(null);
        }
        
        public void GetCapJrnBoldAsync(object userState) {
            if ((this.onBeginGetCapJrnBoldDelegate == null)) {
                this.onBeginGetCapJrnBoldDelegate = new BeginOperationDelegate(this.OnBeginGetCapJrnBold);
            }
            if ((this.onEndGetCapJrnBoldDelegate == null)) {
                this.onEndGetCapJrnBoldDelegate = new EndOperationDelegate(this.OnEndGetCapJrnBold);
            }
            if ((this.onGetCapJrnBoldCompletedDelegate == null)) {
                this.onGetCapJrnBoldCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapJrnBoldCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapJrnBoldDelegate, null, this.onEndGetCapJrnBoldDelegate, this.onGetCapJrnBoldCompletedDelegate, userState);
        }
        
        public bool GetCapJrnDhigh() {
            return base.Channel.GetCapJrnDhigh();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapJrnDhigh(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapJrnDhigh(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapJrnDhigh(System.IAsyncResult result) {
            return base.Channel.EndGetCapJrnDhigh(result);
        }
        
        private System.IAsyncResult OnBeginGetCapJrnDhigh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapJrnDhigh(callback, asyncState);
        }
        
        private object[] OnEndGetCapJrnDhigh(System.IAsyncResult result) {
            bool retVal = this.EndGetCapJrnDhigh(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapJrnDhighCompleted(object state) {
            if ((this.GetCapJrnDhighCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapJrnDhighCompleted(this, new GetCapJrnDhighCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapJrnDhighAsync() {
            this.GetCapJrnDhighAsync(null);
        }
        
        public void GetCapJrnDhighAsync(object userState) {
            if ((this.onBeginGetCapJrnDhighDelegate == null)) {
                this.onBeginGetCapJrnDhighDelegate = new BeginOperationDelegate(this.OnBeginGetCapJrnDhigh);
            }
            if ((this.onEndGetCapJrnDhighDelegate == null)) {
                this.onEndGetCapJrnDhighDelegate = new EndOperationDelegate(this.OnEndGetCapJrnDhigh);
            }
            if ((this.onGetCapJrnDhighCompletedDelegate == null)) {
                this.onGetCapJrnDhighCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapJrnDhighCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapJrnDhighDelegate, null, this.onEndGetCapJrnDhighDelegate, this.onGetCapJrnDhighCompletedDelegate, userState);
        }
        
        public bool GetCapJrnDwide() {
            return base.Channel.GetCapJrnDwide();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapJrnDwide(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapJrnDwide(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapJrnDwide(System.IAsyncResult result) {
            return base.Channel.EndGetCapJrnDwide(result);
        }
        
        private System.IAsyncResult OnBeginGetCapJrnDwide(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapJrnDwide(callback, asyncState);
        }
        
        private object[] OnEndGetCapJrnDwide(System.IAsyncResult result) {
            bool retVal = this.EndGetCapJrnDwide(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapJrnDwideCompleted(object state) {
            if ((this.GetCapJrnDwideCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapJrnDwideCompleted(this, new GetCapJrnDwideCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapJrnDwideAsync() {
            this.GetCapJrnDwideAsync(null);
        }
        
        public void GetCapJrnDwideAsync(object userState) {
            if ((this.onBeginGetCapJrnDwideDelegate == null)) {
                this.onBeginGetCapJrnDwideDelegate = new BeginOperationDelegate(this.OnBeginGetCapJrnDwide);
            }
            if ((this.onEndGetCapJrnDwideDelegate == null)) {
                this.onEndGetCapJrnDwideDelegate = new EndOperationDelegate(this.OnEndGetCapJrnDwide);
            }
            if ((this.onGetCapJrnDwideCompletedDelegate == null)) {
                this.onGetCapJrnDwideCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapJrnDwideCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapJrnDwideDelegate, null, this.onEndGetCapJrnDwideDelegate, this.onGetCapJrnDwideCompletedDelegate, userState);
        }
        
        public bool GetCapJrnDwideDhigh() {
            return base.Channel.GetCapJrnDwideDhigh();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapJrnDwideDhigh(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapJrnDwideDhigh(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapJrnDwideDhigh(System.IAsyncResult result) {
            return base.Channel.EndGetCapJrnDwideDhigh(result);
        }
        
        private System.IAsyncResult OnBeginGetCapJrnDwideDhigh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapJrnDwideDhigh(callback, asyncState);
        }
        
        private object[] OnEndGetCapJrnDwideDhigh(System.IAsyncResult result) {
            bool retVal = this.EndGetCapJrnDwideDhigh(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapJrnDwideDhighCompleted(object state) {
            if ((this.GetCapJrnDwideDhighCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapJrnDwideDhighCompleted(this, new GetCapJrnDwideDhighCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapJrnDwideDhighAsync() {
            this.GetCapJrnDwideDhighAsync(null);
        }
        
        public void GetCapJrnDwideDhighAsync(object userState) {
            if ((this.onBeginGetCapJrnDwideDhighDelegate == null)) {
                this.onBeginGetCapJrnDwideDhighDelegate = new BeginOperationDelegate(this.OnBeginGetCapJrnDwideDhigh);
            }
            if ((this.onEndGetCapJrnDwideDhighDelegate == null)) {
                this.onEndGetCapJrnDwideDhighDelegate = new EndOperationDelegate(this.OnEndGetCapJrnDwideDhigh);
            }
            if ((this.onGetCapJrnDwideDhighCompletedDelegate == null)) {
                this.onGetCapJrnDwideDhighCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapJrnDwideDhighCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapJrnDwideDhighDelegate, null, this.onEndGetCapJrnDwideDhighDelegate, this.onGetCapJrnDwideDhighCompletedDelegate, userState);
        }
        
        public bool GetCapJrnEmptySensor() {
            return base.Channel.GetCapJrnEmptySensor();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapJrnEmptySensor(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapJrnEmptySensor(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapJrnEmptySensor(System.IAsyncResult result) {
            return base.Channel.EndGetCapJrnEmptySensor(result);
        }
        
        private System.IAsyncResult OnBeginGetCapJrnEmptySensor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapJrnEmptySensor(callback, asyncState);
        }
        
        private object[] OnEndGetCapJrnEmptySensor(System.IAsyncResult result) {
            bool retVal = this.EndGetCapJrnEmptySensor(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapJrnEmptySensorCompleted(object state) {
            if ((this.GetCapJrnEmptySensorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapJrnEmptySensorCompleted(this, new GetCapJrnEmptySensorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapJrnEmptySensorAsync() {
            this.GetCapJrnEmptySensorAsync(null);
        }
        
        public void GetCapJrnEmptySensorAsync(object userState) {
            if ((this.onBeginGetCapJrnEmptySensorDelegate == null)) {
                this.onBeginGetCapJrnEmptySensorDelegate = new BeginOperationDelegate(this.OnBeginGetCapJrnEmptySensor);
            }
            if ((this.onEndGetCapJrnEmptySensorDelegate == null)) {
                this.onEndGetCapJrnEmptySensorDelegate = new EndOperationDelegate(this.OnEndGetCapJrnEmptySensor);
            }
            if ((this.onGetCapJrnEmptySensorCompletedDelegate == null)) {
                this.onGetCapJrnEmptySensorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapJrnEmptySensorCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapJrnEmptySensorDelegate, null, this.onEndGetCapJrnEmptySensorDelegate, this.onGetCapJrnEmptySensorCompletedDelegate, userState);
        }
        
        public bool GetCapJrnItalic() {
            return base.Channel.GetCapJrnItalic();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapJrnItalic(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapJrnItalic(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapJrnItalic(System.IAsyncResult result) {
            return base.Channel.EndGetCapJrnItalic(result);
        }
        
        private System.IAsyncResult OnBeginGetCapJrnItalic(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapJrnItalic(callback, asyncState);
        }
        
        private object[] OnEndGetCapJrnItalic(System.IAsyncResult result) {
            bool retVal = this.EndGetCapJrnItalic(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapJrnItalicCompleted(object state) {
            if ((this.GetCapJrnItalicCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapJrnItalicCompleted(this, new GetCapJrnItalicCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapJrnItalicAsync() {
            this.GetCapJrnItalicAsync(null);
        }
        
        public void GetCapJrnItalicAsync(object userState) {
            if ((this.onBeginGetCapJrnItalicDelegate == null)) {
                this.onBeginGetCapJrnItalicDelegate = new BeginOperationDelegate(this.OnBeginGetCapJrnItalic);
            }
            if ((this.onEndGetCapJrnItalicDelegate == null)) {
                this.onEndGetCapJrnItalicDelegate = new EndOperationDelegate(this.OnEndGetCapJrnItalic);
            }
            if ((this.onGetCapJrnItalicCompletedDelegate == null)) {
                this.onGetCapJrnItalicCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapJrnItalicCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapJrnItalicDelegate, null, this.onEndGetCapJrnItalicDelegate, this.onGetCapJrnItalicCompletedDelegate, userState);
        }
        
        public bool GetCapJrnNearEndSensor() {
            return base.Channel.GetCapJrnNearEndSensor();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapJrnNearEndSensor(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapJrnNearEndSensor(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapJrnNearEndSensor(System.IAsyncResult result) {
            return base.Channel.EndGetCapJrnNearEndSensor(result);
        }
        
        private System.IAsyncResult OnBeginGetCapJrnNearEndSensor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapJrnNearEndSensor(callback, asyncState);
        }
        
        private object[] OnEndGetCapJrnNearEndSensor(System.IAsyncResult result) {
            bool retVal = this.EndGetCapJrnNearEndSensor(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapJrnNearEndSensorCompleted(object state) {
            if ((this.GetCapJrnNearEndSensorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapJrnNearEndSensorCompleted(this, new GetCapJrnNearEndSensorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapJrnNearEndSensorAsync() {
            this.GetCapJrnNearEndSensorAsync(null);
        }
        
        public void GetCapJrnNearEndSensorAsync(object userState) {
            if ((this.onBeginGetCapJrnNearEndSensorDelegate == null)) {
                this.onBeginGetCapJrnNearEndSensorDelegate = new BeginOperationDelegate(this.OnBeginGetCapJrnNearEndSensor);
            }
            if ((this.onEndGetCapJrnNearEndSensorDelegate == null)) {
                this.onEndGetCapJrnNearEndSensorDelegate = new EndOperationDelegate(this.OnEndGetCapJrnNearEndSensor);
            }
            if ((this.onGetCapJrnNearEndSensorCompletedDelegate == null)) {
                this.onGetCapJrnNearEndSensorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapJrnNearEndSensorCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapJrnNearEndSensorDelegate, null, this.onEndGetCapJrnNearEndSensorDelegate, this.onGetCapJrnNearEndSensorCompletedDelegate, userState);
        }
        
        public bool GetCapJrnUnderline() {
            return base.Channel.GetCapJrnUnderline();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapJrnUnderline(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapJrnUnderline(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapJrnUnderline(System.IAsyncResult result) {
            return base.Channel.EndGetCapJrnUnderline(result);
        }
        
        private System.IAsyncResult OnBeginGetCapJrnUnderline(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapJrnUnderline(callback, asyncState);
        }
        
        private object[] OnEndGetCapJrnUnderline(System.IAsyncResult result) {
            bool retVal = this.EndGetCapJrnUnderline(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapJrnUnderlineCompleted(object state) {
            if ((this.GetCapJrnUnderlineCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapJrnUnderlineCompleted(this, new GetCapJrnUnderlineCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapJrnUnderlineAsync() {
            this.GetCapJrnUnderlineAsync(null);
        }
        
        public void GetCapJrnUnderlineAsync(object userState) {
            if ((this.onBeginGetCapJrnUnderlineDelegate == null)) {
                this.onBeginGetCapJrnUnderlineDelegate = new BeginOperationDelegate(this.OnBeginGetCapJrnUnderline);
            }
            if ((this.onEndGetCapJrnUnderlineDelegate == null)) {
                this.onEndGetCapJrnUnderlineDelegate = new EndOperationDelegate(this.OnEndGetCapJrnUnderline);
            }
            if ((this.onGetCapJrnUnderlineCompletedDelegate == null)) {
                this.onGetCapJrnUnderlineCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapJrnUnderlineCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapJrnUnderlineDelegate, null, this.onEndGetCapJrnUnderlineDelegate, this.onGetCapJrnUnderlineCompletedDelegate, userState);
        }
        
        public int GetCapJrnCartridgeSensor() {
            return base.Channel.GetCapJrnCartridgeSensor();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapJrnCartridgeSensor(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapJrnCartridgeSensor(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetCapJrnCartridgeSensor(System.IAsyncResult result) {
            return base.Channel.EndGetCapJrnCartridgeSensor(result);
        }
        
        private System.IAsyncResult OnBeginGetCapJrnCartridgeSensor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapJrnCartridgeSensor(callback, asyncState);
        }
        
        private object[] OnEndGetCapJrnCartridgeSensor(System.IAsyncResult result) {
            int retVal = this.EndGetCapJrnCartridgeSensor(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapJrnCartridgeSensorCompleted(object state) {
            if ((this.GetCapJrnCartridgeSensorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapJrnCartridgeSensorCompleted(this, new GetCapJrnCartridgeSensorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapJrnCartridgeSensorAsync() {
            this.GetCapJrnCartridgeSensorAsync(null);
        }
        
        public void GetCapJrnCartridgeSensorAsync(object userState) {
            if ((this.onBeginGetCapJrnCartridgeSensorDelegate == null)) {
                this.onBeginGetCapJrnCartridgeSensorDelegate = new BeginOperationDelegate(this.OnBeginGetCapJrnCartridgeSensor);
            }
            if ((this.onEndGetCapJrnCartridgeSensorDelegate == null)) {
                this.onEndGetCapJrnCartridgeSensorDelegate = new EndOperationDelegate(this.OnEndGetCapJrnCartridgeSensor);
            }
            if ((this.onGetCapJrnCartridgeSensorCompletedDelegate == null)) {
                this.onGetCapJrnCartridgeSensorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapJrnCartridgeSensorCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapJrnCartridgeSensorDelegate, null, this.onEndGetCapJrnCartridgeSensorDelegate, this.onGetCapJrnCartridgeSensorCompletedDelegate, userState);
        }
        
        public int GetCapJrnColor() {
            return base.Channel.GetCapJrnColor();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapJrnColor(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapJrnColor(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetCapJrnColor(System.IAsyncResult result) {
            return base.Channel.EndGetCapJrnColor(result);
        }
        
        private System.IAsyncResult OnBeginGetCapJrnColor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapJrnColor(callback, asyncState);
        }
        
        private object[] OnEndGetCapJrnColor(System.IAsyncResult result) {
            int retVal = this.EndGetCapJrnColor(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapJrnColorCompleted(object state) {
            if ((this.GetCapJrnColorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapJrnColorCompleted(this, new GetCapJrnColorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapJrnColorAsync() {
            this.GetCapJrnColorAsync(null);
        }
        
        public void GetCapJrnColorAsync(object userState) {
            if ((this.onBeginGetCapJrnColorDelegate == null)) {
                this.onBeginGetCapJrnColorDelegate = new BeginOperationDelegate(this.OnBeginGetCapJrnColor);
            }
            if ((this.onEndGetCapJrnColorDelegate == null)) {
                this.onEndGetCapJrnColorDelegate = new EndOperationDelegate(this.OnEndGetCapJrnColor);
            }
            if ((this.onGetCapJrnColorCompletedDelegate == null)) {
                this.onGetCapJrnColorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapJrnColorCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapJrnColorDelegate, null, this.onEndGetCapJrnColorDelegate, this.onGetCapJrnColorCompletedDelegate, userState);
        }
        
        public bool GetCapRecPresent() {
            return base.Channel.GetCapRecPresent();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapRecPresent(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapRecPresent(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapRecPresent(System.IAsyncResult result) {
            return base.Channel.EndGetCapRecPresent(result);
        }
        
        private System.IAsyncResult OnBeginGetCapRecPresent(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapRecPresent(callback, asyncState);
        }
        
        private object[] OnEndGetCapRecPresent(System.IAsyncResult result) {
            bool retVal = this.EndGetCapRecPresent(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapRecPresentCompleted(object state) {
            if ((this.GetCapRecPresentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapRecPresentCompleted(this, new GetCapRecPresentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapRecPresentAsync() {
            this.GetCapRecPresentAsync(null);
        }
        
        public void GetCapRecPresentAsync(object userState) {
            if ((this.onBeginGetCapRecPresentDelegate == null)) {
                this.onBeginGetCapRecPresentDelegate = new BeginOperationDelegate(this.OnBeginGetCapRecPresent);
            }
            if ((this.onEndGetCapRecPresentDelegate == null)) {
                this.onEndGetCapRecPresentDelegate = new EndOperationDelegate(this.OnEndGetCapRecPresent);
            }
            if ((this.onGetCapRecPresentCompletedDelegate == null)) {
                this.onGetCapRecPresentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapRecPresentCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapRecPresentDelegate, null, this.onEndGetCapRecPresentDelegate, this.onGetCapRecPresentCompletedDelegate, userState);
        }
        
        public bool GetCapRec2Color() {
            return base.Channel.GetCapRec2Color();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapRec2Color(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapRec2Color(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapRec2Color(System.IAsyncResult result) {
            return base.Channel.EndGetCapRec2Color(result);
        }
        
        private System.IAsyncResult OnBeginGetCapRec2Color(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapRec2Color(callback, asyncState);
        }
        
        private object[] OnEndGetCapRec2Color(System.IAsyncResult result) {
            bool retVal = this.EndGetCapRec2Color(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapRec2ColorCompleted(object state) {
            if ((this.GetCapRec2ColorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapRec2ColorCompleted(this, new GetCapRec2ColorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapRec2ColorAsync() {
            this.GetCapRec2ColorAsync(null);
        }
        
        public void GetCapRec2ColorAsync(object userState) {
            if ((this.onBeginGetCapRec2ColorDelegate == null)) {
                this.onBeginGetCapRec2ColorDelegate = new BeginOperationDelegate(this.OnBeginGetCapRec2Color);
            }
            if ((this.onEndGetCapRec2ColorDelegate == null)) {
                this.onEndGetCapRec2ColorDelegate = new EndOperationDelegate(this.OnEndGetCapRec2Color);
            }
            if ((this.onGetCapRec2ColorCompletedDelegate == null)) {
                this.onGetCapRec2ColorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapRec2ColorCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapRec2ColorDelegate, null, this.onEndGetCapRec2ColorDelegate, this.onGetCapRec2ColorCompletedDelegate, userState);
        }
        
        public bool GetCapRecBarCode() {
            return base.Channel.GetCapRecBarCode();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapRecBarCode(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapRecBarCode(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapRecBarCode(System.IAsyncResult result) {
            return base.Channel.EndGetCapRecBarCode(result);
        }
        
        private System.IAsyncResult OnBeginGetCapRecBarCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapRecBarCode(callback, asyncState);
        }
        
        private object[] OnEndGetCapRecBarCode(System.IAsyncResult result) {
            bool retVal = this.EndGetCapRecBarCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapRecBarCodeCompleted(object state) {
            if ((this.GetCapRecBarCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapRecBarCodeCompleted(this, new GetCapRecBarCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapRecBarCodeAsync() {
            this.GetCapRecBarCodeAsync(null);
        }
        
        public void GetCapRecBarCodeAsync(object userState) {
            if ((this.onBeginGetCapRecBarCodeDelegate == null)) {
                this.onBeginGetCapRecBarCodeDelegate = new BeginOperationDelegate(this.OnBeginGetCapRecBarCode);
            }
            if ((this.onEndGetCapRecBarCodeDelegate == null)) {
                this.onEndGetCapRecBarCodeDelegate = new EndOperationDelegate(this.OnEndGetCapRecBarCode);
            }
            if ((this.onGetCapRecBarCodeCompletedDelegate == null)) {
                this.onGetCapRecBarCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapRecBarCodeCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapRecBarCodeDelegate, null, this.onEndGetCapRecBarCodeDelegate, this.onGetCapRecBarCodeCompletedDelegate, userState);
        }
        
        public bool GetCapRecBitmap() {
            return base.Channel.GetCapRecBitmap();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapRecBitmap(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapRecBitmap(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapRecBitmap(System.IAsyncResult result) {
            return base.Channel.EndGetCapRecBitmap(result);
        }
        
        private System.IAsyncResult OnBeginGetCapRecBitmap(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapRecBitmap(callback, asyncState);
        }
        
        private object[] OnEndGetCapRecBitmap(System.IAsyncResult result) {
            bool retVal = this.EndGetCapRecBitmap(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapRecBitmapCompleted(object state) {
            if ((this.GetCapRecBitmapCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapRecBitmapCompleted(this, new GetCapRecBitmapCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapRecBitmapAsync() {
            this.GetCapRecBitmapAsync(null);
        }
        
        public void GetCapRecBitmapAsync(object userState) {
            if ((this.onBeginGetCapRecBitmapDelegate == null)) {
                this.onBeginGetCapRecBitmapDelegate = new BeginOperationDelegate(this.OnBeginGetCapRecBitmap);
            }
            if ((this.onEndGetCapRecBitmapDelegate == null)) {
                this.onEndGetCapRecBitmapDelegate = new EndOperationDelegate(this.OnEndGetCapRecBitmap);
            }
            if ((this.onGetCapRecBitmapCompletedDelegate == null)) {
                this.onGetCapRecBitmapCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapRecBitmapCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapRecBitmapDelegate, null, this.onEndGetCapRecBitmapDelegate, this.onGetCapRecBitmapCompletedDelegate, userState);
        }
        
        public bool GetCapRecBold() {
            return base.Channel.GetCapRecBold();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapRecBold(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapRecBold(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapRecBold(System.IAsyncResult result) {
            return base.Channel.EndGetCapRecBold(result);
        }
        
        private System.IAsyncResult OnBeginGetCapRecBold(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapRecBold(callback, asyncState);
        }
        
        private object[] OnEndGetCapRecBold(System.IAsyncResult result) {
            bool retVal = this.EndGetCapRecBold(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapRecBoldCompleted(object state) {
            if ((this.GetCapRecBoldCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapRecBoldCompleted(this, new GetCapRecBoldCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapRecBoldAsync() {
            this.GetCapRecBoldAsync(null);
        }
        
        public void GetCapRecBoldAsync(object userState) {
            if ((this.onBeginGetCapRecBoldDelegate == null)) {
                this.onBeginGetCapRecBoldDelegate = new BeginOperationDelegate(this.OnBeginGetCapRecBold);
            }
            if ((this.onEndGetCapRecBoldDelegate == null)) {
                this.onEndGetCapRecBoldDelegate = new EndOperationDelegate(this.OnEndGetCapRecBold);
            }
            if ((this.onGetCapRecBoldCompletedDelegate == null)) {
                this.onGetCapRecBoldCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapRecBoldCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapRecBoldDelegate, null, this.onEndGetCapRecBoldDelegate, this.onGetCapRecBoldCompletedDelegate, userState);
        }
        
        public bool GetCapRecDhigh() {
            return base.Channel.GetCapRecDhigh();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapRecDhigh(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapRecDhigh(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapRecDhigh(System.IAsyncResult result) {
            return base.Channel.EndGetCapRecDhigh(result);
        }
        
        private System.IAsyncResult OnBeginGetCapRecDhigh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapRecDhigh(callback, asyncState);
        }
        
        private object[] OnEndGetCapRecDhigh(System.IAsyncResult result) {
            bool retVal = this.EndGetCapRecDhigh(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapRecDhighCompleted(object state) {
            if ((this.GetCapRecDhighCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapRecDhighCompleted(this, new GetCapRecDhighCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapRecDhighAsync() {
            this.GetCapRecDhighAsync(null);
        }
        
        public void GetCapRecDhighAsync(object userState) {
            if ((this.onBeginGetCapRecDhighDelegate == null)) {
                this.onBeginGetCapRecDhighDelegate = new BeginOperationDelegate(this.OnBeginGetCapRecDhigh);
            }
            if ((this.onEndGetCapRecDhighDelegate == null)) {
                this.onEndGetCapRecDhighDelegate = new EndOperationDelegate(this.OnEndGetCapRecDhigh);
            }
            if ((this.onGetCapRecDhighCompletedDelegate == null)) {
                this.onGetCapRecDhighCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapRecDhighCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapRecDhighDelegate, null, this.onEndGetCapRecDhighDelegate, this.onGetCapRecDhighCompletedDelegate, userState);
        }
        
        public bool GetCapRecDwide() {
            return base.Channel.GetCapRecDwide();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapRecDwide(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapRecDwide(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapRecDwide(System.IAsyncResult result) {
            return base.Channel.EndGetCapRecDwide(result);
        }
        
        private System.IAsyncResult OnBeginGetCapRecDwide(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapRecDwide(callback, asyncState);
        }
        
        private object[] OnEndGetCapRecDwide(System.IAsyncResult result) {
            bool retVal = this.EndGetCapRecDwide(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapRecDwideCompleted(object state) {
            if ((this.GetCapRecDwideCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapRecDwideCompleted(this, new GetCapRecDwideCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapRecDwideAsync() {
            this.GetCapRecDwideAsync(null);
        }
        
        public void GetCapRecDwideAsync(object userState) {
            if ((this.onBeginGetCapRecDwideDelegate == null)) {
                this.onBeginGetCapRecDwideDelegate = new BeginOperationDelegate(this.OnBeginGetCapRecDwide);
            }
            if ((this.onEndGetCapRecDwideDelegate == null)) {
                this.onEndGetCapRecDwideDelegate = new EndOperationDelegate(this.OnEndGetCapRecDwide);
            }
            if ((this.onGetCapRecDwideCompletedDelegate == null)) {
                this.onGetCapRecDwideCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapRecDwideCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapRecDwideDelegate, null, this.onEndGetCapRecDwideDelegate, this.onGetCapRecDwideCompletedDelegate, userState);
        }
        
        public bool GetCapRecDwideDhigh() {
            return base.Channel.GetCapRecDwideDhigh();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapRecDwideDhigh(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapRecDwideDhigh(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapRecDwideDhigh(System.IAsyncResult result) {
            return base.Channel.EndGetCapRecDwideDhigh(result);
        }
        
        private System.IAsyncResult OnBeginGetCapRecDwideDhigh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapRecDwideDhigh(callback, asyncState);
        }
        
        private object[] OnEndGetCapRecDwideDhigh(System.IAsyncResult result) {
            bool retVal = this.EndGetCapRecDwideDhigh(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapRecDwideDhighCompleted(object state) {
            if ((this.GetCapRecDwideDhighCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapRecDwideDhighCompleted(this, new GetCapRecDwideDhighCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapRecDwideDhighAsync() {
            this.GetCapRecDwideDhighAsync(null);
        }
        
        public void GetCapRecDwideDhighAsync(object userState) {
            if ((this.onBeginGetCapRecDwideDhighDelegate == null)) {
                this.onBeginGetCapRecDwideDhighDelegate = new BeginOperationDelegate(this.OnBeginGetCapRecDwideDhigh);
            }
            if ((this.onEndGetCapRecDwideDhighDelegate == null)) {
                this.onEndGetCapRecDwideDhighDelegate = new EndOperationDelegate(this.OnEndGetCapRecDwideDhigh);
            }
            if ((this.onGetCapRecDwideDhighCompletedDelegate == null)) {
                this.onGetCapRecDwideDhighCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapRecDwideDhighCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapRecDwideDhighDelegate, null, this.onEndGetCapRecDwideDhighDelegate, this.onGetCapRecDwideDhighCompletedDelegate, userState);
        }
        
        public bool GetCapRecEmptySensor() {
            return base.Channel.GetCapRecEmptySensor();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapRecEmptySensor(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapRecEmptySensor(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapRecEmptySensor(System.IAsyncResult result) {
            return base.Channel.EndGetCapRecEmptySensor(result);
        }
        
        private System.IAsyncResult OnBeginGetCapRecEmptySensor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapRecEmptySensor(callback, asyncState);
        }
        
        private object[] OnEndGetCapRecEmptySensor(System.IAsyncResult result) {
            bool retVal = this.EndGetCapRecEmptySensor(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapRecEmptySensorCompleted(object state) {
            if ((this.GetCapRecEmptySensorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapRecEmptySensorCompleted(this, new GetCapRecEmptySensorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapRecEmptySensorAsync() {
            this.GetCapRecEmptySensorAsync(null);
        }
        
        public void GetCapRecEmptySensorAsync(object userState) {
            if ((this.onBeginGetCapRecEmptySensorDelegate == null)) {
                this.onBeginGetCapRecEmptySensorDelegate = new BeginOperationDelegate(this.OnBeginGetCapRecEmptySensor);
            }
            if ((this.onEndGetCapRecEmptySensorDelegate == null)) {
                this.onEndGetCapRecEmptySensorDelegate = new EndOperationDelegate(this.OnEndGetCapRecEmptySensor);
            }
            if ((this.onGetCapRecEmptySensorCompletedDelegate == null)) {
                this.onGetCapRecEmptySensorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapRecEmptySensorCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapRecEmptySensorDelegate, null, this.onEndGetCapRecEmptySensorDelegate, this.onGetCapRecEmptySensorCompletedDelegate, userState);
        }
        
        public bool GetCapRecItalic() {
            return base.Channel.GetCapRecItalic();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapRecItalic(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapRecItalic(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapRecItalic(System.IAsyncResult result) {
            return base.Channel.EndGetCapRecItalic(result);
        }
        
        private System.IAsyncResult OnBeginGetCapRecItalic(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapRecItalic(callback, asyncState);
        }
        
        private object[] OnEndGetCapRecItalic(System.IAsyncResult result) {
            bool retVal = this.EndGetCapRecItalic(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapRecItalicCompleted(object state) {
            if ((this.GetCapRecItalicCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapRecItalicCompleted(this, new GetCapRecItalicCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapRecItalicAsync() {
            this.GetCapRecItalicAsync(null);
        }
        
        public void GetCapRecItalicAsync(object userState) {
            if ((this.onBeginGetCapRecItalicDelegate == null)) {
                this.onBeginGetCapRecItalicDelegate = new BeginOperationDelegate(this.OnBeginGetCapRecItalic);
            }
            if ((this.onEndGetCapRecItalicDelegate == null)) {
                this.onEndGetCapRecItalicDelegate = new EndOperationDelegate(this.OnEndGetCapRecItalic);
            }
            if ((this.onGetCapRecItalicCompletedDelegate == null)) {
                this.onGetCapRecItalicCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapRecItalicCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapRecItalicDelegate, null, this.onEndGetCapRecItalicDelegate, this.onGetCapRecItalicCompletedDelegate, userState);
        }
        
        public bool GetCapRecLeft90() {
            return base.Channel.GetCapRecLeft90();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapRecLeft90(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapRecLeft90(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapRecLeft90(System.IAsyncResult result) {
            return base.Channel.EndGetCapRecLeft90(result);
        }
        
        private System.IAsyncResult OnBeginGetCapRecLeft90(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapRecLeft90(callback, asyncState);
        }
        
        private object[] OnEndGetCapRecLeft90(System.IAsyncResult result) {
            bool retVal = this.EndGetCapRecLeft90(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapRecLeft90Completed(object state) {
            if ((this.GetCapRecLeft90Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapRecLeft90Completed(this, new GetCapRecLeft90CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapRecLeft90Async() {
            this.GetCapRecLeft90Async(null);
        }
        
        public void GetCapRecLeft90Async(object userState) {
            if ((this.onBeginGetCapRecLeft90Delegate == null)) {
                this.onBeginGetCapRecLeft90Delegate = new BeginOperationDelegate(this.OnBeginGetCapRecLeft90);
            }
            if ((this.onEndGetCapRecLeft90Delegate == null)) {
                this.onEndGetCapRecLeft90Delegate = new EndOperationDelegate(this.OnEndGetCapRecLeft90);
            }
            if ((this.onGetCapRecLeft90CompletedDelegate == null)) {
                this.onGetCapRecLeft90CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapRecLeft90Completed);
            }
            base.InvokeAsync(this.onBeginGetCapRecLeft90Delegate, null, this.onEndGetCapRecLeft90Delegate, this.onGetCapRecLeft90CompletedDelegate, userState);
        }
        
        public bool GetCapRecNearEndSensor() {
            return base.Channel.GetCapRecNearEndSensor();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapRecNearEndSensor(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapRecNearEndSensor(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapRecNearEndSensor(System.IAsyncResult result) {
            return base.Channel.EndGetCapRecNearEndSensor(result);
        }
        
        private System.IAsyncResult OnBeginGetCapRecNearEndSensor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapRecNearEndSensor(callback, asyncState);
        }
        
        private object[] OnEndGetCapRecNearEndSensor(System.IAsyncResult result) {
            bool retVal = this.EndGetCapRecNearEndSensor(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapRecNearEndSensorCompleted(object state) {
            if ((this.GetCapRecNearEndSensorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapRecNearEndSensorCompleted(this, new GetCapRecNearEndSensorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapRecNearEndSensorAsync() {
            this.GetCapRecNearEndSensorAsync(null);
        }
        
        public void GetCapRecNearEndSensorAsync(object userState) {
            if ((this.onBeginGetCapRecNearEndSensorDelegate == null)) {
                this.onBeginGetCapRecNearEndSensorDelegate = new BeginOperationDelegate(this.OnBeginGetCapRecNearEndSensor);
            }
            if ((this.onEndGetCapRecNearEndSensorDelegate == null)) {
                this.onEndGetCapRecNearEndSensorDelegate = new EndOperationDelegate(this.OnEndGetCapRecNearEndSensor);
            }
            if ((this.onGetCapRecNearEndSensorCompletedDelegate == null)) {
                this.onGetCapRecNearEndSensorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapRecNearEndSensorCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapRecNearEndSensorDelegate, null, this.onEndGetCapRecNearEndSensorDelegate, this.onGetCapRecNearEndSensorCompletedDelegate, userState);
        }
        
        public bool GetCapRecPapercut() {
            return base.Channel.GetCapRecPapercut();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapRecPapercut(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapRecPapercut(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapRecPapercut(System.IAsyncResult result) {
            return base.Channel.EndGetCapRecPapercut(result);
        }
        
        private System.IAsyncResult OnBeginGetCapRecPapercut(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapRecPapercut(callback, asyncState);
        }
        
        private object[] OnEndGetCapRecPapercut(System.IAsyncResult result) {
            bool retVal = this.EndGetCapRecPapercut(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapRecPapercutCompleted(object state) {
            if ((this.GetCapRecPapercutCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapRecPapercutCompleted(this, new GetCapRecPapercutCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapRecPapercutAsync() {
            this.GetCapRecPapercutAsync(null);
        }
        
        public void GetCapRecPapercutAsync(object userState) {
            if ((this.onBeginGetCapRecPapercutDelegate == null)) {
                this.onBeginGetCapRecPapercutDelegate = new BeginOperationDelegate(this.OnBeginGetCapRecPapercut);
            }
            if ((this.onEndGetCapRecPapercutDelegate == null)) {
                this.onEndGetCapRecPapercutDelegate = new EndOperationDelegate(this.OnEndGetCapRecPapercut);
            }
            if ((this.onGetCapRecPapercutCompletedDelegate == null)) {
                this.onGetCapRecPapercutCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapRecPapercutCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapRecPapercutDelegate, null, this.onEndGetCapRecPapercutDelegate, this.onGetCapRecPapercutCompletedDelegate, userState);
        }
        
        public bool GetCapRecRight90() {
            return base.Channel.GetCapRecRight90();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapRecRight90(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapRecRight90(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapRecRight90(System.IAsyncResult result) {
            return base.Channel.EndGetCapRecRight90(result);
        }
        
        private System.IAsyncResult OnBeginGetCapRecRight90(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapRecRight90(callback, asyncState);
        }
        
        private object[] OnEndGetCapRecRight90(System.IAsyncResult result) {
            bool retVal = this.EndGetCapRecRight90(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapRecRight90Completed(object state) {
            if ((this.GetCapRecRight90Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapRecRight90Completed(this, new GetCapRecRight90CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapRecRight90Async() {
            this.GetCapRecRight90Async(null);
        }
        
        public void GetCapRecRight90Async(object userState) {
            if ((this.onBeginGetCapRecRight90Delegate == null)) {
                this.onBeginGetCapRecRight90Delegate = new BeginOperationDelegate(this.OnBeginGetCapRecRight90);
            }
            if ((this.onEndGetCapRecRight90Delegate == null)) {
                this.onEndGetCapRecRight90Delegate = new EndOperationDelegate(this.OnEndGetCapRecRight90);
            }
            if ((this.onGetCapRecRight90CompletedDelegate == null)) {
                this.onGetCapRecRight90CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapRecRight90Completed);
            }
            base.InvokeAsync(this.onBeginGetCapRecRight90Delegate, null, this.onEndGetCapRecRight90Delegate, this.onGetCapRecRight90CompletedDelegate, userState);
        }
        
        public bool GetCapRecRotate180() {
            return base.Channel.GetCapRecRotate180();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapRecRotate180(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapRecRotate180(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapRecRotate180(System.IAsyncResult result) {
            return base.Channel.EndGetCapRecRotate180(result);
        }
        
        private System.IAsyncResult OnBeginGetCapRecRotate180(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapRecRotate180(callback, asyncState);
        }
        
        private object[] OnEndGetCapRecRotate180(System.IAsyncResult result) {
            bool retVal = this.EndGetCapRecRotate180(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapRecRotate180Completed(object state) {
            if ((this.GetCapRecRotate180Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapRecRotate180Completed(this, new GetCapRecRotate180CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapRecRotate180Async() {
            this.GetCapRecRotate180Async(null);
        }
        
        public void GetCapRecRotate180Async(object userState) {
            if ((this.onBeginGetCapRecRotate180Delegate == null)) {
                this.onBeginGetCapRecRotate180Delegate = new BeginOperationDelegate(this.OnBeginGetCapRecRotate180);
            }
            if ((this.onEndGetCapRecRotate180Delegate == null)) {
                this.onEndGetCapRecRotate180Delegate = new EndOperationDelegate(this.OnEndGetCapRecRotate180);
            }
            if ((this.onGetCapRecRotate180CompletedDelegate == null)) {
                this.onGetCapRecRotate180CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapRecRotate180Completed);
            }
            base.InvokeAsync(this.onBeginGetCapRecRotate180Delegate, null, this.onEndGetCapRecRotate180Delegate, this.onGetCapRecRotate180CompletedDelegate, userState);
        }
        
        public bool GetCapRecStamp() {
            return base.Channel.GetCapRecStamp();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapRecStamp(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapRecStamp(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapRecStamp(System.IAsyncResult result) {
            return base.Channel.EndGetCapRecStamp(result);
        }
        
        private System.IAsyncResult OnBeginGetCapRecStamp(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapRecStamp(callback, asyncState);
        }
        
        private object[] OnEndGetCapRecStamp(System.IAsyncResult result) {
            bool retVal = this.EndGetCapRecStamp(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapRecStampCompleted(object state) {
            if ((this.GetCapRecStampCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapRecStampCompleted(this, new GetCapRecStampCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapRecStampAsync() {
            this.GetCapRecStampAsync(null);
        }
        
        public void GetCapRecStampAsync(object userState) {
            if ((this.onBeginGetCapRecStampDelegate == null)) {
                this.onBeginGetCapRecStampDelegate = new BeginOperationDelegate(this.OnBeginGetCapRecStamp);
            }
            if ((this.onEndGetCapRecStampDelegate == null)) {
                this.onEndGetCapRecStampDelegate = new EndOperationDelegate(this.OnEndGetCapRecStamp);
            }
            if ((this.onGetCapRecStampCompletedDelegate == null)) {
                this.onGetCapRecStampCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapRecStampCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapRecStampDelegate, null, this.onEndGetCapRecStampDelegate, this.onGetCapRecStampCompletedDelegate, userState);
        }
        
        public bool GetCapRecUnderline() {
            return base.Channel.GetCapRecUnderline();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapRecUnderline(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapRecUnderline(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapRecUnderline(System.IAsyncResult result) {
            return base.Channel.EndGetCapRecUnderline(result);
        }
        
        private System.IAsyncResult OnBeginGetCapRecUnderline(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapRecUnderline(callback, asyncState);
        }
        
        private object[] OnEndGetCapRecUnderline(System.IAsyncResult result) {
            bool retVal = this.EndGetCapRecUnderline(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapRecUnderlineCompleted(object state) {
            if ((this.GetCapRecUnderlineCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapRecUnderlineCompleted(this, new GetCapRecUnderlineCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapRecUnderlineAsync() {
            this.GetCapRecUnderlineAsync(null);
        }
        
        public void GetCapRecUnderlineAsync(object userState) {
            if ((this.onBeginGetCapRecUnderlineDelegate == null)) {
                this.onBeginGetCapRecUnderlineDelegate = new BeginOperationDelegate(this.OnBeginGetCapRecUnderline);
            }
            if ((this.onEndGetCapRecUnderlineDelegate == null)) {
                this.onEndGetCapRecUnderlineDelegate = new EndOperationDelegate(this.OnEndGetCapRecUnderline);
            }
            if ((this.onGetCapRecUnderlineCompletedDelegate == null)) {
                this.onGetCapRecUnderlineCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapRecUnderlineCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapRecUnderlineDelegate, null, this.onEndGetCapRecUnderlineDelegate, this.onGetCapRecUnderlineCompletedDelegate, userState);
        }
        
        public int GetCapRecCartridgeSensor() {
            return base.Channel.GetCapRecCartridgeSensor();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapRecCartridgeSensor(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapRecCartridgeSensor(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetCapRecCartridgeSensor(System.IAsyncResult result) {
            return base.Channel.EndGetCapRecCartridgeSensor(result);
        }
        
        private System.IAsyncResult OnBeginGetCapRecCartridgeSensor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapRecCartridgeSensor(callback, asyncState);
        }
        
        private object[] OnEndGetCapRecCartridgeSensor(System.IAsyncResult result) {
            int retVal = this.EndGetCapRecCartridgeSensor(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapRecCartridgeSensorCompleted(object state) {
            if ((this.GetCapRecCartridgeSensorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapRecCartridgeSensorCompleted(this, new GetCapRecCartridgeSensorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapRecCartridgeSensorAsync() {
            this.GetCapRecCartridgeSensorAsync(null);
        }
        
        public void GetCapRecCartridgeSensorAsync(object userState) {
            if ((this.onBeginGetCapRecCartridgeSensorDelegate == null)) {
                this.onBeginGetCapRecCartridgeSensorDelegate = new BeginOperationDelegate(this.OnBeginGetCapRecCartridgeSensor);
            }
            if ((this.onEndGetCapRecCartridgeSensorDelegate == null)) {
                this.onEndGetCapRecCartridgeSensorDelegate = new EndOperationDelegate(this.OnEndGetCapRecCartridgeSensor);
            }
            if ((this.onGetCapRecCartridgeSensorCompletedDelegate == null)) {
                this.onGetCapRecCartridgeSensorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapRecCartridgeSensorCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapRecCartridgeSensorDelegate, null, this.onEndGetCapRecCartridgeSensorDelegate, this.onGetCapRecCartridgeSensorCompletedDelegate, userState);
        }
        
        public int GetCapRecColor() {
            return base.Channel.GetCapRecColor();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapRecColor(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapRecColor(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetCapRecColor(System.IAsyncResult result) {
            return base.Channel.EndGetCapRecColor(result);
        }
        
        private System.IAsyncResult OnBeginGetCapRecColor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapRecColor(callback, asyncState);
        }
        
        private object[] OnEndGetCapRecColor(System.IAsyncResult result) {
            int retVal = this.EndGetCapRecColor(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapRecColorCompleted(object state) {
            if ((this.GetCapRecColorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapRecColorCompleted(this, new GetCapRecColorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapRecColorAsync() {
            this.GetCapRecColorAsync(null);
        }
        
        public void GetCapRecColorAsync(object userState) {
            if ((this.onBeginGetCapRecColorDelegate == null)) {
                this.onBeginGetCapRecColorDelegate = new BeginOperationDelegate(this.OnBeginGetCapRecColor);
            }
            if ((this.onEndGetCapRecColorDelegate == null)) {
                this.onEndGetCapRecColorDelegate = new EndOperationDelegate(this.OnEndGetCapRecColor);
            }
            if ((this.onGetCapRecColorCompletedDelegate == null)) {
                this.onGetCapRecColorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapRecColorCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapRecColorDelegate, null, this.onEndGetCapRecColorDelegate, this.onGetCapRecColorCompletedDelegate, userState);
        }
        
        public int GetCapRecMarkFeed() {
            return base.Channel.GetCapRecMarkFeed();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapRecMarkFeed(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapRecMarkFeed(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetCapRecMarkFeed(System.IAsyncResult result) {
            return base.Channel.EndGetCapRecMarkFeed(result);
        }
        
        private System.IAsyncResult OnBeginGetCapRecMarkFeed(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapRecMarkFeed(callback, asyncState);
        }
        
        private object[] OnEndGetCapRecMarkFeed(System.IAsyncResult result) {
            int retVal = this.EndGetCapRecMarkFeed(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapRecMarkFeedCompleted(object state) {
            if ((this.GetCapRecMarkFeedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapRecMarkFeedCompleted(this, new GetCapRecMarkFeedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapRecMarkFeedAsync() {
            this.GetCapRecMarkFeedAsync(null);
        }
        
        public void GetCapRecMarkFeedAsync(object userState) {
            if ((this.onBeginGetCapRecMarkFeedDelegate == null)) {
                this.onBeginGetCapRecMarkFeedDelegate = new BeginOperationDelegate(this.OnBeginGetCapRecMarkFeed);
            }
            if ((this.onEndGetCapRecMarkFeedDelegate == null)) {
                this.onEndGetCapRecMarkFeedDelegate = new EndOperationDelegate(this.OnEndGetCapRecMarkFeed);
            }
            if ((this.onGetCapRecMarkFeedCompletedDelegate == null)) {
                this.onGetCapRecMarkFeedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapRecMarkFeedCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapRecMarkFeedDelegate, null, this.onEndGetCapRecMarkFeedDelegate, this.onGetCapRecMarkFeedCompletedDelegate, userState);
        }
        
        public bool GetCapRecPageMode() {
            return base.Channel.GetCapRecPageMode();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapRecPageMode(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapRecPageMode(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapRecPageMode(System.IAsyncResult result) {
            return base.Channel.EndGetCapRecPageMode(result);
        }
        
        private System.IAsyncResult OnBeginGetCapRecPageMode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapRecPageMode(callback, asyncState);
        }
        
        private object[] OnEndGetCapRecPageMode(System.IAsyncResult result) {
            bool retVal = this.EndGetCapRecPageMode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapRecPageModeCompleted(object state) {
            if ((this.GetCapRecPageModeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapRecPageModeCompleted(this, new GetCapRecPageModeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapRecPageModeAsync() {
            this.GetCapRecPageModeAsync(null);
        }
        
        public void GetCapRecPageModeAsync(object userState) {
            if ((this.onBeginGetCapRecPageModeDelegate == null)) {
                this.onBeginGetCapRecPageModeDelegate = new BeginOperationDelegate(this.OnBeginGetCapRecPageMode);
            }
            if ((this.onEndGetCapRecPageModeDelegate == null)) {
                this.onEndGetCapRecPageModeDelegate = new EndOperationDelegate(this.OnEndGetCapRecPageMode);
            }
            if ((this.onGetCapRecPageModeCompletedDelegate == null)) {
                this.onGetCapRecPageModeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapRecPageModeCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapRecPageModeDelegate, null, this.onEndGetCapRecPageModeDelegate, this.onGetCapRecPageModeCompletedDelegate, userState);
        }
        
        public int GetCapRecRuledLine() {
            return base.Channel.GetCapRecRuledLine();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapRecRuledLine(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapRecRuledLine(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetCapRecRuledLine(System.IAsyncResult result) {
            return base.Channel.EndGetCapRecRuledLine(result);
        }
        
        private System.IAsyncResult OnBeginGetCapRecRuledLine(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapRecRuledLine(callback, asyncState);
        }
        
        private object[] OnEndGetCapRecRuledLine(System.IAsyncResult result) {
            int retVal = this.EndGetCapRecRuledLine(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapRecRuledLineCompleted(object state) {
            if ((this.GetCapRecRuledLineCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapRecRuledLineCompleted(this, new GetCapRecRuledLineCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapRecRuledLineAsync() {
            this.GetCapRecRuledLineAsync(null);
        }
        
        public void GetCapRecRuledLineAsync(object userState) {
            if ((this.onBeginGetCapRecRuledLineDelegate == null)) {
                this.onBeginGetCapRecRuledLineDelegate = new BeginOperationDelegate(this.OnBeginGetCapRecRuledLine);
            }
            if ((this.onEndGetCapRecRuledLineDelegate == null)) {
                this.onEndGetCapRecRuledLineDelegate = new EndOperationDelegate(this.OnEndGetCapRecRuledLine);
            }
            if ((this.onGetCapRecRuledLineCompletedDelegate == null)) {
                this.onGetCapRecRuledLineCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapRecRuledLineCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapRecRuledLineDelegate, null, this.onEndGetCapRecRuledLineDelegate, this.onGetCapRecRuledLineCompletedDelegate, userState);
        }
        
        public bool GetCapCompareFirmwareVersion() {
            return base.Channel.GetCapCompareFirmwareVersion();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapCompareFirmwareVersion(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapCompareFirmwareVersion(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapCompareFirmwareVersion(System.IAsyncResult result) {
            return base.Channel.EndGetCapCompareFirmwareVersion(result);
        }
        
        private System.IAsyncResult OnBeginGetCapCompareFirmwareVersion(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapCompareFirmwareVersion(callback, asyncState);
        }
        
        private object[] OnEndGetCapCompareFirmwareVersion(System.IAsyncResult result) {
            bool retVal = this.EndGetCapCompareFirmwareVersion(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapCompareFirmwareVersionCompleted(object state) {
            if ((this.GetCapCompareFirmwareVersionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapCompareFirmwareVersionCompleted(this, new GetCapCompareFirmwareVersionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapCompareFirmwareVersionAsync() {
            this.GetCapCompareFirmwareVersionAsync(null);
        }
        
        public void GetCapCompareFirmwareVersionAsync(object userState) {
            if ((this.onBeginGetCapCompareFirmwareVersionDelegate == null)) {
                this.onBeginGetCapCompareFirmwareVersionDelegate = new BeginOperationDelegate(this.OnBeginGetCapCompareFirmwareVersion);
            }
            if ((this.onEndGetCapCompareFirmwareVersionDelegate == null)) {
                this.onEndGetCapCompareFirmwareVersionDelegate = new EndOperationDelegate(this.OnEndGetCapCompareFirmwareVersion);
            }
            if ((this.onGetCapCompareFirmwareVersionCompletedDelegate == null)) {
                this.onGetCapCompareFirmwareVersionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapCompareFirmwareVersionCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapCompareFirmwareVersionDelegate, null, this.onEndGetCapCompareFirmwareVersionDelegate, this.onGetCapCompareFirmwareVersionCompletedDelegate, userState);
        }
        
        public WSPoS.POSPrinterServiceReference.PowerReporting GetCapPowerReporting() {
            return base.Channel.GetCapPowerReporting();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapPowerReporting(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapPowerReporting(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WSPoS.POSPrinterServiceReference.PowerReporting EndGetCapPowerReporting(System.IAsyncResult result) {
            return base.Channel.EndGetCapPowerReporting(result);
        }
        
        private System.IAsyncResult OnBeginGetCapPowerReporting(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapPowerReporting(callback, asyncState);
        }
        
        private object[] OnEndGetCapPowerReporting(System.IAsyncResult result) {
            WSPoS.POSPrinterServiceReference.PowerReporting retVal = this.EndGetCapPowerReporting(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapPowerReportingCompleted(object state) {
            if ((this.GetCapPowerReportingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapPowerReportingCompleted(this, new GetCapPowerReportingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapPowerReportingAsync() {
            this.GetCapPowerReportingAsync(null);
        }
        
        public void GetCapPowerReportingAsync(object userState) {
            if ((this.onBeginGetCapPowerReportingDelegate == null)) {
                this.onBeginGetCapPowerReportingDelegate = new BeginOperationDelegate(this.OnBeginGetCapPowerReporting);
            }
            if ((this.onEndGetCapPowerReportingDelegate == null)) {
                this.onEndGetCapPowerReportingDelegate = new EndOperationDelegate(this.OnEndGetCapPowerReporting);
            }
            if ((this.onGetCapPowerReportingCompletedDelegate == null)) {
                this.onGetCapPowerReportingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapPowerReportingCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapPowerReportingDelegate, null, this.onEndGetCapPowerReportingDelegate, this.onGetCapPowerReportingCompletedDelegate, userState);
        }
        
        public bool GetCapStatisticsReporting() {
            return base.Channel.GetCapStatisticsReporting();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapStatisticsReporting(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapStatisticsReporting(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapStatisticsReporting(System.IAsyncResult result) {
            return base.Channel.EndGetCapStatisticsReporting(result);
        }
        
        private System.IAsyncResult OnBeginGetCapStatisticsReporting(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapStatisticsReporting(callback, asyncState);
        }
        
        private object[] OnEndGetCapStatisticsReporting(System.IAsyncResult result) {
            bool retVal = this.EndGetCapStatisticsReporting(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapStatisticsReportingCompleted(object state) {
            if ((this.GetCapStatisticsReportingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapStatisticsReportingCompleted(this, new GetCapStatisticsReportingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapStatisticsReportingAsync() {
            this.GetCapStatisticsReportingAsync(null);
        }
        
        public void GetCapStatisticsReportingAsync(object userState) {
            if ((this.onBeginGetCapStatisticsReportingDelegate == null)) {
                this.onBeginGetCapStatisticsReportingDelegate = new BeginOperationDelegate(this.OnBeginGetCapStatisticsReporting);
            }
            if ((this.onEndGetCapStatisticsReportingDelegate == null)) {
                this.onEndGetCapStatisticsReportingDelegate = new EndOperationDelegate(this.OnEndGetCapStatisticsReporting);
            }
            if ((this.onGetCapStatisticsReportingCompletedDelegate == null)) {
                this.onGetCapStatisticsReportingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapStatisticsReportingCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapStatisticsReportingDelegate, null, this.onEndGetCapStatisticsReportingDelegate, this.onGetCapStatisticsReportingCompletedDelegate, userState);
        }
        
        public bool GetCapUpdateFirmware() {
            return base.Channel.GetCapUpdateFirmware();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapUpdateFirmware(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapUpdateFirmware(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapUpdateFirmware(System.IAsyncResult result) {
            return base.Channel.EndGetCapUpdateFirmware(result);
        }
        
        private System.IAsyncResult OnBeginGetCapUpdateFirmware(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapUpdateFirmware(callback, asyncState);
        }
        
        private object[] OnEndGetCapUpdateFirmware(System.IAsyncResult result) {
            bool retVal = this.EndGetCapUpdateFirmware(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapUpdateFirmwareCompleted(object state) {
            if ((this.GetCapUpdateFirmwareCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapUpdateFirmwareCompleted(this, new GetCapUpdateFirmwareCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapUpdateFirmwareAsync() {
            this.GetCapUpdateFirmwareAsync(null);
        }
        
        public void GetCapUpdateFirmwareAsync(object userState) {
            if ((this.onBeginGetCapUpdateFirmwareDelegate == null)) {
                this.onBeginGetCapUpdateFirmwareDelegate = new BeginOperationDelegate(this.OnBeginGetCapUpdateFirmware);
            }
            if ((this.onEndGetCapUpdateFirmwareDelegate == null)) {
                this.onEndGetCapUpdateFirmwareDelegate = new EndOperationDelegate(this.OnEndGetCapUpdateFirmware);
            }
            if ((this.onGetCapUpdateFirmwareCompletedDelegate == null)) {
                this.onGetCapUpdateFirmwareCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapUpdateFirmwareCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapUpdateFirmwareDelegate, null, this.onEndGetCapUpdateFirmwareDelegate, this.onGetCapUpdateFirmwareCompletedDelegate, userState);
        }
        
        public bool GetCapUpdateStatistics() {
            return base.Channel.GetCapUpdateStatistics();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapUpdateStatistics(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapUpdateStatistics(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapUpdateStatistics(System.IAsyncResult result) {
            return base.Channel.EndGetCapUpdateStatistics(result);
        }
        
        private System.IAsyncResult OnBeginGetCapUpdateStatistics(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapUpdateStatistics(callback, asyncState);
        }
        
        private object[] OnEndGetCapUpdateStatistics(System.IAsyncResult result) {
            bool retVal = this.EndGetCapUpdateStatistics(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapUpdateStatisticsCompleted(object state) {
            if ((this.GetCapUpdateStatisticsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapUpdateStatisticsCompleted(this, new GetCapUpdateStatisticsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapUpdateStatisticsAsync() {
            this.GetCapUpdateStatisticsAsync(null);
        }
        
        public void GetCapUpdateStatisticsAsync(object userState) {
            if ((this.onBeginGetCapUpdateStatisticsDelegate == null)) {
                this.onBeginGetCapUpdateStatisticsDelegate = new BeginOperationDelegate(this.OnBeginGetCapUpdateStatistics);
            }
            if ((this.onEndGetCapUpdateStatisticsDelegate == null)) {
                this.onEndGetCapUpdateStatisticsDelegate = new EndOperationDelegate(this.OnEndGetCapUpdateStatistics);
            }
            if ((this.onGetCapUpdateStatisticsCompletedDelegate == null)) {
                this.onGetCapUpdateStatisticsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapUpdateStatisticsCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapUpdateStatisticsDelegate, null, this.onEndGetCapUpdateStatisticsDelegate, this.onGetCapUpdateStatisticsCompletedDelegate, userState);
        }
        
        public string GetCheckHealthText() {
            return base.Channel.GetCheckHealthText();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCheckHealthText(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCheckHealthText(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetCheckHealthText(System.IAsyncResult result) {
            return base.Channel.EndGetCheckHealthText(result);
        }
        
        private System.IAsyncResult OnBeginGetCheckHealthText(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCheckHealthText(callback, asyncState);
        }
        
        private object[] OnEndGetCheckHealthText(System.IAsyncResult result) {
            string retVal = this.EndGetCheckHealthText(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCheckHealthTextCompleted(object state) {
            if ((this.GetCheckHealthTextCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCheckHealthTextCompleted(this, new GetCheckHealthTextCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCheckHealthTextAsync() {
            this.GetCheckHealthTextAsync(null);
        }
        
        public void GetCheckHealthTextAsync(object userState) {
            if ((this.onBeginGetCheckHealthTextDelegate == null)) {
                this.onBeginGetCheckHealthTextDelegate = new BeginOperationDelegate(this.OnBeginGetCheckHealthText);
            }
            if ((this.onEndGetCheckHealthTextDelegate == null)) {
                this.onEndGetCheckHealthTextDelegate = new EndOperationDelegate(this.OnEndGetCheckHealthText);
            }
            if ((this.onGetCheckHealthTextCompletedDelegate == null)) {
                this.onGetCheckHealthTextCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCheckHealthTextCompleted);
            }
            base.InvokeAsync(this.onBeginGetCheckHealthTextDelegate, null, this.onEndGetCheckHealthTextDelegate, this.onGetCheckHealthTextCompletedDelegate, userState);
        }
        
        public bool GetClaimed() {
            return base.Channel.GetClaimed();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetClaimed(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetClaimed(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetClaimed(System.IAsyncResult result) {
            return base.Channel.EndGetClaimed(result);
        }
        
        private System.IAsyncResult OnBeginGetClaimed(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetClaimed(callback, asyncState);
        }
        
        private object[] OnEndGetClaimed(System.IAsyncResult result) {
            bool retVal = this.EndGetClaimed(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetClaimedCompleted(object state) {
            if ((this.GetClaimedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetClaimedCompleted(this, new GetClaimedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetClaimedAsync() {
            this.GetClaimedAsync(null);
        }
        
        public void GetClaimedAsync(object userState) {
            if ((this.onBeginGetClaimedDelegate == null)) {
                this.onBeginGetClaimedDelegate = new BeginOperationDelegate(this.OnBeginGetClaimed);
            }
            if ((this.onEndGetClaimedDelegate == null)) {
                this.onEndGetClaimedDelegate = new EndOperationDelegate(this.OnEndGetClaimed);
            }
            if ((this.onGetClaimedCompletedDelegate == null)) {
                this.onGetClaimedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetClaimedCompleted);
            }
            base.InvokeAsync(this.onBeginGetClaimedDelegate, null, this.onEndGetClaimedDelegate, this.onGetClaimedCompletedDelegate, userState);
        }
        
        public bool GetDeviceEnabled() {
            return base.Channel.GetDeviceEnabled();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDeviceEnabled(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDeviceEnabled(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetDeviceEnabled(System.IAsyncResult result) {
            return base.Channel.EndGetDeviceEnabled(result);
        }
        
        private System.IAsyncResult OnBeginGetDeviceEnabled(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetDeviceEnabled(callback, asyncState);
        }
        
        private object[] OnEndGetDeviceEnabled(System.IAsyncResult result) {
            bool retVal = this.EndGetDeviceEnabled(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDeviceEnabledCompleted(object state) {
            if ((this.GetDeviceEnabledCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDeviceEnabledCompleted(this, new GetDeviceEnabledCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDeviceEnabledAsync() {
            this.GetDeviceEnabledAsync(null);
        }
        
        public void GetDeviceEnabledAsync(object userState) {
            if ((this.onBeginGetDeviceEnabledDelegate == null)) {
                this.onBeginGetDeviceEnabledDelegate = new BeginOperationDelegate(this.OnBeginGetDeviceEnabled);
            }
            if ((this.onEndGetDeviceEnabledDelegate == null)) {
                this.onEndGetDeviceEnabledDelegate = new EndOperationDelegate(this.OnEndGetDeviceEnabled);
            }
            if ((this.onGetDeviceEnabledCompletedDelegate == null)) {
                this.onGetDeviceEnabledCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDeviceEnabledCompleted);
            }
            base.InvokeAsync(this.onBeginGetDeviceEnabledDelegate, null, this.onEndGetDeviceEnabledDelegate, this.onGetDeviceEnabledCompletedDelegate, userState);
        }
        
        public void SetDeviceEnabled(bool DeviceEnabled) {
            base.Channel.SetDeviceEnabled(DeviceEnabled);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetDeviceEnabled(bool DeviceEnabled, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetDeviceEnabled(DeviceEnabled, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetDeviceEnabled(System.IAsyncResult result) {
            base.Channel.EndSetDeviceEnabled(result);
        }
        
        private System.IAsyncResult OnBeginSetDeviceEnabled(object[] inValues, System.AsyncCallback callback, object asyncState) {
            bool DeviceEnabled = ((bool)(inValues[0]));
            return this.BeginSetDeviceEnabled(DeviceEnabled, callback, asyncState);
        }
        
        private object[] OnEndSetDeviceEnabled(System.IAsyncResult result) {
            this.EndSetDeviceEnabled(result);
            return null;
        }
        
        private void OnSetDeviceEnabledCompleted(object state) {
            if ((this.SetDeviceEnabledCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetDeviceEnabledCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetDeviceEnabledAsync(bool DeviceEnabled) {
            this.SetDeviceEnabledAsync(DeviceEnabled, null);
        }
        
        public void SetDeviceEnabledAsync(bool DeviceEnabled, object userState) {
            if ((this.onBeginSetDeviceEnabledDelegate == null)) {
                this.onBeginSetDeviceEnabledDelegate = new BeginOperationDelegate(this.OnBeginSetDeviceEnabled);
            }
            if ((this.onEndSetDeviceEnabledDelegate == null)) {
                this.onEndSetDeviceEnabledDelegate = new EndOperationDelegate(this.OnEndSetDeviceEnabled);
            }
            if ((this.onSetDeviceEnabledCompletedDelegate == null)) {
                this.onSetDeviceEnabledCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetDeviceEnabledCompleted);
            }
            base.InvokeAsync(this.onBeginSetDeviceEnabledDelegate, new object[] {
                        DeviceEnabled}, this.onEndSetDeviceEnabledDelegate, this.onSetDeviceEnabledCompletedDelegate, userState);
        }
        
        public bool GetFreezeEvents() {
            return base.Channel.GetFreezeEvents();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetFreezeEvents(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFreezeEvents(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetFreezeEvents(System.IAsyncResult result) {
            return base.Channel.EndGetFreezeEvents(result);
        }
        
        private System.IAsyncResult OnBeginGetFreezeEvents(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetFreezeEvents(callback, asyncState);
        }
        
        private object[] OnEndGetFreezeEvents(System.IAsyncResult result) {
            bool retVal = this.EndGetFreezeEvents(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFreezeEventsCompleted(object state) {
            if ((this.GetFreezeEventsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFreezeEventsCompleted(this, new GetFreezeEventsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFreezeEventsAsync() {
            this.GetFreezeEventsAsync(null);
        }
        
        public void GetFreezeEventsAsync(object userState) {
            if ((this.onBeginGetFreezeEventsDelegate == null)) {
                this.onBeginGetFreezeEventsDelegate = new BeginOperationDelegate(this.OnBeginGetFreezeEvents);
            }
            if ((this.onEndGetFreezeEventsDelegate == null)) {
                this.onEndGetFreezeEventsDelegate = new EndOperationDelegate(this.OnEndGetFreezeEvents);
            }
            if ((this.onGetFreezeEventsCompletedDelegate == null)) {
                this.onGetFreezeEventsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFreezeEventsCompleted);
            }
            base.InvokeAsync(this.onBeginGetFreezeEventsDelegate, null, this.onEndGetFreezeEventsDelegate, this.onGetFreezeEventsCompletedDelegate, userState);
        }
        
        public void SetFreezeEvents(bool FreezeEvents) {
            base.Channel.SetFreezeEvents(FreezeEvents);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetFreezeEvents(bool FreezeEvents, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetFreezeEvents(FreezeEvents, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetFreezeEvents(System.IAsyncResult result) {
            base.Channel.EndSetFreezeEvents(result);
        }
        
        private System.IAsyncResult OnBeginSetFreezeEvents(object[] inValues, System.AsyncCallback callback, object asyncState) {
            bool FreezeEvents = ((bool)(inValues[0]));
            return this.BeginSetFreezeEvents(FreezeEvents, callback, asyncState);
        }
        
        private object[] OnEndSetFreezeEvents(System.IAsyncResult result) {
            this.EndSetFreezeEvents(result);
            return null;
        }
        
        private void OnSetFreezeEventsCompleted(object state) {
            if ((this.SetFreezeEventsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetFreezeEventsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetFreezeEventsAsync(bool FreezeEvents) {
            this.SetFreezeEventsAsync(FreezeEvents, null);
        }
        
        public void SetFreezeEventsAsync(bool FreezeEvents, object userState) {
            if ((this.onBeginSetFreezeEventsDelegate == null)) {
                this.onBeginSetFreezeEventsDelegate = new BeginOperationDelegate(this.OnBeginSetFreezeEvents);
            }
            if ((this.onEndSetFreezeEventsDelegate == null)) {
                this.onEndSetFreezeEventsDelegate = new EndOperationDelegate(this.OnEndSetFreezeEvents);
            }
            if ((this.onSetFreezeEventsCompletedDelegate == null)) {
                this.onSetFreezeEventsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetFreezeEventsCompleted);
            }
            base.InvokeAsync(this.onBeginSetFreezeEventsDelegate, new object[] {
                        FreezeEvents}, this.onEndSetFreezeEventsDelegate, this.onSetFreezeEventsCompletedDelegate, userState);
        }
        
        public int GetOutputID() {
            return base.Channel.GetOutputID();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetOutputID(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOutputID(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetOutputID(System.IAsyncResult result) {
            return base.Channel.EndGetOutputID(result);
        }
        
        private System.IAsyncResult OnBeginGetOutputID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetOutputID(callback, asyncState);
        }
        
        private object[] OnEndGetOutputID(System.IAsyncResult result) {
            int retVal = this.EndGetOutputID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOutputIDCompleted(object state) {
            if ((this.GetOutputIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOutputIDCompleted(this, new GetOutputIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOutputIDAsync() {
            this.GetOutputIDAsync(null);
        }
        
        public void GetOutputIDAsync(object userState) {
            if ((this.onBeginGetOutputIDDelegate == null)) {
                this.onBeginGetOutputIDDelegate = new BeginOperationDelegate(this.OnBeginGetOutputID);
            }
            if ((this.onEndGetOutputIDDelegate == null)) {
                this.onEndGetOutputIDDelegate = new EndOperationDelegate(this.OnEndGetOutputID);
            }
            if ((this.onGetOutputIDCompletedDelegate == null)) {
                this.onGetOutputIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOutputIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetOutputIDDelegate, null, this.onEndGetOutputIDDelegate, this.onGetOutputIDCompletedDelegate, userState);
        }
        
        public WSPoS.POSPrinterServiceReference.PowerNotification GetPowerNotify() {
            return base.Channel.GetPowerNotify();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPowerNotify(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPowerNotify(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WSPoS.POSPrinterServiceReference.PowerNotification EndGetPowerNotify(System.IAsyncResult result) {
            return base.Channel.EndGetPowerNotify(result);
        }
        
        private System.IAsyncResult OnBeginGetPowerNotify(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetPowerNotify(callback, asyncState);
        }
        
        private object[] OnEndGetPowerNotify(System.IAsyncResult result) {
            WSPoS.POSPrinterServiceReference.PowerNotification retVal = this.EndGetPowerNotify(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPowerNotifyCompleted(object state) {
            if ((this.GetPowerNotifyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPowerNotifyCompleted(this, new GetPowerNotifyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPowerNotifyAsync() {
            this.GetPowerNotifyAsync(null);
        }
        
        public void GetPowerNotifyAsync(object userState) {
            if ((this.onBeginGetPowerNotifyDelegate == null)) {
                this.onBeginGetPowerNotifyDelegate = new BeginOperationDelegate(this.OnBeginGetPowerNotify);
            }
            if ((this.onEndGetPowerNotifyDelegate == null)) {
                this.onEndGetPowerNotifyDelegate = new EndOperationDelegate(this.OnEndGetPowerNotify);
            }
            if ((this.onGetPowerNotifyCompletedDelegate == null)) {
                this.onGetPowerNotifyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPowerNotifyCompleted);
            }
            base.InvokeAsync(this.onBeginGetPowerNotifyDelegate, null, this.onEndGetPowerNotifyDelegate, this.onGetPowerNotifyCompletedDelegate, userState);
        }
        
        public void SetPowerNotify(WSPoS.POSPrinterServiceReference.PowerNotification PowerNotify) {
            base.Channel.SetPowerNotify(PowerNotify);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetPowerNotify(WSPoS.POSPrinterServiceReference.PowerNotification PowerNotify, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetPowerNotify(PowerNotify, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetPowerNotify(System.IAsyncResult result) {
            base.Channel.EndSetPowerNotify(result);
        }
        
        private System.IAsyncResult OnBeginSetPowerNotify(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WSPoS.POSPrinterServiceReference.PowerNotification PowerNotify = ((WSPoS.POSPrinterServiceReference.PowerNotification)(inValues[0]));
            return this.BeginSetPowerNotify(PowerNotify, callback, asyncState);
        }
        
        private object[] OnEndSetPowerNotify(System.IAsyncResult result) {
            this.EndSetPowerNotify(result);
            return null;
        }
        
        private void OnSetPowerNotifyCompleted(object state) {
            if ((this.SetPowerNotifyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetPowerNotifyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetPowerNotifyAsync(WSPoS.POSPrinterServiceReference.PowerNotification PowerNotify) {
            this.SetPowerNotifyAsync(PowerNotify, null);
        }
        
        public void SetPowerNotifyAsync(WSPoS.POSPrinterServiceReference.PowerNotification PowerNotify, object userState) {
            if ((this.onBeginSetPowerNotifyDelegate == null)) {
                this.onBeginSetPowerNotifyDelegate = new BeginOperationDelegate(this.OnBeginSetPowerNotify);
            }
            if ((this.onEndSetPowerNotifyDelegate == null)) {
                this.onEndSetPowerNotifyDelegate = new EndOperationDelegate(this.OnEndSetPowerNotify);
            }
            if ((this.onSetPowerNotifyCompletedDelegate == null)) {
                this.onSetPowerNotifyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetPowerNotifyCompleted);
            }
            base.InvokeAsync(this.onBeginSetPowerNotifyDelegate, new object[] {
                        PowerNotify}, this.onEndSetPowerNotifyDelegate, this.onSetPowerNotifyCompletedDelegate, userState);
        }
        
        public WSPoS.POSPrinterServiceReference.PowerState GetPowerState() {
            return base.Channel.GetPowerState();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPowerState(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPowerState(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WSPoS.POSPrinterServiceReference.PowerState EndGetPowerState(System.IAsyncResult result) {
            return base.Channel.EndGetPowerState(result);
        }
        
        private System.IAsyncResult OnBeginGetPowerState(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetPowerState(callback, asyncState);
        }
        
        private object[] OnEndGetPowerState(System.IAsyncResult result) {
            WSPoS.POSPrinterServiceReference.PowerState retVal = this.EndGetPowerState(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPowerStateCompleted(object state) {
            if ((this.GetPowerStateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPowerStateCompleted(this, new GetPowerStateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPowerStateAsync() {
            this.GetPowerStateAsync(null);
        }
        
        public void GetPowerStateAsync(object userState) {
            if ((this.onBeginGetPowerStateDelegate == null)) {
                this.onBeginGetPowerStateDelegate = new BeginOperationDelegate(this.OnBeginGetPowerState);
            }
            if ((this.onEndGetPowerStateDelegate == null)) {
                this.onEndGetPowerStateDelegate = new EndOperationDelegate(this.OnEndGetPowerState);
            }
            if ((this.onGetPowerStateCompletedDelegate == null)) {
                this.onGetPowerStateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPowerStateCompleted);
            }
            base.InvokeAsync(this.onBeginGetPowerStateDelegate, null, this.onEndGetPowerStateDelegate, this.onGetPowerStateCompletedDelegate, userState);
        }
        
        public WSPoS.POSPrinterServiceReference.ControlState GetState() {
            return base.Channel.GetState();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetState(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetState(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WSPoS.POSPrinterServiceReference.ControlState EndGetState(System.IAsyncResult result) {
            return base.Channel.EndGetState(result);
        }
        
        private System.IAsyncResult OnBeginGetState(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetState(callback, asyncState);
        }
        
        private object[] OnEndGetState(System.IAsyncResult result) {
            WSPoS.POSPrinterServiceReference.ControlState retVal = this.EndGetState(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStateCompleted(object state) {
            if ((this.GetStateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStateCompleted(this, new GetStateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStateAsync() {
            this.GetStateAsync(null);
        }
        
        public void GetStateAsync(object userState) {
            if ((this.onBeginGetStateDelegate == null)) {
                this.onBeginGetStateDelegate = new BeginOperationDelegate(this.OnBeginGetState);
            }
            if ((this.onEndGetStateDelegate == null)) {
                this.onEndGetStateDelegate = new EndOperationDelegate(this.OnEndGetState);
            }
            if ((this.onGetStateCompletedDelegate == null)) {
                this.onGetStateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStateCompleted);
            }
            base.InvokeAsync(this.onBeginGetStateDelegate, null, this.onEndGetStateDelegate, this.onGetStateCompletedDelegate, userState);
        }
        
        public string GetDeviceControlDescription() {
            return base.Channel.GetDeviceControlDescription();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDeviceControlDescription(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDeviceControlDescription(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetDeviceControlDescription(System.IAsyncResult result) {
            return base.Channel.EndGetDeviceControlDescription(result);
        }
        
        private System.IAsyncResult OnBeginGetDeviceControlDescription(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetDeviceControlDescription(callback, asyncState);
        }
        
        private object[] OnEndGetDeviceControlDescription(System.IAsyncResult result) {
            string retVal = this.EndGetDeviceControlDescription(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDeviceControlDescriptionCompleted(object state) {
            if ((this.GetDeviceControlDescriptionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDeviceControlDescriptionCompleted(this, new GetDeviceControlDescriptionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDeviceControlDescriptionAsync() {
            this.GetDeviceControlDescriptionAsync(null);
        }
        
        public void GetDeviceControlDescriptionAsync(object userState) {
            if ((this.onBeginGetDeviceControlDescriptionDelegate == null)) {
                this.onBeginGetDeviceControlDescriptionDelegate = new BeginOperationDelegate(this.OnBeginGetDeviceControlDescription);
            }
            if ((this.onEndGetDeviceControlDescriptionDelegate == null)) {
                this.onEndGetDeviceControlDescriptionDelegate = new EndOperationDelegate(this.OnEndGetDeviceControlDescription);
            }
            if ((this.onGetDeviceControlDescriptionCompletedDelegate == null)) {
                this.onGetDeviceControlDescriptionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDeviceControlDescriptionCompleted);
            }
            base.InvokeAsync(this.onBeginGetDeviceControlDescriptionDelegate, null, this.onEndGetDeviceControlDescriptionDelegate, this.onGetDeviceControlDescriptionCompletedDelegate, userState);
        }
        
        public WSPoS.POSPrinterServiceReference.UposVersion GetDeviceControlVersion() {
            return base.Channel.GetDeviceControlVersion();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDeviceControlVersion(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDeviceControlVersion(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WSPoS.POSPrinterServiceReference.UposVersion EndGetDeviceControlVersion(System.IAsyncResult result) {
            return base.Channel.EndGetDeviceControlVersion(result);
        }
        
        private System.IAsyncResult OnBeginGetDeviceControlVersion(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetDeviceControlVersion(callback, asyncState);
        }
        
        private object[] OnEndGetDeviceControlVersion(System.IAsyncResult result) {
            WSPoS.POSPrinterServiceReference.UposVersion retVal = this.EndGetDeviceControlVersion(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDeviceControlVersionCompleted(object state) {
            if ((this.GetDeviceControlVersionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDeviceControlVersionCompleted(this, new GetDeviceControlVersionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDeviceControlVersionAsync() {
            this.GetDeviceControlVersionAsync(null);
        }
        
        public void GetDeviceControlVersionAsync(object userState) {
            if ((this.onBeginGetDeviceControlVersionDelegate == null)) {
                this.onBeginGetDeviceControlVersionDelegate = new BeginOperationDelegate(this.OnBeginGetDeviceControlVersion);
            }
            if ((this.onEndGetDeviceControlVersionDelegate == null)) {
                this.onEndGetDeviceControlVersionDelegate = new EndOperationDelegate(this.OnEndGetDeviceControlVersion);
            }
            if ((this.onGetDeviceControlVersionCompletedDelegate == null)) {
                this.onGetDeviceControlVersionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDeviceControlVersionCompleted);
            }
            base.InvokeAsync(this.onBeginGetDeviceControlVersionDelegate, null, this.onEndGetDeviceControlVersionDelegate, this.onGetDeviceControlVersionCompletedDelegate, userState);
        }
        
        public string GetDeviceServiceDescription() {
            return base.Channel.GetDeviceServiceDescription();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDeviceServiceDescription(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDeviceServiceDescription(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetDeviceServiceDescription(System.IAsyncResult result) {
            return base.Channel.EndGetDeviceServiceDescription(result);
        }
        
        private System.IAsyncResult OnBeginGetDeviceServiceDescription(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetDeviceServiceDescription(callback, asyncState);
        }
        
        private object[] OnEndGetDeviceServiceDescription(System.IAsyncResult result) {
            string retVal = this.EndGetDeviceServiceDescription(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDeviceServiceDescriptionCompleted(object state) {
            if ((this.GetDeviceServiceDescriptionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDeviceServiceDescriptionCompleted(this, new GetDeviceServiceDescriptionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDeviceServiceDescriptionAsync() {
            this.GetDeviceServiceDescriptionAsync(null);
        }
        
        public void GetDeviceServiceDescriptionAsync(object userState) {
            if ((this.onBeginGetDeviceServiceDescriptionDelegate == null)) {
                this.onBeginGetDeviceServiceDescriptionDelegate = new BeginOperationDelegate(this.OnBeginGetDeviceServiceDescription);
            }
            if ((this.onEndGetDeviceServiceDescriptionDelegate == null)) {
                this.onEndGetDeviceServiceDescriptionDelegate = new EndOperationDelegate(this.OnEndGetDeviceServiceDescription);
            }
            if ((this.onGetDeviceServiceDescriptionCompletedDelegate == null)) {
                this.onGetDeviceServiceDescriptionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDeviceServiceDescriptionCompleted);
            }
            base.InvokeAsync(this.onBeginGetDeviceServiceDescriptionDelegate, null, this.onEndGetDeviceServiceDescriptionDelegate, this.onGetDeviceServiceDescriptionCompletedDelegate, userState);
        }
        
        public WSPoS.POSPrinterServiceReference.UposVersion GetDeviceServiceVersion() {
            return base.Channel.GetDeviceServiceVersion();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDeviceServiceVersion(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDeviceServiceVersion(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WSPoS.POSPrinterServiceReference.UposVersion EndGetDeviceServiceVersion(System.IAsyncResult result) {
            return base.Channel.EndGetDeviceServiceVersion(result);
        }
        
        private System.IAsyncResult OnBeginGetDeviceServiceVersion(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetDeviceServiceVersion(callback, asyncState);
        }
        
        private object[] OnEndGetDeviceServiceVersion(System.IAsyncResult result) {
            WSPoS.POSPrinterServiceReference.UposVersion retVal = this.EndGetDeviceServiceVersion(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDeviceServiceVersionCompleted(object state) {
            if ((this.GetDeviceServiceVersionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDeviceServiceVersionCompleted(this, new GetDeviceServiceVersionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDeviceServiceVersionAsync() {
            this.GetDeviceServiceVersionAsync(null);
        }
        
        public void GetDeviceServiceVersionAsync(object userState) {
            if ((this.onBeginGetDeviceServiceVersionDelegate == null)) {
                this.onBeginGetDeviceServiceVersionDelegate = new BeginOperationDelegate(this.OnBeginGetDeviceServiceVersion);
            }
            if ((this.onEndGetDeviceServiceVersionDelegate == null)) {
                this.onEndGetDeviceServiceVersionDelegate = new EndOperationDelegate(this.OnEndGetDeviceServiceVersion);
            }
            if ((this.onGetDeviceServiceVersionCompletedDelegate == null)) {
                this.onGetDeviceServiceVersionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDeviceServiceVersionCompleted);
            }
            base.InvokeAsync(this.onBeginGetDeviceServiceVersionDelegate, null, this.onEndGetDeviceServiceVersionDelegate, this.onGetDeviceServiceVersionCompletedDelegate, userState);
        }
        
        public string GetPhysicalDeviceDescription() {
            return base.Channel.GetPhysicalDeviceDescription();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPhysicalDeviceDescription(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPhysicalDeviceDescription(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetPhysicalDeviceDescription(System.IAsyncResult result) {
            return base.Channel.EndGetPhysicalDeviceDescription(result);
        }
        
        private System.IAsyncResult OnBeginGetPhysicalDeviceDescription(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetPhysicalDeviceDescription(callback, asyncState);
        }
        
        private object[] OnEndGetPhysicalDeviceDescription(System.IAsyncResult result) {
            string retVal = this.EndGetPhysicalDeviceDescription(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPhysicalDeviceDescriptionCompleted(object state) {
            if ((this.GetPhysicalDeviceDescriptionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPhysicalDeviceDescriptionCompleted(this, new GetPhysicalDeviceDescriptionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPhysicalDeviceDescriptionAsync() {
            this.GetPhysicalDeviceDescriptionAsync(null);
        }
        
        public void GetPhysicalDeviceDescriptionAsync(object userState) {
            if ((this.onBeginGetPhysicalDeviceDescriptionDelegate == null)) {
                this.onBeginGetPhysicalDeviceDescriptionDelegate = new BeginOperationDelegate(this.OnBeginGetPhysicalDeviceDescription);
            }
            if ((this.onEndGetPhysicalDeviceDescriptionDelegate == null)) {
                this.onEndGetPhysicalDeviceDescriptionDelegate = new EndOperationDelegate(this.OnEndGetPhysicalDeviceDescription);
            }
            if ((this.onGetPhysicalDeviceDescriptionCompletedDelegate == null)) {
                this.onGetPhysicalDeviceDescriptionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPhysicalDeviceDescriptionCompleted);
            }
            base.InvokeAsync(this.onBeginGetPhysicalDeviceDescriptionDelegate, null, this.onEndGetPhysicalDeviceDescriptionDelegate, this.onGetPhysicalDeviceDescriptionCompletedDelegate, userState);
        }
        
        public string GetPhysicalDeviceName() {
            return base.Channel.GetPhysicalDeviceName();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPhysicalDeviceName(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPhysicalDeviceName(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetPhysicalDeviceName(System.IAsyncResult result) {
            return base.Channel.EndGetPhysicalDeviceName(result);
        }
        
        private System.IAsyncResult OnBeginGetPhysicalDeviceName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetPhysicalDeviceName(callback, asyncState);
        }
        
        private object[] OnEndGetPhysicalDeviceName(System.IAsyncResult result) {
            string retVal = this.EndGetPhysicalDeviceName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPhysicalDeviceNameCompleted(object state) {
            if ((this.GetPhysicalDeviceNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPhysicalDeviceNameCompleted(this, new GetPhysicalDeviceNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPhysicalDeviceNameAsync() {
            this.GetPhysicalDeviceNameAsync(null);
        }
        
        public void GetPhysicalDeviceNameAsync(object userState) {
            if ((this.onBeginGetPhysicalDeviceNameDelegate == null)) {
                this.onBeginGetPhysicalDeviceNameDelegate = new BeginOperationDelegate(this.OnBeginGetPhysicalDeviceName);
            }
            if ((this.onEndGetPhysicalDeviceNameDelegate == null)) {
                this.onEndGetPhysicalDeviceNameDelegate = new EndOperationDelegate(this.OnEndGetPhysicalDeviceName);
            }
            if ((this.onGetPhysicalDeviceNameCompletedDelegate == null)) {
                this.onGetPhysicalDeviceNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPhysicalDeviceNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetPhysicalDeviceNameDelegate, null, this.onEndGetPhysicalDeviceNameDelegate, this.onGetPhysicalDeviceNameCompletedDelegate, userState);
        }
        
        public WSPoS.POSPrinterServiceReference.CharacterSetCapability GetCapCharacterSet() {
            return base.Channel.GetCapCharacterSet();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapCharacterSet(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapCharacterSet(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WSPoS.POSPrinterServiceReference.CharacterSetCapability EndGetCapCharacterSet(System.IAsyncResult result) {
            return base.Channel.EndGetCapCharacterSet(result);
        }
        
        private System.IAsyncResult OnBeginGetCapCharacterSet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapCharacterSet(callback, asyncState);
        }
        
        private object[] OnEndGetCapCharacterSet(System.IAsyncResult result) {
            WSPoS.POSPrinterServiceReference.CharacterSetCapability retVal = this.EndGetCapCharacterSet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapCharacterSetCompleted(object state) {
            if ((this.GetCapCharacterSetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapCharacterSetCompleted(this, new GetCapCharacterSetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapCharacterSetAsync() {
            this.GetCapCharacterSetAsync(null);
        }
        
        public void GetCapCharacterSetAsync(object userState) {
            if ((this.onBeginGetCapCharacterSetDelegate == null)) {
                this.onBeginGetCapCharacterSetDelegate = new BeginOperationDelegate(this.OnBeginGetCapCharacterSet);
            }
            if ((this.onEndGetCapCharacterSetDelegate == null)) {
                this.onEndGetCapCharacterSetDelegate = new EndOperationDelegate(this.OnEndGetCapCharacterSet);
            }
            if ((this.onGetCapCharacterSetCompletedDelegate == null)) {
                this.onGetCapCharacterSetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapCharacterSetCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapCharacterSetDelegate, null, this.onEndGetCapCharacterSetDelegate, this.onGetCapCharacterSetCompletedDelegate, userState);
        }
        
        public bool GetCapConcurrentJrnRec() {
            return base.Channel.GetCapConcurrentJrnRec();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapConcurrentJrnRec(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapConcurrentJrnRec(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapConcurrentJrnRec(System.IAsyncResult result) {
            return base.Channel.EndGetCapConcurrentJrnRec(result);
        }
        
        private System.IAsyncResult OnBeginGetCapConcurrentJrnRec(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapConcurrentJrnRec(callback, asyncState);
        }
        
        private object[] OnEndGetCapConcurrentJrnRec(System.IAsyncResult result) {
            bool retVal = this.EndGetCapConcurrentJrnRec(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapConcurrentJrnRecCompleted(object state) {
            if ((this.GetCapConcurrentJrnRecCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapConcurrentJrnRecCompleted(this, new GetCapConcurrentJrnRecCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapConcurrentJrnRecAsync() {
            this.GetCapConcurrentJrnRecAsync(null);
        }
        
        public void GetCapConcurrentJrnRecAsync(object userState) {
            if ((this.onBeginGetCapConcurrentJrnRecDelegate == null)) {
                this.onBeginGetCapConcurrentJrnRecDelegate = new BeginOperationDelegate(this.OnBeginGetCapConcurrentJrnRec);
            }
            if ((this.onEndGetCapConcurrentJrnRecDelegate == null)) {
                this.onEndGetCapConcurrentJrnRecDelegate = new EndOperationDelegate(this.OnEndGetCapConcurrentJrnRec);
            }
            if ((this.onGetCapConcurrentJrnRecCompletedDelegate == null)) {
                this.onGetCapConcurrentJrnRecCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapConcurrentJrnRecCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapConcurrentJrnRecDelegate, null, this.onEndGetCapConcurrentJrnRecDelegate, this.onGetCapConcurrentJrnRecCompletedDelegate, userState);
        }
        
        public bool GetCapConcurrentJrnSlp() {
            return base.Channel.GetCapConcurrentJrnSlp();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapConcurrentJrnSlp(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapConcurrentJrnSlp(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapConcurrentJrnSlp(System.IAsyncResult result) {
            return base.Channel.EndGetCapConcurrentJrnSlp(result);
        }
        
        private System.IAsyncResult OnBeginGetCapConcurrentJrnSlp(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapConcurrentJrnSlp(callback, asyncState);
        }
        
        private object[] OnEndGetCapConcurrentJrnSlp(System.IAsyncResult result) {
            bool retVal = this.EndGetCapConcurrentJrnSlp(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapConcurrentJrnSlpCompleted(object state) {
            if ((this.GetCapConcurrentJrnSlpCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapConcurrentJrnSlpCompleted(this, new GetCapConcurrentJrnSlpCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapConcurrentJrnSlpAsync() {
            this.GetCapConcurrentJrnSlpAsync(null);
        }
        
        public void GetCapConcurrentJrnSlpAsync(object userState) {
            if ((this.onBeginGetCapConcurrentJrnSlpDelegate == null)) {
                this.onBeginGetCapConcurrentJrnSlpDelegate = new BeginOperationDelegate(this.OnBeginGetCapConcurrentJrnSlp);
            }
            if ((this.onEndGetCapConcurrentJrnSlpDelegate == null)) {
                this.onEndGetCapConcurrentJrnSlpDelegate = new EndOperationDelegate(this.OnEndGetCapConcurrentJrnSlp);
            }
            if ((this.onGetCapConcurrentJrnSlpCompletedDelegate == null)) {
                this.onGetCapConcurrentJrnSlpCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapConcurrentJrnSlpCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapConcurrentJrnSlpDelegate, null, this.onEndGetCapConcurrentJrnSlpDelegate, this.onGetCapConcurrentJrnSlpCompletedDelegate, userState);
        }
        
        public bool GetCapConcurrentPageMode() {
            return base.Channel.GetCapConcurrentPageMode();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapConcurrentPageMode(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapConcurrentPageMode(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapConcurrentPageMode(System.IAsyncResult result) {
            return base.Channel.EndGetCapConcurrentPageMode(result);
        }
        
        private System.IAsyncResult OnBeginGetCapConcurrentPageMode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapConcurrentPageMode(callback, asyncState);
        }
        
        private object[] OnEndGetCapConcurrentPageMode(System.IAsyncResult result) {
            bool retVal = this.EndGetCapConcurrentPageMode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapConcurrentPageModeCompleted(object state) {
            if ((this.GetCapConcurrentPageModeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapConcurrentPageModeCompleted(this, new GetCapConcurrentPageModeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapConcurrentPageModeAsync() {
            this.GetCapConcurrentPageModeAsync(null);
        }
        
        public void GetCapConcurrentPageModeAsync(object userState) {
            if ((this.onBeginGetCapConcurrentPageModeDelegate == null)) {
                this.onBeginGetCapConcurrentPageModeDelegate = new BeginOperationDelegate(this.OnBeginGetCapConcurrentPageMode);
            }
            if ((this.onEndGetCapConcurrentPageModeDelegate == null)) {
                this.onEndGetCapConcurrentPageModeDelegate = new EndOperationDelegate(this.OnEndGetCapConcurrentPageMode);
            }
            if ((this.onGetCapConcurrentPageModeCompletedDelegate == null)) {
                this.onGetCapConcurrentPageModeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapConcurrentPageModeCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapConcurrentPageModeDelegate, null, this.onEndGetCapConcurrentPageModeDelegate, this.onGetCapConcurrentPageModeCompletedDelegate, userState);
        }
        
        public bool GetCapConcurrentRecSlp() {
            return base.Channel.GetCapConcurrentRecSlp();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapConcurrentRecSlp(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapConcurrentRecSlp(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapConcurrentRecSlp(System.IAsyncResult result) {
            return base.Channel.EndGetCapConcurrentRecSlp(result);
        }
        
        private System.IAsyncResult OnBeginGetCapConcurrentRecSlp(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapConcurrentRecSlp(callback, asyncState);
        }
        
        private object[] OnEndGetCapConcurrentRecSlp(System.IAsyncResult result) {
            bool retVal = this.EndGetCapConcurrentRecSlp(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapConcurrentRecSlpCompleted(object state) {
            if ((this.GetCapConcurrentRecSlpCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapConcurrentRecSlpCompleted(this, new GetCapConcurrentRecSlpCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapConcurrentRecSlpAsync() {
            this.GetCapConcurrentRecSlpAsync(null);
        }
        
        public void GetCapConcurrentRecSlpAsync(object userState) {
            if ((this.onBeginGetCapConcurrentRecSlpDelegate == null)) {
                this.onBeginGetCapConcurrentRecSlpDelegate = new BeginOperationDelegate(this.OnBeginGetCapConcurrentRecSlp);
            }
            if ((this.onEndGetCapConcurrentRecSlpDelegate == null)) {
                this.onEndGetCapConcurrentRecSlpDelegate = new EndOperationDelegate(this.OnEndGetCapConcurrentRecSlp);
            }
            if ((this.onGetCapConcurrentRecSlpCompletedDelegate == null)) {
                this.onGetCapConcurrentRecSlpCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapConcurrentRecSlpCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapConcurrentRecSlpDelegate, null, this.onEndGetCapConcurrentRecSlpDelegate, this.onGetCapConcurrentRecSlpCompletedDelegate, userState);
        }
        
        public bool GetCapCoverSensor() {
            return base.Channel.GetCapCoverSensor();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapCoverSensor(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapCoverSensor(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapCoverSensor(System.IAsyncResult result) {
            return base.Channel.EndGetCapCoverSensor(result);
        }
        
        private System.IAsyncResult OnBeginGetCapCoverSensor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapCoverSensor(callback, asyncState);
        }
        
        private object[] OnEndGetCapCoverSensor(System.IAsyncResult result) {
            bool retVal = this.EndGetCapCoverSensor(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapCoverSensorCompleted(object state) {
            if ((this.GetCapCoverSensorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapCoverSensorCompleted(this, new GetCapCoverSensorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapCoverSensorAsync() {
            this.GetCapCoverSensorAsync(null);
        }
        
        public void GetCapCoverSensorAsync(object userState) {
            if ((this.onBeginGetCapCoverSensorDelegate == null)) {
                this.onBeginGetCapCoverSensorDelegate = new BeginOperationDelegate(this.OnBeginGetCapCoverSensor);
            }
            if ((this.onEndGetCapCoverSensorDelegate == null)) {
                this.onEndGetCapCoverSensorDelegate = new EndOperationDelegate(this.OnEndGetCapCoverSensor);
            }
            if ((this.onGetCapCoverSensorCompletedDelegate == null)) {
                this.onGetCapCoverSensorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapCoverSensorCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapCoverSensorDelegate, null, this.onEndGetCapCoverSensorDelegate, this.onGetCapCoverSensorCompletedDelegate, userState);
        }
        
        public bool GetCapMapCharacterSet() {
            return base.Channel.GetCapMapCharacterSet();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapMapCharacterSet(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapMapCharacterSet(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapMapCharacterSet(System.IAsyncResult result) {
            return base.Channel.EndGetCapMapCharacterSet(result);
        }
        
        private System.IAsyncResult OnBeginGetCapMapCharacterSet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapMapCharacterSet(callback, asyncState);
        }
        
        private object[] OnEndGetCapMapCharacterSet(System.IAsyncResult result) {
            bool retVal = this.EndGetCapMapCharacterSet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapMapCharacterSetCompleted(object state) {
            if ((this.GetCapMapCharacterSetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapMapCharacterSetCompleted(this, new GetCapMapCharacterSetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapMapCharacterSetAsync() {
            this.GetCapMapCharacterSetAsync(null);
        }
        
        public void GetCapMapCharacterSetAsync(object userState) {
            if ((this.onBeginGetCapMapCharacterSetDelegate == null)) {
                this.onBeginGetCapMapCharacterSetDelegate = new BeginOperationDelegate(this.OnBeginGetCapMapCharacterSet);
            }
            if ((this.onEndGetCapMapCharacterSetDelegate == null)) {
                this.onEndGetCapMapCharacterSetDelegate = new EndOperationDelegate(this.OnEndGetCapMapCharacterSet);
            }
            if ((this.onGetCapMapCharacterSetCompletedDelegate == null)) {
                this.onGetCapMapCharacterSetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapMapCharacterSetCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapMapCharacterSetDelegate, null, this.onEndGetCapMapCharacterSetDelegate, this.onGetCapMapCharacterSetCompletedDelegate, userState);
        }
        
        public bool GetCapTransaction() {
            return base.Channel.GetCapTransaction();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapTransaction(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapTransaction(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapTransaction(System.IAsyncResult result) {
            return base.Channel.EndGetCapTransaction(result);
        }
        
        private System.IAsyncResult OnBeginGetCapTransaction(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapTransaction(callback, asyncState);
        }
        
        private object[] OnEndGetCapTransaction(System.IAsyncResult result) {
            bool retVal = this.EndGetCapTransaction(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapTransactionCompleted(object state) {
            if ((this.GetCapTransactionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapTransactionCompleted(this, new GetCapTransactionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapTransactionAsync() {
            this.GetCapTransactionAsync(null);
        }
        
        public void GetCapTransactionAsync(object userState) {
            if ((this.onBeginGetCapTransactionDelegate == null)) {
                this.onBeginGetCapTransactionDelegate = new BeginOperationDelegate(this.OnBeginGetCapTransaction);
            }
            if ((this.onEndGetCapTransactionDelegate == null)) {
                this.onEndGetCapTransactionDelegate = new EndOperationDelegate(this.OnEndGetCapTransaction);
            }
            if ((this.onGetCapTransactionCompletedDelegate == null)) {
                this.onGetCapTransactionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapTransactionCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapTransactionDelegate, null, this.onEndGetCapTransactionDelegate, this.onGetCapTransactionCompletedDelegate, userState);
        }
        
        public bool GetCapJrnPresent() {
            return base.Channel.GetCapJrnPresent();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapJrnPresent(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapJrnPresent(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapJrnPresent(System.IAsyncResult result) {
            return base.Channel.EndGetCapJrnPresent(result);
        }
        
        private System.IAsyncResult OnBeginGetCapJrnPresent(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapJrnPresent(callback, asyncState);
        }
        
        private object[] OnEndGetCapJrnPresent(System.IAsyncResult result) {
            bool retVal = this.EndGetCapJrnPresent(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapJrnPresentCompleted(object state) {
            if ((this.GetCapJrnPresentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapJrnPresentCompleted(this, new GetCapJrnPresentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapJrnPresentAsync() {
            this.GetCapJrnPresentAsync(null);
        }
        
        public void GetCapJrnPresentAsync(object userState) {
            if ((this.onBeginGetCapJrnPresentDelegate == null)) {
                this.onBeginGetCapJrnPresentDelegate = new BeginOperationDelegate(this.OnBeginGetCapJrnPresent);
            }
            if ((this.onEndGetCapJrnPresentDelegate == null)) {
                this.onEndGetCapJrnPresentDelegate = new EndOperationDelegate(this.OnEndGetCapJrnPresent);
            }
            if ((this.onGetCapJrnPresentCompletedDelegate == null)) {
                this.onGetCapJrnPresentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapJrnPresentCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapJrnPresentDelegate, null, this.onEndGetCapJrnPresentDelegate, this.onGetCapJrnPresentCompletedDelegate, userState);
        }
        
        public bool GetCapJrn2Color() {
            return base.Channel.GetCapJrn2Color();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapJrn2Color(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapJrn2Color(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetCapJrn2Color(System.IAsyncResult result) {
            return base.Channel.EndGetCapJrn2Color(result);
        }
        
        private System.IAsyncResult OnBeginGetCapJrn2Color(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCapJrn2Color(callback, asyncState);
        }
        
        private object[] OnEndGetCapJrn2Color(System.IAsyncResult result) {
            bool retVal = this.EndGetCapJrn2Color(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapJrn2ColorCompleted(object state) {
            if ((this.GetCapJrn2ColorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapJrn2ColorCompleted(this, new GetCapJrn2ColorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapJrn2ColorAsync() {
            this.GetCapJrn2ColorAsync(null);
        }
        
        public void GetCapJrn2ColorAsync(object userState) {
            if ((this.onBeginGetCapJrn2ColorDelegate == null)) {
                this.onBeginGetCapJrn2ColorDelegate = new BeginOperationDelegate(this.OnBeginGetCapJrn2Color);
            }
            if ((this.onEndGetCapJrn2ColorDelegate == null)) {
                this.onEndGetCapJrn2ColorDelegate = new EndOperationDelegate(this.OnEndGetCapJrn2Color);
            }
            if ((this.onGetCapJrn2ColorCompletedDelegate == null)) {
                this.onGetCapJrn2ColorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapJrn2ColorCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapJrn2ColorDelegate, null, this.onEndGetCapJrn2ColorDelegate, this.onGetCapJrn2ColorCompletedDelegate, userState);
        }
    }
}
